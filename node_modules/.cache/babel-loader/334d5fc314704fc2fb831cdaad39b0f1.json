{"ast":null,"code":"import { userService } from \"../../../services\";\nexport const MaterialCodeMasterController = {\n  getMaterialCodeBrowse,\n  getPartyNameList,\n  insertMaterialCode,\n  getMaterialDetailById,\n  deleteMaterialCode\n};\nasync function getMaterialCodeBrowse(filters, params) {\n  try {\n    let apiEndpoint = `MaterialCode/BrowseMaterialCode?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint, filters);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getPartyNameList(filters) {\n  try {\n    let apiEndpoint = `/Dropdown/GetListCompanyMaterialCode`;\n    let response = await userService.post(apiEndpoint, filters);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function insertMaterialCode(filters) {\n  try {\n    let apiEndpoint = `/MaterialCode/MaterialCodeInsert`;\n    let response = await userService.post(apiEndpoint, filters);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getMaterialDetailById(payload) {\n  try {\n    let apiEndpoint = `/MaterialCode/MaterialCodePreview`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function deleteMaterialCode(payload) {\n  try {\n    let apiEndpoint = `/MaterialCode/MaterialCodeDelete`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["userService","MaterialCodeMasterController","getMaterialCodeBrowse","getPartyNameList","insertMaterialCode","getMaterialDetailById","deleteMaterialCode","filters","params","apiEndpoint","filter_value","pageNo","pageSize","sort_column","sort_order","response","post","data","status","alert","error","console","log","payload"],"sources":["F:/React code/diagnostic/src/_redux/controller/Masters/materialcode.controller.js"],"sourcesContent":["import { userService } from \"../../../services\";\r\n\r\nexport const MaterialCodeMasterController = {\r\n  getMaterialCodeBrowse,\r\n  getPartyNameList,\r\n  insertMaterialCode,\r\n  getMaterialDetailById,\r\n  deleteMaterialCode,\r\n};\r\n\r\nasync function getMaterialCodeBrowse(filters, params) {\r\n  try {\r\n    let apiEndpoint = `MaterialCode/BrowseMaterialCode?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getPartyNameList(filters) {\r\n  try {\r\n    let apiEndpoint = `/Dropdown/GetListCompanyMaterialCode`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function insertMaterialCode(filters) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodeInsert`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getMaterialDetailById(payload) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodePreview`;\r\n    let response = await userService.post(apiEndpoint, payload);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function deleteMaterialCode(payload) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodeDelete`;\r\n    let response = await userService.post(apiEndpoint, payload);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}