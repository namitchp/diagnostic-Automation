{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Accounts_Master\\\\tcs.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"@material-ui/core\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TCSAccount = _ref => {\n  _s();\n  let {\n    accountType\n  } = _ref;\n  const [companyList, setCompanyList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  const handlePageSizeChange = param => {\n    setParams({\n      ...params,\n      pageSize: param\n    });\n  };\n  const handlePageChange = param => {\n    // if(param>0){\n    setParams({\n      ...params,\n      pageNo: param\n    });\n    // }\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\"master/browse_account_master_tcs\", params, {\n      account_type: accountType\n    }, \"node\").then(data => {\n      if (data.status === 200) {\n        setBrowseListData(data.data);\n        setTotalRecords(data.totalRecords);\n      }\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setLoading(false);\n  };\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, accountType]);\n  useEffect(() => {\n    getBrowseListData();\n    // CommonController.commonApiCallFilter(\"Dropdown/GetCompanyList\").then(\n    //   (data) => {\n    //   }\n    // );\n  }, []);\n  let columns = [{\n    field: \"company_id\",\n    headerName: \"ID\",\n    width: 300,\n    hide: false\n  }, {\n    field: \"company_name\",\n    headerName: \"Company Name\",\n    width: 700,\n    hide: false\n  }, {\n    field: \"tcs_per\",\n    headerName: \"TCS Per\",\n    width: 400,\n    hide: false\n  }, {\n    field: \"\",\n    headerName: \"Action\",\n    width: 180,\n    hide: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 ml-3\",\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          size: \"small\"\n          // options={groupList}\n          ,\n          getOptionLabel: option => option.value,\n          fullWidth: true\n          // value={{ id: formData?.group_id, value: formData?.group_name }}\n          // onChange={(event, value) =>\n          //   handleAutoChange(\"group_id\", \"group_name\", value)\n          // }\n          ,\n          variant: \"outlined\",\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Group\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Company Id\",\n          fullWidth: true\n          // disabled\n          ,\n          variant: \"outlined\",\n          size: \"small\",\n          name: \"company_id\"\n          // value={formData.company_id}\n          // onChange={handleChange}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\"\n          // onClick={saveForm}\n          ,\n          color: \"primary\",\n          disableElevation: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-3 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search\",\n        fullWidth: true\n        // disabled\n        ,\n        variant: \"outlined\",\n        size: \"small\",\n        name: \"company_id\"\n        // value={formData.company_id}\n        // onChange={handleChange}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo\n        // getRowClassName={(params)=>params.row.srno%2?\"odd\" :\"even\"}\n        ,\n        rowsPerPageOptions: [15, 25, 50, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30,\n        components: (browseListData === null || browseListData === void 0 ? void 0 : browseListData.length) > 0 ? {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        } : {},\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({\n              ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        }\n        // onColumnVisibilityChange={(e) => handleColumnHide(e)}\n        ,\n        columns: columns,\n        rows: browseListData //accountMasterList\n        ,\n        getRowId: browseListData => browseListData.company_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TCSAccount, \"BQpR/wDDKGN4O71ZapmTsUlOV2k=\");\n_c = TCSAccount;\nvar _c;\n$RefreshReg$(_c, \"TCSAccount\");","map":{"version":3,"names":["Button","Autocomplete","TextField","DataGrid","React","useEffect","useState","showErrorToast","CustomPagination","CustomNoRowsOverlay","CommonController","TCSAccount","accountType","companyList","setCompanyList","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handlePageSizeChange","param","handlePageChange","getBrowseListData","commonApiCall","account_type","then","data","status","totalRecords","catch","err","columns","field","headerName","width","hide","option","value","height","length","Pagination","NoRowsOverlay","sort","company_id"],"sources":["F:/React code/diagnostic/src/pages/Master/Accounts_Master/tcs.js"],"sourcesContent":["import { Button } from \"@material-ui/core\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nexport const TCSAccount = ({ accountType }) => {\n  const [companyList, setCompanyList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n// if(param>0){\n  setParams({ ...params, pageNo: param });\n// }\n  };\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"master/browse_account_master_tcs\",\n      params,\n      { account_type: accountType },\n      \"node\"\n    )\n      .then((data) => {\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.totalRecords);\n        }\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, accountType]);\n\n  useEffect(() => {\n    getBrowseListData();\n    // CommonController.commonApiCallFilter(\"Dropdown/GetCompanyList\").then(\n    //   (data) => {\n    //   }\n    // );\n  }, []);\n  let columns = [\n    {\n      field: \"company_id\",\n      headerName: \"ID\",\n      width: 300,\n      hide: false,\n    },\n    {\n      field: \"company_name\",\n      headerName: \"Company Name\",\n      width: 700,\n      hide: false,\n    },\n    {\n      field: \"tcs_per\",\n      headerName: \"TCS Per\",\n      width: 400,\n      hide: false,\n    },\n    {\n      field: \"\",\n      headerName: \"Action\",\n      width: 180,\n      hide: false,\n    },\n  ];\n  return (\n    <div className=\"py-3\">\n      <div className=\"row\">\n        <div className=\"col-md-3 ml-3\">\n          <Autocomplete\n            size=\"small\"\n            // options={groupList}\n            getOptionLabel={(option) => option.value}\n            fullWidth\n            // value={{ id: formData?.group_id, value: formData?.group_name }}\n            // onChange={(event, value) =>\n            //   handleAutoChange(\"group_id\", \"group_name\", value)\n            // }\n            variant=\"outlined\"\n            renderInput={(params) => (\n              <TextField {...params} label=\"Group\" variant=\"outlined\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Company Id\"\n            fullWidth\n            // disabled\n            variant=\"outlined\"\n            size=\"small\"\n            name=\"company_id\"\n            // value={formData.company_id}\n            // onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <Button\n            variant=\"contained\"\n            // onClick={saveForm}\n            color=\"primary\"\n            disableElevation\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n      <hr/>\n      <div className=\"col-md-3 mb-5\">\n            <TextField\n              label=\"Search\"\n              fullWidth\n              // disabled\n              variant=\"outlined\"\n              size=\"small\"\n              name=\"company_id\"\n              // value={formData.company_id}\n              // onChange={handleChange}\n            />\n          </div>\n      <div style={{ height: 500, width: \"100%\" }}>\n        <DataGrid\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          // getRowClassName={(params)=>params.row.srno%2?\"odd\" :\"even\"}\n          rowsPerPageOptions={[15, 25, 50, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData?.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          // onColumnVisibilityChange={(e) => handleColumnHide(e)}\n          columns={columns}\n          rows={browseListData} //accountMasterList\n          getRowId={(browseListData) => browseListData.company_id}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}