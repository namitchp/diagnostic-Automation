{"ast":null,"code":"import { userService } from \"../../../services\";\nexport const AccountMasterController = {\n  browseAccountData,\n  getAccountMasterFilters,\n  getSelectedAccountDetails,\n  accountHideUpdate,\n  updateAccountVerified\n};\nasync function browseAccountData(filters, params) {\n  try {\n    let apiEndpoint = `Account/AccountMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint, filters);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getAccountMasterFilters() {\n  try {\n    let apiEndpoint = `Dropdown/AccountMasterDropdown`;\n    let response = await userService.post(apiEndpoint, {});\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getSelectedAccountDetails(payload) {\n  try {\n    let apiEndpoint = `Account/AccountMasterPreview`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function accountHideUpdate(payload) {\n  try {\n    let apiEndpoint = `Account/UpdateAccountHide`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function updateAccountVerified(payload) {\n  try {\n    let apiEndpoint = `Account/UpdateAccountEdit`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["userService","AccountMasterController","browseAccountData","getAccountMasterFilters","getSelectedAccountDetails","accountHideUpdate","updateAccountVerified","filters","params","apiEndpoint","filter_value","pageNo","pageSize","sort_column","sort_order","response","post","data","status","alert","error","console","log","payload"],"sources":["F:/React code/diagnostic/src/_redux/controller/Masters/account.controller.js"],"sourcesContent":["import { userService } from \"../../../services\";\r\n\r\nexport const AccountMasterController = {\r\n    browseAccountData,\r\n    getAccountMasterFilters,\r\n    getSelectedAccountDetails,\r\n    accountHideUpdate,\r\n    updateAccountVerified\r\n}\r\nasync function browseAccountData(filters,params) {\r\n    try {\r\n        let apiEndpoint = `Account/AccountMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n\r\n        let response = await userService.post(apiEndpoint,filters);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\n\r\nasync function getAccountMasterFilters() {\r\n    try {\r\n        let apiEndpoint = `Dropdown/AccountMasterDropdown`;\r\n\r\n        let response = await userService.post(apiEndpoint,{});\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\nasync function getSelectedAccountDetails(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/AccountMasterPreview`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\nasync function accountHideUpdate(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountHide`;\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateAccountVerified(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountEdit`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n "],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAE/C,OAAO,MAAMC,uBAAuB,GAAG;EACnCC,iBAAiB;EACjBC,uBAAuB;EACvBC,yBAAyB;EACzBC,iBAAiB;EACjBC;AACJ,CAAC;AACD,eAAeJ,iBAAiB,CAACK,OAAO,EAACC,MAAM,EAAE;EAC7C,IAAI;IACA,IAAIC,WAAW,GAAI,4CAA2CD,MAAM,CAACE,YAAa,gBAAeF,MAAM,CAACG,MAAO,cAAaH,MAAM,CAACI,QAAS,gBAAeJ,MAAM,CAACK,WAAY,eAAcL,MAAM,CAACM,UAAW,EAAC;IAE/M,IAAIC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAI,CAACP,WAAW,EAACF,OAAO,CAAC;IAE1D,IAAIQ,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AAGA,eAAejB,uBAAuB,GAAG;EACrC,IAAI;IACA,IAAIM,WAAW,GAAI,gCAA+B;IAElD,IAAIM,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAI,CAACP,WAAW,EAAC,CAAC,CAAC,CAAC;IAErD,IAAIM,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AAEA,eAAehB,yBAAyB,CAACmB,OAAO,EAAE;EAC9C,IAAI;IACA,IAAId,WAAW,GAAI,8BAA6B;IAEhD,IAAIM,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAI,CAACP,WAAW,EAACc,OAAO,CAAC;IAE1D,IAAIR,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AACA,eAAef,iBAAiB,CAACkB,OAAO,EAAE;EACtC,IAAI;IACA,IAAId,WAAW,GAAI,2BAA0B;IAC7C,IAAIM,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAI,CAACP,WAAW,EAACc,OAAO,CAAC;IAC1D,IAAIR,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AAEA,eAAed,qBAAqB,CAACiB,OAAO,EAAE;EAC1C,IAAI;IACA,IAAId,WAAW,GAAI,2BAA0B;IAE7C,IAAIM,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAI,CAACP,WAAW,EAACc,OAAO,CAAC;IAE1D,IAAIR,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module"}