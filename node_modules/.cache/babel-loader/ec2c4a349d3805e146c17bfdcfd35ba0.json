{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Sales\\\\Sales Costing\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { getBrowseUserRight, showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport moment from \"moment\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport DateFilter from \"../../../components/dateFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SalesCostingBrowse = ({\n  onEdit\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(state => state.common.userRightList);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\"\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: \"\",\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null\n  });\n\n  const handleParams = event => {\n    setTimeout(() => {\n      setParams({ ...params,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const handleBodyParam = event => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam,\n        [event.target.name]: event.target.value\n      });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\"Costing/SalesCostingBrowse\", params, bodyParam).then(data => {\n      setBrowseListData(data.data);\n      setTotalRecords(data.recordsFiltered);\n    }).catch(err => {\n      showErrorToast(err);\n    });\n    setLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(data => setMarkEng(data.employeeList));\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page\n    });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam,\n      [type]: date\n    });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = id => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = id => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id\n    }).then(data => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyDown: e => {\n              if (e.keyCode === 13) {\n                handleParams(e);\n              }\n            },\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n          onDateUpdate: () => getBrowseListData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyDown: e => {\n              if (e.keyCode === 13) {\n                handleBodyParam(e);\n              }\n            },\n            name: \"party_name\",\n            label: \"Company Name\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            name: \"type\",\n            select: true,\n            label: \"Type\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Spares\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"projects\",\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"service\",\n              children: \"Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            select: true,\n            name: \"status\",\n            label: \"Status\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"spares\",\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2 mt-3\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onChange: e => {\n              handleBodyParam(e);\n            },\n            select: true,\n            name: \"mark_engg\",\n            label: \"Marketing Eng.\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), markEng && markEng.map((eng, indx) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: eng.value,\n                children: eng.value\n              }, indx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"id\",\n          headerName: \"Sr. no\",\n          width: 80\n        }, {\n          field: \"date\",\n          headerName: \"Date\",\n          width: 100\n        }, {\n          field: \"riv\",\n          headerName: \"Costing No\",\n          width: 120\n        }, {\n          field: \"company_id\",\n          headerName: \"Comp Id\",\n          width: 100\n        }, {\n          field: \"company_name\",\n          headerName: \"Company Name\",\n          width: 200\n        }, {\n          field: \"mark_engg\",\n          headerName: \"Marketing Eng.\",\n          width: 150\n        }, {\n          field: \"type\",\n          headerName: \"Type\",\n          width: 100\n        }, {\n          field: \"status_name\",\n          headerName: \"Status\",\n          width: 100\n        }, {\n          field: \"reference_name\",\n          headerName: \"Reference\",\n          width: 120\n        }, {\n          field: \"description\",\n          headerName: \"Description\",\n          width: 200\n        }, {\n          field: \"\",\n          headerName: \"Actions\",\n          renderCell: params => {\n            var _getBrowseUserRight, _getBrowseUserRight2, _getBrowseUserRight3;\n\n            return /*#__PURE__*/_jsxDEV(ActionButtons, {\n              onPreview: ((_getBrowseUserRight = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight === void 0 ? void 0 : _getBrowseUserRight.view_right) == \"True\" ? () => handleEdit(params.row.id) : null,\n              onEdit: ((_getBrowseUserRight2 = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight2 === void 0 ? void 0 : _getBrowseUserRight2.edit_button) == \"True\" ? () => handleEdit(params.row.id) : null,\n              onDelete: ((_getBrowseUserRight3 = getBrowseUserRight(getuserRightListResponse)) === null || _getBrowseUserRight3 === void 0 ? void 0 : _getBrowseUserRight3.delete_right) == \"True\" ? () => handleDeleteRow(params.row.id) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this);\n          },\n          width: 100\n        }],\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30 //components={{\n        //Pagination: CustomPagination,\n        //NoRowsOverlay: CustomNoRowsOverlay,\n        //       }}\n        ,\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        rows: browseListData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SalesCostingBrowse, \"Ug9wqEMP/uf2+TDJRgVlfptFZ0s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SalesCostingBrowse;\nexport default SalesCostingBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SalesCostingBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Sales/Sales Costing/browse.js"],"names":["TextField","MenuItem","DataGrid","React","useEffect","useState","getBrowseUserRight","showErrorToast","showSuccessToast","CustomPagination","CustomNoRowsOverlay","Loader","CommonController","ActionButtons","useDispatch","useSelector","selectedEmployeeId","moment","DatePicker","DateFilter","SalesCostingBrowse","onEdit","dispatch","getuserRightListResponse","state","common","userRightList","browseListData","setBrowseListData","totalRecord","setTotalRecords","loading","setLoading","markEng","setMarkEng","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","bodyParam","setBodyParam","user_id","chk_All","company_name","type","status","mark_engg","fromDate","toDate","handleParams","event","setTimeout","target","name","value","handleBodyParam","getBrowseListData","commonApiCall","then","data","recordsFiltered","catch","err","getMarkEngList","commonApiCallFilter","employeeList","handlePageSizeChange","param","handlePageChange","page","handleDateChange","date","handleEdit","id","handleDeleteRow","employee_id","valid","e","keyCode","map","eng","indx","height","width","field","headerName","renderCell","view_right","row","edit_button","delete_right","sort","length"],"mappings":"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","sourcesContent":["import { TextField, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\n\nimport moment from \"moment\";\n\nimport { DatePicker } from \"@material-ui/pickers\";\nimport DateFilter from \"../../../components/dateFilter\";\n\nconst SalesCostingBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [markEng, setMarkEng] = useState(null);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: \"\",\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Costing/SalesCostingBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n          \n         \n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n            },\n            {\n              field: \"riv\",\n              headerName: \"Costing No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"status_name\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesCostingBrowse;\n"]},"metadata":{},"sourceType":"module"}