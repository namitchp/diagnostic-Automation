{"ast":null,"code":"import { userService } from \"../../services\";\nexport const AuthController = {\n  checkUserCred,\n  checkAuthOTP,\n  getDecryptUserDetails\n};\nasync function checkUserCred(payload) {\n  try {\n    let apiEndpoint = `Login/CheckLoging`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function checkAuthOTP(payload) {\n  try {\n    let apiEndpoint = `Auth/token`;\n    let response = await userService.login(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getDecryptUserDetails(payload) {\n  try {\n    let apiEndpoint = `Login/UserLoginByEncryptUserId`;\n    let response = await userService.post(apiEndpoint, payload);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["userService","AuthController","checkUserCred","checkAuthOTP","getDecryptUserDetails","payload","apiEndpoint","response","post","data","status","alert","error","console","log","login"],"sources":["F:/React code/diagnostic/src/_redux/controller/auth.controller.js"],"sourcesContent":["import { userService } from \"../../services\";\r\n\r\nexport const AuthController = {\r\n    checkUserCred,\r\n    checkAuthOTP,\r\n    getDecryptUserDetails\r\n}\r\n\r\n\r\nasync function checkUserCred(payload) {\r\n    try {\r\n        let apiEndpoint = `Login/CheckLoging`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function checkAuthOTP(payload) {\r\n    try {\r\n        let apiEndpoint = `Auth/token`;\r\n\r\n        let response = await userService.login(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getDecryptUserDetails(payload) {\r\n    try {\r\n        let apiEndpoint = `Login/UserLoginByEncryptUserId`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n "],"mappings":"AAAA,SAASA,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,cAAc,GAAG;EAC1BC,aAAa;EACbC,YAAY;EACZC;AACJ,CAAC;AAGD,eAAeF,aAAa,CAACG,OAAO,EAAE;EAClC,IAAI;IACA,IAAIC,WAAW,GAAI,mBAAkB;IAErC,IAAIC,QAAQ,GAAG,MAAMP,WAAW,CAACQ,IAAI,CAACF,WAAW,EAACD,OAAO,CAAC;IAE1D,IAAIE,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AAEA,eAAeT,YAAY,CAACE,OAAO,EAAE;EACjC,IAAI;IACA,IAAIC,WAAW,GAAI,YAAW;IAE9B,IAAIC,QAAQ,GAAG,MAAMP,WAAW,CAACe,KAAK,CAACT,WAAW,EAACD,OAAO,CAAC;IAE3D,IAAIE,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ;AAEA,eAAeR,qBAAqB,CAACC,OAAO,EAAE;EAC1C,IAAI;IACA,IAAIC,WAAW,GAAI,gCAA+B;IAElD,IAAIC,QAAQ,GAAG,MAAMP,WAAW,CAACQ,IAAI,CAACF,WAAW,EAACD,OAAO,CAAC;IAE1D,IAAIE,QAAQ,EAAE;MACV,OAAQA,QAAQ,CAACE,IAAI;IACzB,CAAC,MACI;MACD,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,GAAG,EAAE;QAC9BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACxB;MACA,OAAO,IAAI;IACf;EACJ,CAAC,CACD,OAAOG,KAAK,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;IAC3B,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module"}