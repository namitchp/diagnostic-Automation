{"ast":null,"code":"export var amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n            to = _ref.to,\n            count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" \\u12A8 \").concat(count !== -1 ? count : \"\".concat(to, \" \\u1260\\u120B\\u12ED\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u12AE\\u12A8\").concat(value !== 1 ? 'ቦች' : 'ብ');\n        },\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ወደ ', \"\\u1308\\u133D \").concat(page).concat(selected ? '' : ' ሂድ');\n          }\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport var arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n          return 'امش للصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: function labelDisplayedRows(_ref2) {\n          var from = _ref2.from,\n            to = _ref2.to,\n            count = _ref2.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة');\n        },\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'امش إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n          return 'امش  للصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport var arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n          return 'إذهب الى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: function labelDisplayedRows(_ref3) {\n          var from = _ref3.from,\n            to = _ref3.to,\n            count = _ref3.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة');\n        },\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'إذهب إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n          return 'إذهب الى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport var azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Ulduz';\n          var lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \" \").concat(selected ? 'səhifə' : 'səhifəyə keç');\n          }\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport var bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n            to = _ref4.to,\n            count = _ref4.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \" \\u09A5\\u09C7\\u0995\\u09C7 \\u09AC\\u09C7\\u09B6\\u09BF\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u09B8\\u09CD\\u099F\\u09BE\\u09B0\");\n        },\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'যান ', \"\\u09AA\\u09C3\\u09B7\\u09CD\\u09A0\\u09BE \").concat(page, \"-\\u098F\");\n          }\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport var bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0417\\u0432\\u0435\\u0437\\u0434\").concat(value !== 1 ? 'и' : 'а');\n        },\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Към ', \"\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport var caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Estrelles' : 'Estrella');\n        },\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport var csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: function labelDisplayedRows(_ref5) {\n          var from = _ref5.from,\n            to = _ref5.to,\n            count = _ref5.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"v\\xEDce ne\\u017E \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          if (value === 1) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dka\");\n          }\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dky\");\n          }\n          return \"\".concat(value, \" hv\\u011Bzdi\\u010Dek\");\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Jít na ').concat(page, \" str\\xE1nku\");\n          }\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport var daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: function labelDisplayedRows(_ref6) {\n          var from = _ref6.from,\n            to = _ref6.to,\n            count = _ref6.count;\n          return \"\".concat(from, \"-\").concat(to, \" af \").concat(count !== -1 ? count : \"mere end \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stjern\").concat(value !== 1 ? 'er' : '');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport var deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: function labelDisplayedRows(_ref7) {\n          var from = _ref7.from,\n            to = _ref7.to,\n            count = _ref7.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" von \").concat(count !== -1 ? count : \"mehr als \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Sterne' : 'Stern');\n        },\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gehe zu ', \"Seite \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport var elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: function labelDisplayedRows(_ref8) {\n          var from = _ref8.from,\n            to = _ref8.to,\n            count = _ref8.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u03B1\\u03C0\\u03CC \").concat(count !== -1 ? count : \"\\u03C0\\u03AC\\u03BD\\u03C9 \\u03B1\\u03C0\\u03CC \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0391\\u03C3\\u03C4\\u03AD\\u03C1\\u03B9\").concat(value !== 1 ? 'α' : '');\n        },\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Μετάβαση ', \"\\u03C3\\u03B5\\u03BB\\u03AF\\u03B4\\u03B1 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport var enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport var esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref9) {\n          var from = _ref9.from,\n            to = _ref9.to,\n            count = _ref9.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"m\\xE1s de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrella\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir a la ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport var etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" T\\xE4rn\").concat(value !== 1 ? 'i' : '');\n        },\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vali ', \"lehek\\xFClg \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport var faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0633\\u062A\\u0627\\u0631\\u0647\");\n        },\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'رفتن به ', \"\\u0635\\u0641\\u062D\\u0647\\u0654 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport var fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: function labelDisplayedRows(_ref10) {\n          var from = _ref10.from,\n            to = _ref10.to,\n            count = _ref10.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"enemm\\xE4n kuin \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" T\\xE4ht\").concat(value !== 1 ? 'eä' : 'i');\n        },\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? 'sivu' : 'Mene sivulle', \" \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport var frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: function labelDisplayedRows(_ref11) {\n          var from = _ref11.from,\n            to = _ref11.to,\n            count = _ref11.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" sur \").concat(count !== -1 ? count : \"plus que \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Etoile\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Aller à la ', \"page \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport var heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: function labelDisplayedRows(_ref12) {\n          var from = _ref12.from,\n            to = _ref12.to,\n            count = _ref12.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u05DE\\u05EA\\u05D5\\u05DA \").concat(count !== -1 ? count : \"\\u05D9\\u05D5\\u05EA\\u05E8 \\u05DE \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u05DB\\u05D5\\u05DB\\u05D1\").concat(value !== 1 ? 'ים' : '');\n        },\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ל ', \"\\u05E2\\u05DE\\u05D5\\u05D3 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport var hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref13) {\n          var from = _ref13.from,\n            to = _ref13.to,\n            count = _ref13.count;\n          return \"\".concat(from, \"-\").concat(to === -1 ? count : to, \" \\u0915\\u0941\\u0932 \").concat(count, \" \\u092E\\u0947\\u0902\");\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0924\\u093E\\u0930\").concat(value !== 1 ? 'े' : 'ा');\n        },\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u092A\\u0943\\u0937\\u094D\\u0920 \".concat(page, \" \").concat(selected ? '' : ' पर जाएँ');\n          }\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\nexport var huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Csillag\");\n        },\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \". oldal\").concat(selected ? '' : 'ra');\n          }\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport var hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0531\\u057D\\u057F\\u0572\");\n        },\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport var idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Bintang\");\n        } // emptyLabelText: 'Empty',\n      }\n    },\n\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport var isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value === 1 ? 'Stjarna' : 'Stjörnur');\n        },\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\n\nexport var itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} di ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stell\").concat(value !== 1 ? 'e' : 'a');\n        },\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vai alla ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport var jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: function labelDisplayedRows(_ref14) {\n          var from = _ref14.from,\n            to = _ref14.to,\n            count = _ref14.count;\n          return \"\".concat(from, \"\\uFF5E\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\u4EE5\\u4E0A\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\\u661F\".concat(value);\n        },\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u30DA\\u30FC\\u30B8\".concat(page).concat(selected ? '' : 'へ');\n          }\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport var khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: function labelDisplayedRows(_ref15) {\n          var from = _ref15.from,\n            to = _ref15.to,\n            count = _ref15.count;\n          return \"\".concat(from, \" - \").concat(to, \" \\u1793\\u17C3 \").concat(count !== -1 ? count : \"\\u1785\\u17D2\\u179A\\u17BE\\u1793\\u1787\\u17B6\\u1784 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u1795\\u17D2\\u1780\\u17B6\\u1799\").concat(value !== 1 ? '' : '');\n        },\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ទៅ ', \"\\u1791\\u17C6\\u1796\\u17D0\\u179A \").concat(page);\n          }\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport var koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: function labelDisplayedRows(_ref16) {\n          var from = _ref16.from,\n            to = _ref16.to,\n            count = _ref16.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\uAC1C \\uC774\\uC0C1\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\uC810\");\n        },\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \" \\uBC88\\uC9F8 \\uD398\\uC774\\uC9C0\").concat(selected ? '' : '로 이동');\n          }\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport var kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: function labelDisplayedRows(_ref17) {\n          var from = _ref17.from,\n            to = _ref17.to,\n            count = _ref17.count;\n          return \"\".concat(count !== -1 ? count : \"+\".concat(to), \" \\u049B\\u0430\\u0442\\u0430\\u0440\\u0434\\u044B\\u04A3 \\u0456\\u0448\\u0456\\u043D\\u0435\\u043D \").concat(from, \"\\u2013\").concat(to);\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0436\\u04B1\\u043B\\u0434\\u044B\\u0437\");\n        },\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\");\n            }\n            return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\\u043A\\u0435 \\u04E9\\u0442\\u0443\");\n          }\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\nexport var nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: function labelDisplayedRows(_ref18) {\n          var from = _ref18.from,\n            to = _ref18.to,\n            count = _ref18.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"mer enn \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Stjerne\").concat(value !== 1 ? 'r' : '');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå til ', \"side \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport var nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: function labelDisplayedRows(_ref19) {\n          var from = _ref19.from,\n            to = _ref19.to,\n            count = _ref19.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" van \").concat(count !== -1 ? count : \"meer dan \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Ster\").concat(value !== 1 ? 'ren' : '');\n        },\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ga naar ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport var plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} z ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'gwiazdek';\n          var lastDigit = value % 10;\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return selected ? \"\".concat(page, \". strona\") : \"Przejd\\u017A do \".concat(page, \". strony\");\n          }\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport var ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref20) {\n          var from = _ref20.from,\n            to = _ref20.to,\n            count = _ref20.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport var ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: function labelDisplayedRows(_ref21) {\n          var from = _ref21.from,\n            to = _ref21.to,\n            count = _ref21.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : '');\n        },\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport var roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" St\").concat(value !== 1 ? 'ele' : 'ea');\n        },\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Mergi la ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\nexport var ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: function labelDisplayedRows(_ref22) {\n          var from = _ref22.from,\n            to = _ref22.to,\n            count = _ref22.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0438\\u0437 \").concat(count !== -1 ? count : \"\\u0431\\u043E\\u043B\\u0435\\u0435 \\u0447\\u0435\\u043C \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Звёзд';\n          var lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\");\n            }\n            return \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\");\n          }\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport var siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: function labelDisplayedRows(_ref23) {\n          var from = _ref23.from,\n            to = _ref23.to,\n            count = _ref23.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0DAF\\u0D9A\\u0DCA\\u0DC0\\u0DCF \").concat(count !== -1 ? count : \"\".concat(to, \" \\u0DA7 \\u0DC0\\u0DD0\\u0DA9\\u0DD2 \\u0DB4\\u0DCA\\u200D\\u0DBB\\u0DB8\\u0DCF\\u0DAB\\u0DBA\\u0D9A\\u0DD2\\u0DB1\\u0DCA\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\\u0DAD\\u0DBB\\u0DD4 \".concat(value);\n        },\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\\u0DB4\\u0DD2\\u0DA7\\u0DD4\\u0DC0 \".concat(page, \" \").concat(selected ? '' : 'ට යන්න');\n          }\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport var skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: function labelDisplayedRows(_ref24) {\n          var from = _ref24.from,\n            to = _ref24.to,\n            count = _ref24.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"viac ako \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          if (value === 1) {\n            return \"\".concat(value, \" hviezdi\\u010Dka\");\n          }\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hviezdi\\u010Dky\");\n          }\n          return \"\".concat(value, \" hviezdi\\u010Diek\");\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ísť na ', \"str\\xE1nku \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport var svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: function labelDisplayedRows(_ref25) {\n          var from = _ref25.from,\n            to = _ref25.to,\n            count = _ref25.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"fler \\xE4n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \").concat(value !== 1 ? 'Stjärnor' : 'Stjärna');\n        },\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå till ', \"sida \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport var thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: function labelDisplayedRows(_ref26) {\n          var from = _ref26.from,\n            to = _ref26.to,\n            count = _ref26.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0E08\\u0E32\\u0E01 \").concat(count !== -1 ? count : \"\\u0E21\\u0E32\\u0E01\\u0E01\\u0E27\\u0E48\\u0E32 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u0E14\\u0E32\\u0E27\");\n        },\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ไปที่', \"\\u0E2B\\u0E19\\u0E49\\u0E32 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport var trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" Y\\u0131ld\\u0131z\");\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(page, \". \").concat(selected ? 'sayfa' : 'sayfaya git');\n          }\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport var ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: function labelDisplayedRows(_ref27) {\n          var from = _ref27.from,\n            to = _ref27.to,\n            count = _ref27.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0437 \").concat(count !== -1 ? count : \"\\u043F\\u043E\\u043D\\u0430\\u0434 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          var pluralForm = 'Зірок';\n          var lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Перейти на ', \"\\u0441\\u0442\\u043E\\u0440\\u0456\\u043D\\u043A\\u0443 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport var viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: function labelDisplayedRows(_ref28) {\n          var from = _ref28.from,\n            to = _ref28.to,\n            count = _ref28.count;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" trong \").concat(count !== -1 ? count : \"nhi\\u1EC1u h\\u01A1n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" sao\");\n        },\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: function getItemAriaLabel(type, page, selected) {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Tới ', \"trang \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport var zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一页';\n          }\n          if (type === 'last') {\n            return '最后一页';\n          }\n          if (type === 'next') {\n            return '下一页';\n          }\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: function labelDisplayedRows(_ref29) {\n          var from = _ref29.from,\n            to = _ref29.to,\n            count = _ref29.count;\n          return \"\\u7B2C \".concat(from, \" \\u6761\\u5230\\u7B2C \").concat(to, \" \\u6761\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u6761\") : \"\\u81F3\\u5C11 \".concat(to, \" \\u6761\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u9897\\u661F\");\n        },\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport var zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: function labelDisplayedRows(_ref30) {\n          var from = _ref30.from,\n            to = _ref30.to,\n            count = _ref30.count;\n          return \"\\u7B2C \".concat(from, \" \\u9805\\u81F3\\u7B2C \").concat(to, \" \\u9805\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u9805\") : \"\\u8D85\\u904E \".concat(to, \" \\u9805\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u7C92\\u661F\");\n        },\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport var zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: function getItemAriaLabel(type) {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: function labelDisplayedRows(_ref31) {\n          var from = _ref31.from,\n            to = _ref31.to,\n            count = _ref31.count;\n          return \"\\u7B2C \".concat(from, \" \\u689D\\u5230\\u7B2C \").concat(to, \" \\u689D\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u689D\") : \"\\u81F3\\u5C11 \".concat(to, \" \\u689D\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: function getLabelText(value) {\n          return \"\".concat(value, \" \\u9846\\u661F\");\n        },\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","map":{"version":3,"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","from","to","count","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","arSD","azAZ","pluralForm","lastDigit","bnBD","bgBG","caES","csCZ","daDK","deDE","elGR","enUS","esES","etEE","faIR","fiFI","frFR","heIL","hiIN","huHU","hyAM","idID","isIS","itIT","jaJP","khKH","koKR","kzKZ","nbNO","nlNL","plPL","ptBR","ptPT","roRO","ruRU","siLK","skSK","svSE","thTH","trTR","ukUA","viVN","zhCN","zhHK","zhTW"],"sources":["F:/React code/diagnostic/node_modules/@mui/material/locale/index.js"],"sourcesContent":["export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          } // if (type === 'previous') {\n\n\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش للصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'امش إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'امش للصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'امش للصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'امش للصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'امش  للصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهر العنوان'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'يتم التحميل…',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'إذهب إلى '} صفحة ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'إذهب الى الصفحة الأولى';\n          }\n\n          if (type === 'last') {\n            return 'إذهب الي الصفحة الأخيرة';\n          }\n\n          if (type === 'next') {\n            return 'إذهب الى الصفحة التالية';\n          } // if (type === 'previous') {\n\n\n          return 'إذهب الى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          } // if (type === 'previous') {\n\n\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          } // if (type === 'previous') {\n\n\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          } // if (type === 'previous') {\n\n\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page} stránku`;\n          }\n\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          } // if (type === 'previous') {\n\n\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          } // if (type === \"previous\") {\n\n\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n}; // default\n\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          } // if (type === 'previous') {\n\n\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          } // if (type === 'previous') {\n\n\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} از ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          } // if (type === 'previous') {\n\n\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          } // if (type === 'previous') {\n\n\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          } // if (type === 'previous') {\n\n\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          } // if (type === 'previous') {\n\n\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          } // if (type === 'previous') {\n\n\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n\n          if (type === 'next') {\n            return 'Következő oldalra';\n          } // if (type === 'previous') {\n\n\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang` // emptyLabelText: 'Empty',\n\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const isIS = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Raðir á síðu:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} af ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'Stjarna' : 'Stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    } // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} di ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          } // if (type === 'previous') {\n\n\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n\n          if (type === 'next') {\n            return '次のページへ';\n          } // if (type === 'previous') {\n\n\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          } // if (type === 'previous') {\n\n\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          } // if (type === 'previous') {\n\n\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kzKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n\n            return `${page} — бетке өту`;\n          }\n\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          } // if (type === 'previous') {\n\n\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n\n          if (type === 'next') {\n            return 'Gå til neste side';\n          } // if (type === 'previous') {\n\n\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          } // if (type === 'previous') {\n\n\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} z ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          } // if (type === 'previous') {\n\n\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n\n          if (type === 'last') {\n            return 'Última página';\n          }\n\n          if (type === 'next') {\n            return 'Próxima página';\n          } // if (type === 'previous') {\n\n\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          } // if (type === 'previous') {\n\n\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n\n            return `Перейти на ${page} страницу`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          } // if (type === 'previous') {\n\n\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          } // if (type === 'previous') {\n\n\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          } // if (type === 'previous') {\n\n\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          } // if (type === 'previous') {\n\n\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:' // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} tanesinden ${count !== -1 ? count : `more than ${to}`}`,\n\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          } // if (type === 'previous') {\n\n\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          } // if (type === 'previous') {\n\n\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          } // if (type === 'previous') {\n\n\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n\n          if (type === 'last') {\n            return '最后一页';\n          }\n\n          if (type === 'next') {\n            return '下一页';\n          }\n\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n\n          if (type === 'last') {\n            return '最後一頁';\n          }\n\n          if (type === 'next') {\n            return '下一頁';\n          }\n\n          return '上一頁';\n        },\n        labelRowsPerPage: '每行行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 條到第 ${to} 條，${count !== -1 ? `共 ${count} 條` : `至少 ${to} 條`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標簽'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '没有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}