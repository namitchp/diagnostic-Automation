{"ast":null,"code":"import produce from \"immer\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../actions/auth.action\";\nconst initialState = {\n  isAuthenticated: false,\n  token: null,\n  loadingStatus: false,\n  responseMessage: '',\n  isValidCred: false,\n  getOtpResponse: {},\n  decryptUserDetails: null\n};\nexport const authReducer = createReducer(initialState, {\n  [actions.requestStatus.toString()]: (state, action) => produce(state, draft => {\n    draft.loadingStatus = action.payload;\n  }),\n  [actions.checkAuthCredResponse.toString()]: (state, action) => produce(state, draft => {\n    draft.isValidCred = action.payload.valid;\n    draft.responseMessage = action.payload.valid ? \"\" : \"Username or Password is not correct\";\n  }),\n  [actions.checkAuthOTPResponse.toString()]: (state, action) => produce(state, draft => {\n    console.log(action.payload);\n    if (action.payload.access_token) {\n      draft.getOtpResponse.valid = true;\n      draft.getOtpResponse.access_token = action.payload.access_token;\n      draft.getOtpResponse.expires_in = action.payload.expires_in;\n      draft.getOtpResponse['.issued'] = action.payload['.issued'];\n      draft.getOtpResponse['.expires'] = action.payload['.expires'];\n      draft.getOtpResponse.userId = action.payload.userId;\n      draft.getOtpResponse.userName = action.payload.userName;\n      draft.getOtpResponse.code = action.payload.code;\n      draft.getOtpResponse.encrypt_userId = action.payload.encrypt_userId;\n    } else {\n      draft.getOtpResponse.valid = false;\n      draft.getOtpResponse.message = \"OTP is incorrect\";\n    }\n  }),\n  [actions.getDecryptUserId.toString()]: (state, action) => produce(state, draft => {}),\n  [actions.getDecryptUserIdResponse.toString()]: (state, action) => produce(state, draft => {\n    draft.decryptUserDetails = action.payload;\n  })\n});","map":{"version":3,"names":["produce","createReducer","actions","initialState","isAuthenticated","token","loadingStatus","responseMessage","isValidCred","getOtpResponse","decryptUserDetails","authReducer","requestStatus","toString","state","action","draft","payload","checkAuthCredResponse","valid","checkAuthOTPResponse","console","log","access_token","expires_in","userId","userName","code","encrypt_userId","message","getDecryptUserId","getDecryptUserIdResponse"],"sources":["F:/React code/diagnostic/src/_redux/reducers/auth.reducer.js"],"sourcesContent":["import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../actions/auth.action\";\r\nconst initialState = {\r\n    isAuthenticated:false,\r\n    token:null,\r\n    loadingStatus:false,\r\n    responseMessage:'',\r\n    isValidCred:false,\r\n    getOtpResponse:{},\r\n    decryptUserDetails:null\r\n}\r\nexport const authReducer = createReducer(initialState, {\r\n    [actions.requestStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.loadingStatus = action.payload;\r\n    }),\r\n    [actions.checkAuthCredResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isValidCred = action.payload.valid;\r\n            draft.responseMessage = action.payload.valid ? \"\" : \"Username or Password is not correct\"\r\n    }),\r\n    [actions.checkAuthOTPResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            console.log(action.payload)\r\n             if(action.payload.access_token){\r\n                 draft.getOtpResponse.valid = true;\r\n                 draft.getOtpResponse.access_token = action.payload.access_token;\r\n                 draft.getOtpResponse.expires_in = action.payload.expires_in;\r\n                 draft.getOtpResponse['.issued'] = action.payload['.issued'];\r\n                 draft.getOtpResponse['.expires'] = action.payload['.expires'];\r\n                 draft.getOtpResponse.userId = action.payload.userId;\r\n                 draft.getOtpResponse.userName = action.payload.userName;\r\n                 draft.getOtpResponse.code = action.payload.code;\r\n                 draft.getOtpResponse.encrypt_userId = action.payload.encrypt_userId;\r\n             }\r\n             else{\r\n                draft.getOtpResponse.valid = false;\r\n                draft.getOtpResponse.message = \"OTP is incorrect\";\r\n             }\r\n    }),\r\n    [actions.getDecryptUserId.toString()]: (state, action) =>\r\n    produce (state, (draft) => {}),\r\n    [actions.getDecryptUserIdResponse.toString()]: (state, action) =>\r\n    produce (state, (draft) => {\r\n        draft.decryptUserDetails = action.payload;\r\n    }),\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}