{"ast":null,"code":"function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: function halfAMinute(_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'праз паўхвіліны';\n      } else {\n        return 'паўхвіліны таму';\n      }\n    }\n    return 'паўхвіліны';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n    },\n\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n    }\n  }),\n\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}","map":{"version":3,"names":["declension","scheme","count","one","undefined","rem10","rem100","singularNominative","replace","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token"],"sources":["F:/React code/diagnostic/node_modules/date-fns/esm/locale/be/_lib/formatDistance/index.js"],"sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'праз ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' таму';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за секунду',\n      singularNominative: 'менш за {{count}} секунду',\n      singularGenitive: 'менш за {{count}} секунды',\n      pluralGenitive: 'менш за {{count}} секунд'\n    },\n    future: {\n      one: 'менш, чым праз секунду',\n      singularNominative: 'менш, чым праз {{count}} секунду',\n      singularGenitive: 'менш, чым праз {{count}} секунды',\n      pluralGenitive: 'менш, чым праз {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду таму',\n      singularGenitive: '{{count}} секунды таму',\n      pluralGenitive: '{{count}} секунд таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} секунду',\n      singularGenitive: 'праз {{count}} секунды',\n      pluralGenitive: 'праз {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'праз паўхвіліны';\n      } else {\n        return 'паўхвіліны таму';\n      }\n    }\n\n    return 'паўхвіліны';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'менш за хвіліну',\n      singularNominative: 'менш за {{count}} хвіліну',\n      singularGenitive: 'менш за {{count}} хвіліны',\n      pluralGenitive: 'менш за {{count}} хвілін'\n    },\n    future: {\n      one: 'менш, чым праз хвіліну',\n      singularNominative: 'менш, чым праз {{count}} хвіліну',\n      singularGenitive: 'менш, чым праз {{count}} хвіліны',\n      pluralGenitive: 'менш, чым праз {{count}} хвілін'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} хвіліна',\n      singularGenitive: '{{count}} хвіліны',\n      pluralGenitive: '{{count}} хвілін'\n    },\n    past: {\n      singularNominative: '{{count}} хвіліну таму',\n      singularGenitive: '{{count}} хвіліны таму',\n      pluralGenitive: '{{count}} хвілін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} хвіліну',\n      singularGenitive: 'праз {{count}} хвіліны',\n      pluralGenitive: 'праз {{count}} хвілін'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} гадзіны',\n      singularGenitive: 'каля {{count}} гадзін',\n      pluralGenitive: 'каля {{count}} гадзін'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} гадзіну',\n      singularGenitive: 'прыблізна праз {{count}} гадзіны',\n      pluralGenitive: 'прыблізна праз {{count}} гадзін'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} гадзіна',\n      singularGenitive: '{{count}} гадзіны',\n      pluralGenitive: '{{count}} гадзін'\n    },\n    past: {\n      singularNominative: '{{count}} гадзіну таму',\n      singularGenitive: '{{count}} гадзіны таму',\n      pluralGenitive: '{{count}} гадзін таму'\n    },\n    future: {\n      singularNominative: 'праз {{count}} гадзіну',\n      singularGenitive: 'праз {{count}} гадзіны',\n      pluralGenitive: 'праз {{count}} гадзін'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} дзень',\n      singularGenitive: '{{count}} дні',\n      pluralGenitive: '{{count}} дзён'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      // TODO\n      singularGenitive: 'каля {{count}} месяцаў',\n      // TODO\n      pluralGenitive: 'каля {{count}} месяцаў' // TODO\n\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      // TODO\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      // TODO\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў' // TODO\n\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} месяца',\n      singularGenitive: 'каля {{count}} месяцаў',\n      pluralGenitive: 'каля {{count}} месяцаў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} месяц',\n      singularGenitive: 'прыблізна праз {{count}} месяцы',\n      pluralGenitive: 'прыблізна праз {{count}} месяцаў'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяцы',\n      pluralGenitive: '{{count}} месяцаў'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'каля {{count}} года',\n      singularGenitive: 'каля {{count}} гадоў',\n      pluralGenitive: 'каля {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'прыблізна праз {{count}} год',\n      singularGenitive: 'прыблізна праз {{count}} гады',\n      pluralGenitive: 'прыблізна праз {{count}} гадоў'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} гады',\n      pluralGenitive: '{{count}} гадоў'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больш за {{count}} год',\n      singularGenitive: 'больш за {{count}} гады',\n      pluralGenitive: 'больш за {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'больш, чым праз {{count}} год',\n      singularGenitive: 'больш, чым праз {{count}} гады',\n      pluralGenitive: 'больш, чым праз {{count}} гадоў'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'амаль {{count}} год',\n      singularGenitive: 'амаль {{count}} гады',\n      pluralGenitive: 'амаль {{count}} гадоў'\n    },\n    future: {\n      singularNominative: 'амаль праз {{count}} год',\n      singularGenitive: 'амаль праз {{count}} гады',\n      pluralGenitive: 'амаль праз {{count}} гадоў'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}