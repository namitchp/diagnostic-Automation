{"ast":null,"code":"import{createAction}from\"@reduxjs/toolkit\";export var requestStatus=createAction(\"REQUEST_STATUS\",function(data){return{payload:data};});export var checkAuthCred=createAction(\"CHECK_AUTH_CRED\",function(data){return{payload:data};});export var checkAuthCredResponse=createAction(\"CHECK_AUTH_CRED_RESPONSE\",function(data){return{payload:data};});export var checkAuthOTP=createAction(\"CHECK_LOGIN_OTP\",function(data){return{payload:data};});export var checkAuthOTPResponse=createAction(\"CHECK_AUTH_OTP_RESPONSE\",function(data){return{payload:data};});export var getDecryptUserId=createAction(\"GET_DECRYPT_USER_ID\",function(data){return{payload:data};});export var getDecryptUserIdResponse=createAction(\"GET_DECRYPT_USER_ID_SUCCESS\",function(data){return{payload:data};});","map":{"version":3,"names":["createAction","requestStatus","data","payload","checkAuthCred","checkAuthCredResponse","checkAuthOTP","checkAuthOTPResponse","getDecryptUserId","getDecryptUserIdResponse"],"sources":["F:/React code/diagnostic/src/_redux/actions/auth.action.js"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const requestStatus = createAction(\r\n    \"REQUEST_STATUS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthCred = createAction(\r\n    \"CHECK_AUTH_CRED\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthCredResponse = createAction(\r\n    \"CHECK_AUTH_CRED_RESPONSE\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthOTP = createAction(\r\n    \"CHECK_LOGIN_OTP\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthOTPResponse = createAction(\r\n    \"CHECK_AUTH_OTP_RESPONSE\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const getDecryptUserId = createAction(\r\n    \"GET_DECRYPT_USER_ID\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const getDecryptUserIdResponse = createAction(\r\n    \"GET_DECRYPT_USER_ID_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,kBAAkB,CAE/C,MAAO,IAAMC,cAAa,CAAGD,YAAY,CACrC,gBAAgB,CAChB,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAME,cAAa,CAAGJ,YAAY,CACrC,iBAAiB,CACjB,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAMG,sBAAqB,CAAGL,YAAY,CAC7C,0BAA0B,CAC1B,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAMI,aAAY,CAAGN,YAAY,CACpC,iBAAiB,CACjB,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAMK,qBAAoB,CAAGP,YAAY,CAC5C,yBAAyB,CACzB,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAMM,iBAAgB,CAAGR,YAAY,CACxC,qBAAqB,CACrB,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL,CAED,MAAO,IAAMO,yBAAwB,CAAGT,YAAY,CAChD,6BAA6B,CAC7B,SAACE,IAAI,QAAM,CACPC,OAAO,CAAED,IACb,CAAC,EAAC,CACL"},"metadata":{},"sourceType":"module"}