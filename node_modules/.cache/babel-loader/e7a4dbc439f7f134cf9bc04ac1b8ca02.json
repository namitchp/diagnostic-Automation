{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\logistics\\\\delivery-challan\\\\slwip\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { CommonController, currenyMasking } from \"../../../../_redux/controller/common.controller\";\nimport CustomPagination from \"../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\nimport { debounce, showErrorToast } from \"../../../../components/common\";\nimport DateFilter from \"../../../../components/dateFilter\";\nimport moment from \"moment\";\nimport ActionButtons from \"../../../../components/action-buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlWipBrowse = ({\n  slType\n}) => {\n  _s();\n\n  const [browseListData, setBrowseListData] = useState([]);\n  console.log(browseListData);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [amountFigures, setAmountFigures] = useState({\n    amount: 0,\n    mdc_amount: 0,\n    actual_amount: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\"\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_all: true,\n    status: \"\",\n    approval: \"\",\n    sl_type: \"\"\n  });\n\n  const handleParams = event => {\n    debounce(setParams({ ...params,\n      [event.target.name]: event.target.value\n    }), 1000);\n  };\n\n  const handleBodyParam = event => {\n    setBodyParam({ ...bodyParam,\n      sl_type: event\n    });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n\n    try {\n      await CommonController.commonApiCall(\"logistics/dc/browseWip\", params, bodyParam, \"node\").then(data => {\n        console.log(data);\n\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.totaldata);\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param\n    });\n  };\n\n  const handleRowId = e => {\n    console.log(e);\n  };\n\n  const handlePageChange = param => {\n    if (param !== 0) {\n      setParams({ ...params,\n        pageNo: param\n      });\n    }\n  };\n\n  useEffect(() => {\n    handleBodyParam(slType);\n  }, [slType]);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter_box mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1 d-flex align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0\",\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"outlined-basic\",\n            size: \"small\",\n            onKeyUp: handleParams,\n            name: \"filter_value\",\n            label: \"Search\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateFilter, {\n          onDateUpdate: () => getBrowseListData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        columns: [{\n          field: \"tran_id\",\n          headerName: \"SR. no\",\n          flex: 0\n        }, {\n          field: \"date\",\n          headerName: \"Date\",\n          width: 100,\n          renderCell: params => {\n            return moment(params.row.date).format(\"DD/MM/YYYY\");\n          }\n        }, {\n          field: \"D.C No.\",\n          headerName: \"MRN No.\",\n          width: 120\n        }, {\n          field: \"Company\",\n          headerName: \"Company Name\",\n          width: 120\n        }, {\n          field: \"Contact\",\n          headerName: \"Contact\",\n          width: 120\n        }, {\n          field: \"sales_order\",\n          headerName: \"Sales Order\",\n          width: 120\n        }, {\n          field: \"so_date\",\n          headerName: \"So Date\",\n          width: 120,\n          renderCell: params => {\n            return moment(params.row.so_date).format(\"DD/MM/YYYY\");\n          }\n        }, {\n          field: \"courier\",\n          headerName: \"Courier\",\n          width: 120\n        }, {\n          field: \"docket_no\",\n          headerName: \"Docket No.\",\n          width: 120\n        }, {\n          field: \"docket_date\",\n          headerName: \"Docket No.\",\n          width: 150\n        }, {\n          field: \"action\",\n          headerName: \"Actions\",\n          width: 120\n        }],\n        pagination: true // getRowId={handleRowId}\n        ,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        page: params.pageNo,\n        rowsPerPageOptions: [10, 15, 25, 100],\n        rowCount: totalRecord,\n        paginationMode: \"server\",\n        onPageSizeChange: handlePageSizeChange,\n        onPageChange: handlePageChange,\n        loading: loading,\n        rowHeight: 30,\n        components: browseListData.length > 0 ? {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        } : {},\n        onSortModelChange: sort => {\n          if (sort.length > 0) {\n            setParams({ ...params,\n              sort_column: sort[0].field,\n              sort_order: sort[0].sort\n            });\n          }\n        },\n        rows: browseListData,\n        getRowId: browseListData => browseListData.tran_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SlWipBrowse, \"L8V30sMAWOPC7zobCxk9qDqPBoY=\");\n\n_c = SlWipBrowse;\nexport default SlWipBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlWipBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/logistics/delivery-challan/slwip/browse.js"],"names":["TextField","Button","MenuItem","DataGrid","React","useEffect","useState","CommonController","currenyMasking","CustomPagination","CustomNoRowsOverlay","debounce","showErrorToast","DateFilter","moment","ActionButtons","SlWipBrowse","slType","browseListData","setBrowseListData","console","log","totalRecord","setTotalRecords","amountFigures","setAmountFigures","amount","mdc_amount","actual_amount","loading","setLoading","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","bodyParam","setBodyParam","user_id","localStorage","getItem","chk_all","status","approval","sl_type","handleParams","event","target","name","value","handleBodyParam","getBrowseListData","commonApiCall","then","data","totaldata","err","handlePageSizeChange","param","handleRowId","e","handlePageChange","height","width","field","headerName","flex","renderCell","row","date","format","so_date","length","Pagination","NoRowsOverlay","sort","tran_id"],"mappings":"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","sourcesContent":["import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst SlWipBrowse = ({slType}) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n    sl_type:\"\"\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n      setBodyParam({...bodyParam,sl_type:event})\r\n     \r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistics/dc/browseWip\",\r\n        params,\r\n        bodyParam,\r\n        \"node\"\r\n      ).then((data) => {\r\n        console.log(data)\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n          \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleBodyParam(slType)\r\n  \r\n  }, [slType]);\r\n \r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"SR. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n\r\n            {\r\n              field: \"D.C No.\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n         \r\n            {\r\n              field: \"Company\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"sales_order\",\r\n              headerName: \"Sales Order\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"so_date\",\r\n                headerName: \"So Date\",\r\n                width: 120,\r\n                renderCell:(params)=>{\r\n                  return moment(params.row.so_date).format(\"DD/MM/YYYY\");\r\n                }\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default SlWipBrowse;\r\n"]},"metadata":{},"sourceType":"module"}