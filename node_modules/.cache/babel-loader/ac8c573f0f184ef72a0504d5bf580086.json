{"ast":null,"code":"import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['пр.н.е.', 'н.е.'],\n  abbreviated: ['преди н. е.', 'н. е.'],\n  wide: ['преди новата ера', 'новата ера']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-во тримес.', '2-ро тримес.', '3-то тримес.', '4-то тримес.'],\n  wide: ['1-во тримесечие', '2-ро тримесечие', '3-то тримесечие', '4-то тримесечие']\n};\nvar monthValues = {\n  abbreviated: ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек'],\n  wide: ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб'],\n  wide: ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота']\n};\nvar dayPeriodValues = {\n  wide: {\n    am: 'преди обяд',\n    pm: 'след обяд',\n    midnight: 'в полунощ',\n    noon: 'на обяд',\n    morning: 'сутринта',\n    afternoon: 'следобед',\n    evening: 'вечерта',\n    night: 'през нощта'\n  }\n};\nfunction isFeminine(unit) {\n  return unit === 'year' || unit === 'week' || unit === 'minute' || unit === 'second';\n}\nfunction isNeuter(unit) {\n  return unit === 'quarter';\n}\nfunction numberWithSuffix(number, unit, masculine, feminine, neuter) {\n  var suffix = isNeuter(unit) ? neuter : isFeminine(unit) ? feminine : masculine;\n  return number + '-' + suffix;\n}\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var options = dirtyOptions || {};\n  var unit = String(options.unit);\n  var number = Number(dirtyNumber);\n  if (number === 0) {\n    return numberWithSuffix(0, unit, 'ев', 'ева', 'ево');\n  } else if (number % 1000 === 0) {\n    return numberWithSuffix(number, unit, 'ен', 'на', 'но');\n  } else if (number % 100 === 0) {\n    return numberWithSuffix(number, unit, 'тен', 'тна', 'тно');\n  }\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return numberWithSuffix(number, unit, 'ви', 'ва', 'во');\n      case 2:\n        return numberWithSuffix(number, unit, 'ри', 'ра', 'ро');\n      case 7:\n      case 8:\n        return numberWithSuffix(number, unit, 'ми', 'ма', 'мо');\n    }\n  }\n  return numberWithSuffix(number, unit, 'ти', 'та', 'то');\n}\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;","map":{"version":3,"names":["buildLocalizeFn","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","short","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","isFeminine","unit","isNeuter","numberWithSuffix","number","masculine","feminine","neuter","suffix","ordinalNumber","dirtyNumber","dirtyOptions","options","String","Number","rem100","localize","era","values","defaultWidth","quarter","argumentCallback","month","day","dayPeriod"],"sources":["F:/React code/diagnostic/node_modules/date-fns/esm/locale/bg/_lib/localize/index.js"],"sourcesContent":["import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['пр.н.е.', 'н.е.'],\n  abbreviated: ['преди н. е.', 'н. е.'],\n  wide: ['преди новата ера', 'новата ера']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-во тримес.', '2-ро тримес.', '3-то тримес.', '4-то тримес.'],\n  wide: ['1-во тримесечие', '2-ро тримесечие', '3-то тримесечие', '4-то тримесечие']\n};\nvar monthValues = {\n  abbreviated: ['яну', 'фев', 'мар', 'апр', 'май', 'юни', 'юли', 'авг', 'сеп', 'окт', 'ное', 'дек'],\n  wide: ['януари', 'февруари', 'март', 'април', 'май', 'юни', 'юли', 'август', 'септември', 'октомври', 'ноември', 'декември']\n};\nvar dayValues = {\n  narrow: ['Н', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['нд', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['нед', 'пон', 'вто', 'сря', 'чет', 'пет', 'съб'],\n  wide: ['неделя', 'понеделник', 'вторник', 'сряда', 'четвъртък', 'петък', 'събота']\n};\nvar dayPeriodValues = {\n  wide: {\n    am: 'преди обяд',\n    pm: 'след обяд',\n    midnight: 'в полунощ',\n    noon: 'на обяд',\n    morning: 'сутринта',\n    afternoon: 'следобед',\n    evening: 'вечерта',\n    night: 'през нощта'\n  }\n};\n\nfunction isFeminine(unit) {\n  return unit === 'year' || unit === 'week' || unit === 'minute' || unit === 'second';\n}\n\nfunction isNeuter(unit) {\n  return unit === 'quarter';\n}\n\nfunction numberWithSuffix(number, unit, masculine, feminine, neuter) {\n  var suffix = isNeuter(unit) ? neuter : isFeminine(unit) ? feminine : masculine;\n  return number + '-' + suffix;\n}\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var options = dirtyOptions || {};\n  var unit = String(options.unit);\n  var number = Number(dirtyNumber);\n\n  if (number === 0) {\n    return numberWithSuffix(0, unit, 'ев', 'ева', 'ево');\n  } else if (number % 1000 === 0) {\n    return numberWithSuffix(number, unit, 'ен', 'на', 'но');\n  } else if (number % 100 === 0) {\n    return numberWithSuffix(number, unit, 'тен', 'тна', 'тно');\n  }\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return numberWithSuffix(number, unit, 'ви', 'ва', 'во');\n\n      case 2:\n        return numberWithSuffix(number, unit, 'ри', 'ра', 'ро');\n\n      case 7:\n      case 8:\n        return numberWithSuffix(number, unit, 'ми', 'ма', 'мо');\n    }\n  }\n\n  return numberWithSuffix(number, unit, 'ти', 'та', 'то');\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;"],"mappings":"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"},"metadata":{},"sourceType":"module"}