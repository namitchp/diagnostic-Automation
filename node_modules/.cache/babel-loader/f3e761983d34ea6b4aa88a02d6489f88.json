{"ast":null,"code":"import produce from \"immer\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../../actions/masters/product.action\";\nconst initialState = {\n  isLoading: false,\n  productList: null,\n  categoryList: null,\n  lpRefList: null,\n  ggNameList: null\n};\nexport const ProductMasterReducer = createReducer(initialState, {\n  [actions.getProductListBrowse.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getProductListBrowseSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.productList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.getCategoryList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getCategoryListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.categoryList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.getLPRefList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getLPRefListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = false;\n    draft.lpRefList = action.payload;\n  }),\n  [actions.getGGNameList.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.getGGNameListSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = false;\n    draft.ggNameList = action.payload;\n  }),\n  [actions.updateProductVerifiedStatus.toString()]: (state, action) => produce(state, draft => {\n    draft.isLoading = true;\n  }),\n  [actions.updateProductVerifiedStatusSuccess.toString()]: (state, action) => produce(state, draft => {\n    draft.ggNameList = action.payload;\n    draft.isLoading = false;\n  }),\n  [actions.updateProductListPrice.toString()]: (state, action) => produce(state, draft => {\n    // draft.isLoading = true;\n  }),\n  [actions.updateProductLPRef.toString()]: (state, action) => produce(state, draft => {\n    // draft.isLoading = true;\n  }),\n  [actions.updateProductMovingNonMoving.toString()]: (state, action) => produce(state, draft => {\n    // draft.isLoading = true;\n  })\n});","map":{"version":3,"names":["produce","createReducer","actions","initialState","isLoading","productList","categoryList","lpRefList","ggNameList","ProductMasterReducer","getProductListBrowse","toString","state","action","draft","getProductListBrowseSuccess","payload","getCategoryList","getCategoryListSuccess","getLPRefList","getLPRefListSuccess","getGGNameList","getGGNameListSuccess","updateProductVerifiedStatus","updateProductVerifiedStatusSuccess","updateProductListPrice","updateProductLPRef","updateProductMovingNonMoving"],"sources":["F:/React code/diagnostic/src/_redux/reducers/Masters/product.reducer.js"],"sourcesContent":["import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../../actions/masters/product.action\";\r\n\r\nconst initialState = {\r\n    isLoading:false,\r\n    productList:null,\r\n    categoryList:null,\r\n    lpRefList:null,\r\n    ggNameList:null\r\n}\r\n\r\n\r\nexport const ProductMasterReducer = createReducer(initialState, {\r\n    [actions.getProductListBrowse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getProductListBrowseSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.productList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getCategoryList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getCategoryListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.categoryList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getLPRefList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getLPRefListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.lpRefList = action.payload;\r\n    }),\r\n    [actions.getGGNameList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getGGNameListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.ggNameList = action.payload;\r\n    }),\r\n    [actions.updateProductVerifiedStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductVerifiedStatusSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.ggNameList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.updateProductListPrice.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductLPRef.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductMovingNonMoving.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    })\r\n}); "],"mappings":"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"},"metadata":{},"sourceType":"module"}