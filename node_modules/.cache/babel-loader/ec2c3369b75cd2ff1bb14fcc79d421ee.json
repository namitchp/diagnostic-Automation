{"ast":null,"code":"import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  if (day === 2\n  /* Tue */) {\n    return \"'во \" + weekday + \" в' p\";\n  } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n  return format;\n}","map":{"version":3,"names":["isSameUTCWeek","accusativeWeekdays","lastWeek","day","weekday","thisWeek","nextWeek","formatRelativeLocale","date","baseDate","options","getUTCDay","yesterday","today","tomorrow","other","formatRelative","token","format"],"sources":["F:/React code/diagnostic/node_modules/date-fns/esm/locale/ru/_lib/formatRelative/index.js"],"sourcesContent":["import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n      return \"'во \" + weekday + \" в' p\";\n    } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,yCAAyC;AACnE,IAAIC,kBAAkB,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE5G,SAASC,QAAQ,CAACC,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAErC,QAAQA,GAAG;IACT,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGC,OAAO,GAAG,OAAO;IAE1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGA,OAAO,GAAG,OAAO;IAE1C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,aAAa,GAAGA,OAAO,GAAG,OAAO;EAAC;AAE/C;AAEA,SAASC,QAAQ,CAACF,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAErC,IAAIA,GAAG,KAAK;EACZ,WACE;IACE,OAAO,MAAM,GAAGC,OAAO,GAAG,OAAO;EACnC,CAAC,MAAM;IACP,OAAO,KAAK,GAAGA,OAAO,GAAG,OAAO;EAClC;AACF;AAEA,SAASE,QAAQ,CAACH,GAAG,EAAE;EACrB,IAAIC,OAAO,GAAGH,kBAAkB,CAACE,GAAG,CAAC;EAErC,QAAQA,GAAG;IACT,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGC,OAAO,GAAG,OAAO;IAE5C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGA,OAAO,GAAG,OAAO;IAE5C,KAAK,CAAC;IACN,KAAK,CAAC;IACN,KAAK,CAAC;MACJ,OAAO,eAAe,GAAGA,OAAO,GAAG,OAAO;EAAC;AAEjD;AAEA,IAAIG,oBAAoB,GAAG;EACzBL,QAAQ,EAAE,UAAUM,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAS,EAAE;IAE1B,IAAIX,aAAa,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MAC1C,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOD,QAAQ,CAACC,GAAG,CAAC;IACtB;EACF,CAAC;EACDS,SAAS,EAAE,aAAa;EACxBC,KAAK,EAAE,eAAe;EACtBC,QAAQ,EAAE,cAAc;EACxBR,QAAQ,EAAE,UAAUE,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;IAC3C,IAAIP,GAAG,GAAGK,IAAI,CAACG,SAAS,EAAE;IAE1B,IAAIX,aAAa,CAACQ,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC,EAAE;MAC1C,OAAOL,QAAQ,CAACF,GAAG,CAAC;IACtB,CAAC,MAAM;MACL,OAAOG,QAAQ,CAACH,GAAG,CAAC;IACtB;EACF,CAAC;EACDY,KAAK,EAAE;AACT,CAAC;AACD,eAAe,SAASC,cAAc,CAACC,KAAK,EAAET,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACrE,IAAIQ,MAAM,GAAGX,oBAAoB,CAACU,KAAK,CAAC;EAExC,IAAI,OAAOC,MAAM,KAAK,UAAU,EAAE;IAChC,OAAOA,MAAM,CAACV,IAAI,EAAEC,QAAQ,EAAEC,OAAO,CAAC;EACxC;EAEA,OAAOQ,MAAM;AACf"},"metadata":{},"sourceType":"module"}