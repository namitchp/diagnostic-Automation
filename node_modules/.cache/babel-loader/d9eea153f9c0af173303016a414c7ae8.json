{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\components\\\\CustomPagination.js\",\n  _s = $RefreshSig$();\nimport { Pagination } from \"@mui/material\";\nimport { useGridApiContext, useGridSelector, gridPageCountSelector, gridPageSelector } from \"@mui/x-data-grid\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomPagination() {\n  _s();\n  const apiRef = useGridApiContext();\n  const page = useGridSelector(apiRef, gridPageSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  console.log(page);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Pagination, {\n      color: \"primary\",\n      className: \"justify-content-end\",\n      count: pageCount,\n      page: page,\n      onChange: (event, value) => apiRef.current.setPage(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomPagination, \"aBxtusrwFI9QGPx0kesDH2nZ6TM=\", false, function () {\n  return [useGridApiContext, useGridSelector, useGridSelector];\n});\n_c = CustomPagination;\nvar _c;\n$RefreshReg$(_c, \"CustomPagination\");","map":{"version":3,"names":["Pagination","useGridApiContext","useGridSelector","gridPageCountSelector","gridPageSelector","React","CustomPagination","apiRef","page","pageCount","console","log","event","value","current","setPage"],"sources":["F:/React code/diagnostic/src/components/CustomPagination.js"],"sourcesContent":["import { Pagination } from \"@mui/material\";\r\nimport {\r\n  useGridApiContext,\r\n  useGridSelector,\r\n  gridPageCountSelector,\r\n  gridPageSelector,\r\n} from \"@mui/x-data-grid\";\r\nimport React from \"react\";\r\n\r\nexport default function CustomPagination() {\r\n  const apiRef = useGridApiContext();\r\n  const page = useGridSelector(apiRef, gridPageSelector);\r\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\nconsole.log(page)\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"input_frame mr-3\">\r\n        <label className=\"mr-2\">Row Per Page:</label>\r\n        <select\r\n          onChange={(event) => apiRef.current.setPageSize(event.target.value)}\r\n        >\r\n          {state.options.rowsPerPageOptions.map((row, index) => {\r\n            return (\r\n              <option key={\"page\" + index} value={row}>\r\n                {row}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div> */}\r\n      {/* <div className=\"input_frame\">\r\n        <label className=\"mr-2\">Go to Page:</label>\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={page}\r\n          onChange={(event) => {\r\n            if (parseInt(event.target.value) > 0) {\r\n              apiRef.current.setPage(parseInt(event.target.value));\r\n            }\r\n          }}\r\n          style={{ width: 50 }}\r\n        />\r\n      </div> */}\r\n\r\n      <Pagination\r\n        color=\"primary\"\r\n        className=\"justify-content-end\"\r\n        count={pageCount}\r\n        page={page}\r\n        onChange={(event, value) =>\r\n          apiRef.current.setPage(value)\r\n        }\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SACEC,iBAAiB,EACjBC,eAAe,EACfC,qBAAqB,EACrBC,gBAAgB,QACX,kBAAkB;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,gBAAgB,GAAG;EAAA;EACzC,MAAMC,MAAM,GAAGN,iBAAiB,EAAE;EAClC,MAAMO,IAAI,GAAGN,eAAe,CAACK,MAAM,EAAEH,gBAAgB,CAAC;EACtD,MAAMK,SAAS,GAAGP,eAAe,CAACK,MAAM,EAAEJ,qBAAqB,CAAC;EAClEO,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACf,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBA6Bb,QAAC,UAAU;MACT,KAAK,EAAC,SAAS;MACf,SAAS,EAAC,qBAAqB;MAC/B,KAAK,EAAEC,SAAU;MACjB,IAAI,EAAED,IAAK;MACX,QAAQ,EAAE,CAACI,KAAK,EAAEC,KAAK,KACrBN,MAAM,CAACO,OAAO,CAACC,OAAO,CAACF,KAAK;IAC7B;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACa;AAErB;AAAC,GA9CuBP,gBAAgB;EAAA,QACvBL,iBAAiB,EACnBC,eAAe,EACVA,eAAe;AAAA;AAAA,KAHXI,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}