{"ast":null,"code":"var _jsxFileName = \"F:\\\\React code\\\\diagnostic\\\\src\\\\pages\\\\Master\\\\Configuration\\\\Account\\\\group\\\\browse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CustomPagination from '../../../../../components/CustomPagination';\nimport CustomNoRowsOverlay from '../../../../../components/customRowComponent';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfigGroupBrowse = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [groupList, setGroupList] = useState([]);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: '',\n    sort_column: '',\n    sort_order: ''\n  });\n\n  const handlePageSizeChange = param => {\n    setParams({ ...params,\n      pageSize: param.pageSize\n    });\n  };\n\n  const handlePageChange = param => {\n    setParams({ ...params,\n      pageNo: param.page + 1\n    });\n  };\n\n  const groupBrowse = async () => {\n    await CommonController.commonApiCallFilter(\"master/browse_group\", params, \"get\", \"node\").then(result => {\n      console.log(result);\n    });\n  };\n\n  useEffect(() => {\n    groupBrowse();\n  });\n  useEffect(() => {}, [params]);\n  useEffect(() => {// if(getGroupListResponse){\n    //     setGroupList(getGroupListResponse.data  || [])\n    //  }\n  }, []);\n\n  const onPreviewOrEdit = row => {\n    props.onActionClick(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 350,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        pagination: true,\n        disableColumnFilter: true,\n        pageSize: params.pageSize,\n        rowsPerPageOptions: [10, 20, 50, 100],\n        rowCount: \"\",\n        paginationMode: \"server\" //    onPageSizeChange={handlePageSizeChange}\n        //    onPageChange={handlePageChange}\n        ,\n        loading: isLoading,\n        rowHeight: 30,\n        components: {\n          Pagination: CustomPagination,\n          NoRowsOverlay: CustomNoRowsOverlay\n        },\n        columns: [{\n          field: 'id',\n          headerName: \"Sr No.\",\n          width: 120\n        }, {\n          field: 'group_id',\n          headerName: \"Group ID\",\n          width: 120\n        }, {\n          field: 'group_name',\n          headerName: \"Group Name\",\n          width: 200\n        }, {\n          field: 'description',\n          headerName: \"Description\",\n          width: 200\n        }, {\n          field: '',\n          headerName: \"Actions\",\n          renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action_btns\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-edit mr-2\",\n              onClick: () => onPreviewOrEdit(params.row)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"far fa-trash-alt mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this),\n          width: 150\n        }],\n        rows: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ConfigGroupBrowse, \"fKAnEZQZfSEHVRcm7iRtgaYI+VE=\");\n\n_c = ConfigGroupBrowse;\nexport default ConfigGroupBrowse;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigGroupBrowse\");","map":{"version":3,"sources":["F:/React code/diagnostic/src/pages/Master/Configuration/Account/group/browse.js"],"names":["React","useEffect","useState","CustomPagination","CustomNoRowsOverlay","DataGrid","CommonController","ConfigGroupBrowse","props","isLoading","setIsLoading","groupList","setGroupList","params","setParams","pageNo","pageSize","filter_value","sort_column","sort_order","handlePageSizeChange","param","handlePageChange","page","groupBrowse","commonApiCallFilter","then","result","console","log","onPreviewOrEdit","row","onActionClick","height","width","Pagination","NoRowsOverlay","field","headerName","renderCell"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CustomPagination from '../../../../../components/CustomPagination';\r\nimport CustomNoRowsOverlay from '../../../../../components/customRowComponent';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\n\r\n\r\nconst ConfigGroupBrowse = (props) => {\r\n    const [isLoading , setIsLoading] = useState(false);\r\n   \r\n\r\n    const [groupList , setGroupList] = useState([]);\r\n\r\n    const [params , setParams] = useState({\r\n        pageNo:1,\r\n        pageSize:10,\r\n        filter_value:'',\r\n        sort_column:'',\r\n        sort_order:''\r\n    });\r\n    const handlePageSizeChange = (param) => {\r\n        setParams({...params,\r\n            pageSize:param.pageSize\r\n        });\r\n    }\r\n    const handlePageChange = (param) => {\r\n        setParams({...params,\r\n            pageNo:param.page + 1\r\n        });\r\n    }\r\n\r\n    const groupBrowse=async()=>{\r\n       await CommonController.commonApiCallFilter(\r\n        \"master/browse_group\",\r\n         params,\r\n          \"get\",\r\n           \"node\").then(result=>{\r\n            console.log(result)\r\n           })\r\n    }\r\n\r\n    useEffect(() => {\r\n     groupBrowse()  \r\n    },);\r\n\r\n    useEffect(() => {\r\n    \r\n    },[params]);\r\n\r\n    useEffect(() => {\r\n\r\n        // if(getGroupListResponse){\r\n        //     setGroupList(getGroupListResponse.data  || [])\r\n        //  }\r\n    },[]);\r\n\r\n    const onPreviewOrEdit = (row) => {\r\n     \r\n        props.onActionClick(1);\r\n    }\r\n    return <React.Fragment>\r\n        <div style={{ height: 350, width: '100%' }}>\r\n                <DataGrid\r\n                   pagination\r\n                   disableColumnFilter\r\n                   pageSize={params.pageSize}\r\n                  \r\n                   rowsPerPageOptions={[10,20,50,100]}\r\n                   rowCount={\"\"}\r\n                   paginationMode=\"server\"\r\n                //    onPageSizeChange={handlePageSizeChange}\r\n                //    onPageChange={handlePageChange}\r\n                   loading={isLoading}                   \r\n                   rowHeight={30}\r\n                   components={{\r\n                       Pagination:CustomPagination,\r\n                       NoRowsOverlay: CustomNoRowsOverlay,\r\n                   }}\r\n                    columns={[\r\n                        {\r\n                            field: 'id',\r\n                            headerName:\"Sr No.\",\r\n                            width:120\r\n                        },\r\n                        {\r\n                            field: 'group_id',\r\n                            headerName:\"Group ID\",\r\n                            width:120\r\n                        },\r\n                        {\r\n                            field: 'group_name',\r\n                            headerName:\"Group Name\",\r\n                            width:200\r\n                        },\r\n                        {\r\n                            field: 'description',\r\n                            headerName:\"Description\",\r\n                            width:200\r\n                        },\r\n                        {\r\n                            field: '',\r\n                            headerName:\"Actions\",\r\n                            renderCell:(params) => (\r\n                                <div className=\"action_btns\">\r\n                                    {/* <i className=\"fas fa-search mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i> */}\r\n                                    <i className=\"far fa-edit mr-2\" onClick={() => onPreviewOrEdit(params.row)}></i>\r\n                                    <i className=\"far fa-trash-alt mr-2\"></i>\r\n                                </div>\r\n                            ),\r\n                            width:150\r\n                        } \r\n                        \r\n                    ]}\r\n                    rows={ []}\r\n                />\r\n            </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default ConfigGroupBrowse;\r\n"]},"metadata":{},"sourceType":"module"}