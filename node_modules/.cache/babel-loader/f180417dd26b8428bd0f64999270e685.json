{"ast":null,"code":"function buildLocalizeTokenFn(schema) {\n  return function (count, options) {\n    if (count === 1) {\n      if (options.addSuffix) {\n        return schema.one[0].replace('{{time}}', schema.one[2]);\n      } else {\n        return schema.one[0].replace('{{time}}', schema.one[1]);\n      }\n    } else {\n      var rem = count % 10 === 1 && count % 100 !== 11;\n      if (options.addSuffix) {\n        return schema.other[0].replace('{{time}}', rem ? schema.other[3] : schema.other[4]).replace('{{count}}', count);\n      } else {\n        return schema.other[0].replace('{{time}}', rem ? schema.other[1] : schema.other[2]).replace('{{count}}', count);\n      }\n    }\n  };\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    one: ['mazāk par {{time}}', 'sekundi', 'sekundi'],\n    other: ['mazāk nekā {{count}} {{time}}', 'sekunde', 'sekundes', 'sekundes', 'sekundēm']\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'sekunde', 'sekundes'],\n    other: ['{{count}} {{time}}', 'sekunde', 'sekundes', 'sekundes', 'sekundēm']\n  }),\n  halfAMinute: function halfAMinute(count, options) {\n    if (options.addSuffix) {\n      return 'pusminūtes';\n    } else {\n      return 'pusminūte';\n    }\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    one: ['mazāk par {{time}}', 'minūti', 'minūti'],\n    other: ['mazāk nekā {{count}} {{time}}', 'minūte', 'minūtes', 'minūtes', 'minūtēm']\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'minūte', 'minūtes'],\n    other: ['{{count}} {{time}}', 'minūte', 'minūtes', 'minūtes', 'minūtēm']\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'stunda', 'stundas'],\n    other: ['apmēram {{count}} {{time}}', 'stunda', 'stundas', 'stundas', 'stundām']\n  }),\n  xHours: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'stunda', 'stundas'],\n    other: ['{{count}} {{time}}', 'stunda', 'stundas', 'stundas', 'stundām']\n  }),\n  xDays: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'diena', 'dienas'],\n    other: ['{{count}} {{time}}', 'diena', 'dienas', 'dienas', 'dienām']\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'nedēļa', 'nedēļas'],\n    other: ['apmēram {{count}} {{time}}', 'nedēļa', 'nedēļu', 'nedēļas', 'nedēļām']\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'nedēļa', 'nedēļas'],\n    other: ['{{count}} {{time}}',\n    // TODO\n    'nedēļa', 'nedēļu', 'nedēļas', 'nedēļām']\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'mēnesis', 'mēneša'],\n    other: ['apmēram {{count}} {{time}}', 'mēnesis', 'mēneši', 'mēneša', 'mēnešiem']\n  }),\n  xMonths: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'mēnesis', 'mēneša'],\n    other: ['{{count}} {{time}}', 'mēnesis', 'mēneši', 'mēneša', 'mēnešiem']\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'gads', 'gada'],\n    other: ['apmēram {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  xYears: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'gads', 'gada'],\n    other: ['{{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  overXYears: buildLocalizeTokenFn({\n    one: ['ilgāk par 1 {{time}}', 'gadu', 'gadu'],\n    other: ['vairāk nekā {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    one: ['gandrīz 1 {{time}}', 'gads', 'gada'],\n    other: ['vairāk nekā {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result = formatDistanceLocale[token](count, options);\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'pēc ' + result;\n    } else {\n      return 'pirms ' + result;\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["buildLocalizeTokenFn","schema","count","options","addSuffix","one","replace","rem","other","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance","token","result","comparison"],"sources":["F:/React code/diagnostic/node_modules/date-fns/esm/locale/lv/_lib/formatDistance/index.js"],"sourcesContent":["function buildLocalizeTokenFn(schema) {\n  return function (count, options) {\n    if (count === 1) {\n      if (options.addSuffix) {\n        return schema.one[0].replace('{{time}}', schema.one[2]);\n      } else {\n        return schema.one[0].replace('{{time}}', schema.one[1]);\n      }\n    } else {\n      var rem = count % 10 === 1 && count % 100 !== 11;\n\n      if (options.addSuffix) {\n        return schema.other[0].replace('{{time}}', rem ? schema.other[3] : schema.other[4]).replace('{{count}}', count);\n      } else {\n        return schema.other[0].replace('{{time}}', rem ? schema.other[1] : schema.other[2]).replace('{{count}}', count);\n      }\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    one: ['mazāk par {{time}}', 'sekundi', 'sekundi'],\n    other: ['mazāk nekā {{count}} {{time}}', 'sekunde', 'sekundes', 'sekundes', 'sekundēm']\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'sekunde', 'sekundes'],\n    other: ['{{count}} {{time}}', 'sekunde', 'sekundes', 'sekundes', 'sekundēm']\n  }),\n  halfAMinute: function (count, options) {\n    if (options.addSuffix) {\n      return 'pusminūtes';\n    } else {\n      return 'pusminūte';\n    }\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    one: ['mazāk par {{time}}', 'minūti', 'minūti'],\n    other: ['mazāk nekā {{count}} {{time}}', 'minūte', 'minūtes', 'minūtes', 'minūtēm']\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'minūte', 'minūtes'],\n    other: ['{{count}} {{time}}', 'minūte', 'minūtes', 'minūtes', 'minūtēm']\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'stunda', 'stundas'],\n    other: ['apmēram {{count}} {{time}}', 'stunda', 'stundas', 'stundas', 'stundām']\n  }),\n  xHours: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'stunda', 'stundas'],\n    other: ['{{count}} {{time}}', 'stunda', 'stundas', 'stundas', 'stundām']\n  }),\n  xDays: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'diena', 'dienas'],\n    other: ['{{count}} {{time}}', 'diena', 'dienas', 'dienas', 'dienām']\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'nedēļa', 'nedēļas'],\n    other: ['apmēram {{count}} {{time}}', 'nedēļa', 'nedēļu', 'nedēļas', 'nedēļām']\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'nedēļa', 'nedēļas'],\n    other: ['{{count}} {{time}}', // TODO\n    'nedēļa', 'nedēļu', 'nedēļas', 'nedēļām']\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'mēnesis', 'mēneša'],\n    other: ['apmēram {{count}} {{time}}', 'mēnesis', 'mēneši', 'mēneša', 'mēnešiem']\n  }),\n  xMonths: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'mēnesis', 'mēneša'],\n    other: ['{{count}} {{time}}', 'mēnesis', 'mēneši', 'mēneša', 'mēnešiem']\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    one: ['apmēram 1 {{time}}', 'gads', 'gada'],\n    other: ['apmēram {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  xYears: buildLocalizeTokenFn({\n    one: ['1 {{time}}', 'gads', 'gada'],\n    other: ['{{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  overXYears: buildLocalizeTokenFn({\n    one: ['ilgāk par 1 {{time}}', 'gadu', 'gadu'],\n    other: ['vairāk nekā {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    one: ['gandrīz 1 {{time}}', 'gads', 'gada'],\n    other: ['vairāk nekā {{count}} {{time}}', 'gads', 'gadi', 'gada', 'gadiem']\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result = formatDistanceLocale[token](count, options);\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'pēc ' + result;\n    } else {\n      return 'pirms ' + result;\n    }\n  }\n\n  return result;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}