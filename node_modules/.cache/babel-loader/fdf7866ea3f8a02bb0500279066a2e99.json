{"ast":null,"code":"import { userService } from \"../../../services\";\nexport const ProductMasterController = {\n  getProductBrowse,\n  getCategoryList,\n  getLPRefList,\n  getGGNameList,\n  updateProductVerifyStatus,\n  updateProductListPrice,\n  updateProductLpRef,\n  updateProductMovingNonMoving\n};\nasync function getProductBrowse(params, filters) {\n  try {\n    let apiEndpoint = `master/browse_product_master?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\n    let response = await userService.post(apiEndpoint, filters, \"node\");\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getCategoryList() {\n  try {\n    let apiEndpoint = `Dropdown/GetCategoryList`;\n    let response = await userService.post(apiEndpoint);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getLPRefList() {\n  try {\n    let apiEndpoint = `Dropdown/GetLpRefList`;\n    let response = await userService.post(apiEndpoint);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function getGGNameList() {\n  try {\n    let apiEndpoint = `Dropdown/GetGGList`;\n    let response = await userService.post(apiEndpoint);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function updateProductVerifyStatus(param) {\n  try {\n    let apiEndpoint = `Product/UpdateProductEdit`;\n    let response = await userService.post(apiEndpoint, param);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function updateProductListPrice(param) {\n  try {\n    let apiEndpoint = `Product/UpdateProductListPrice`;\n    let response = await userService.post(apiEndpoint, param);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function updateProductLpRef(param) {\n  try {\n    let apiEndpoint = `Product/UpdateProductLPRef`;\n    let response = await userService.post(apiEndpoint, param);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}\nasync function updateProductMovingNonMoving(param) {\n  try {\n    let apiEndpoint = `Product/UpdateProductMovingNonMoving`;\n    let response = await userService.post(apiEndpoint, param);\n    if (response) {\n      return response.data;\n    } else {\n      if (response.data.status !== 500) {\n        alert(response.data);\n      }\n      return null;\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["userService","ProductMasterController","getProductBrowse","getCategoryList","getLPRefList","getGGNameList","updateProductVerifyStatus","updateProductListPrice","updateProductLpRef","updateProductMovingNonMoving","params","filters","apiEndpoint","filter_value","pageNo","pageSize","sort_column","sort_order","response","post","data","status","alert","error","console","log","param"],"sources":["F:/React code/diagnostic/src/_redux/controller/Masters/product.controller.js"],"sourcesContent":["import { userService } from \"../../../services\";\r\n\r\nexport const ProductMasterController = {\r\n     getProductBrowse,\r\n     getCategoryList,\r\n     getLPRefList,\r\n     getGGNameList,\r\n     updateProductVerifyStatus,\r\n     updateProductListPrice,\r\n     updateProductLpRef,\r\n     updateProductMovingNonMoving\r\n}\r\n\r\n\r\nasync function getProductBrowse(params , filters) {\r\n    try {\r\n        let apiEndpoint = `master/browse_product_master?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint , filters,\"node\");\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getCategoryList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetCategoryList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function getLPRefList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetLpRefList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getGGNameList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetGGList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function updateProductVerifyStatus(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductEdit`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function updateProductListPrice(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductListPrice`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function updateProductLpRef(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductLPRef`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateProductMovingNonMoving(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductMovingNonMoving`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}