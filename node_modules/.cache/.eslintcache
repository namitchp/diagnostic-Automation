[{"E:\\reactProject\\diagnosticnew\\src\\index.js":"1","E:\\reactProject\\diagnosticnew\\src\\reportWebVitals.js":"2","E:\\reactProject\\diagnosticnew\\src\\App.js":"3","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\index.js":"4","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\index.js":"5","E:\\reactProject\\diagnosticnew\\src\\layouts\\layout.js":"6","E:\\reactProject\\diagnosticnew\\src\\pages\\Auth\\Login.js":"7","E:\\reactProject\\diagnosticnew\\src\\pages\\index.js":"8","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\common.saga.js":"9","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\auth.reducer.js":"10","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\common.reducer.js":"11","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\auth.saga.js":"12","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\materialcode.saga.js":"13","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\configuration.saga.js":"14","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\product.saga.js":"15","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\account.saga.js":"16","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\configuration.reducer.js":"17","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\account.reducer.js":"18","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\product.reducer.js":"19","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\materialcode.reducer.js":"20","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\all.reducer.js":"21","E:\\reactProject\\diagnosticnew\\src\\routes.js":"22","E:\\reactProject\\diagnosticnew\\src\\components\\RouteWithSubRoutes.js":"23","E:\\reactProject\\diagnosticnew\\src\\components\\breadcrumbs.js":"24","E:\\reactProject\\diagnosticnew\\src\\components\\header.js":"25","E:\\reactProject\\diagnosticnew\\src\\components\\sidebar.js":"26","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\common.action.js":"27","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\auth.action.js":"28","E:\\reactProject\\diagnosticnew\\src\\components\\GlobalAlert.js":"29","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\common.controller.js":"30","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\auth.controller.js":"31","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\product.action.js":"32","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\configuration.action.js":"33","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\materialcode.controller.js":"34","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\account.action.js":"35","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\configuration.controller.js":"36","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\product.controller.js":"37","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\materialcode.action.js":"38","E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\account.controller.js":"39","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\all.action.js":"40","E:\\reactProject\\diagnosticnew\\src\\layouts\\Logistics.js":"41","E:\\reactProject\\diagnosticnew\\src\\layouts\\Profile.js":"42","E:\\reactProject\\diagnosticnew\\src\\layouts\\Masters.js":"43","E:\\reactProject\\diagnosticnew\\src\\layouts\\Stock.js":"44","E:\\reactProject\\diagnosticnew\\src\\layouts\\Sales.js":"45","E:\\reactProject\\diagnosticnew\\src\\layouts\\Support.js":"46","E:\\reactProject\\diagnosticnew\\src\\layouts\\Dashboard.js":"47","E:\\reactProject\\diagnosticnew\\src\\components\\appbar.js":"48","E:\\reactProject\\diagnosticnew\\src\\components\\third_menu.js":"49","E:\\reactProject\\diagnosticnew\\src\\components\\sub_menu.js":"50","E:\\reactProject\\diagnosticnew\\src\\components\\main_menu.js":"51","E:\\reactProject\\diagnosticnew\\src\\services.js":"52","E:\\reactProject\\diagnosticnew\\src\\config.js":"53","E:\\reactProject\\diagnosticnew\\src\\components\\leftModal.js":"54","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\changePassword.js":"55","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\attendance.js":"56","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\profile.js":"57","E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\itemLedgerBrowse.js":"58","E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\serialLedgerBrowse.js":"59","E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\stockBrowse.js":"60","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\user rights\\browse.js":"61","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\index.js":"62","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\index.js":"63","E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\index.js":"64","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\index.js":"65","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\index.js":"66","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\index.js":"67","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\index.js":"68","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\index.js":"69","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\index.js":"70","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\index.js":"71","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\index.js":"72","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\index.js":"73","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\index.js":"74","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\index.js":"75","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\index.js":"76","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\index.js":"77","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\index.js":"78","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\index.js":"79","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\index.js":"80","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\index.js":"81","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\index.js":"82","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\index.js":"83","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\index.js":"84","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Enquiry\\index.js":"85","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\issues\\index.js":"86","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\marketingVisit\\index.js":"87","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\quotation\\index.js":"88","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Costing\\index.js":"89","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\soAmedment\\index.js":"90","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPos\\index.js":"91","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPosSummarise\\index.js":"92","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\index.js":"93","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\index.js":"94","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketApproval\\index.js":"95","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slDI\\index.js":"96","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\soDetail\\index.js":"97","E:\\reactProject\\diagnosticnew\\src\\components\\common.js":"98","E:\\reactProject\\diagnosticnew\\src\\components\\CustomPagination.js":"99","E:\\reactProject\\diagnosticnew\\src\\components\\customRowComponent.js":"100","E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\browse.js":"101","E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\form.js":"102","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\browse.js":"103","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\browse.js":"104","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\add.js":"105","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\add.js":"106","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\form.js":"107","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\tcs.js":"108","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\browse.js":"109","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\browse.js":"110","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\add.js":"111","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\browse.js":"112","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\browse.js":"113","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\add.js":"114","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\browse.js":"115","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\dc-add.js":"116","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\browse.js":"117","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\add.js":"118","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\browse.js":"119","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\addCombo.js":"120","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\addEntry.js":"121","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\browse.js":"122","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\addItem.js":"123","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\addMaterialCode.js":"124","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\browse.js":"125","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\browse.js":"126","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\add.js":"127","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\add.js":"128","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\browse.js":"129","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\browse.js":"130","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\mdc-add.js":"131","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\browse.js":"132","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\add.js":"133","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\browse.js":"134","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Enquiry\\browse.js":"135","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\addProduct.js":"136","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\browse.js":"137","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\issues\\browse.js":"138","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\quotation\\browse.js":"139","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Costing\\browse.js":"140","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\marketingVisit\\browse.js":"141","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\addEntry.js":"142","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\soAmedment\\browse.js":"143","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\browse.js":"144","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\addTicket.js":"145","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\tcBrowse.js":"146","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\addCommericial.js":"147","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketApproval\\browse.js":"148","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\browse.js":"149","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\browse.js":"150","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\browse.js":"151","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\add.js":"152","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\add.js":"153","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\browse.js":"154","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\add.js":"155","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPos\\browse.js":"156","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPosSummarise\\browse.js":"157","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slDI\\browse.js":"158","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\soDetail\\browse.js":"159","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\index.js":"160","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\index.js":"161","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\index.js":"162","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\index.js":"163","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\index.js":"164","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\index.js":"165","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\index.js":"166","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\index.js":"167","E:\\reactProject\\diagnosticnew\\src\\components\\dateFilter.js":"168","E:\\reactProject\\diagnosticnew\\src\\components\\table-picker.js":"169","E:\\reactProject\\diagnosticnew\\src\\components\\basic-table.js":"170","E:\\reactProject\\diagnosticnew\\src\\components\\action-buttons.js":"171","E:\\reactProject\\diagnosticnew\\src\\components\\loader.js":"172","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\contact_person.js":"173","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\generalInfo.js":"174","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\tnc.js":"175","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\general.js":"176","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\other.js":"177","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\other.js":"178","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\general.js":"179","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\browse.js":"180","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\form.js":"181","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\subIndex.js":"182","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\subIndex.js":"183","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\index.js":"184","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\index.js":"185","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\index.js":"186","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\index.js":"187","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\index.js":"188","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\index.js":"189","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\index.js":"190","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\index.js":"191","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\index.js":"192","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\index.js":"193","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\index.js":"194","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\index.js":"195","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\index.js":"196","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\index.js":"197","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\index.js":"198","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\index.js":"199","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\index.js":"200","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\index.js":"201","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\index.js":"202","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\index.js":"203","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\index.js":"204","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\index.js":"205","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\index.js":"206","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\index.js":"207","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\index.js":"208","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\index.js":"209","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\index.js":"210","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\index.js":"211","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\index.js":"212","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\index.js":"213","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\index.js":"214","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\index.js":"215","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\index.js":"216","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\index.js":"217","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\form.js":"218","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\browse.js":"219","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\form.js":"220","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\browse.js":"221","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\form.js":"222","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\browse.js":"223","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\browse.js":"224","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\form.js":"225","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\browse.js":"226","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\form.js":"227","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\browse.js":"228","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\form.js":"229","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\form.js":"230","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\browse.js":"231","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\browse.js":"232","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\form.js":"233","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\form.js":"234","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\browse.js":"235","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\browse.js":"236","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\form.js":"237","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\browse.js":"238","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\browse.js":"239","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\form.js":"240","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\form.js":"241","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\browse.js":"242","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\form.js":"243","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\browse.js":"244","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\form.js":"245","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\browse.js":"246","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\form.js":"247","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\browse.js":"248","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\browse.js":"249","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\browse.js":"250","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\form.js":"251","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\form.js":"252","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\form.js":"253","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\browse.js":"254","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\browse.js":"255","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\form.js":"256","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\browse.js":"257","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\form.js":"258","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\form.js":"259","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\form.js":"260","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\browse.js":"261","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\browse.js":"262","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\form.js":"263","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\browse.js":"264","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\form.js":"265","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\browse.js":"266","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\form.js":"267","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\browse.js":"268","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\form.js":"269","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\form.js":"270","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\browse.js":"271","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\browse.js":"272","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\browse.js":"273","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\form.js":"274","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\form.js":"275","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\browse.js":"276","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\form.js":"277","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\form.js":"278","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\browse.js":"279","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\form.js":"280","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\browse.js":"281","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\browse.js":"282","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\form.js":"283","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\browse.js":"284","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\form.js":"285","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\browse.js":"286","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\browse.js":"287","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\form.js":"288","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\form.js":"289"},{"size":999,"mtime":1673861979620,"results":"290","hashOfConfig":"291"},{"size":375,"mtime":1673861979817,"results":"292","hashOfConfig":"291"},{"size":2062,"mtime":1673861979560,"results":"293","hashOfConfig":"291"},{"size":725,"mtime":1673861979566,"results":"294","hashOfConfig":"291"},{"size":871,"mtime":1673861979577,"results":"295","hashOfConfig":"291"},{"size":1933,"mtime":1676008486621,"results":"296","hashOfConfig":"291"},{"size":7492,"mtime":1673861979629,"results":"297","hashOfConfig":"291"},{"size":2150,"mtime":1673861979796,"results":"298","hashOfConfig":"291"},{"size":3512,"mtime":1673861979566,"results":"299","hashOfConfig":"291"},{"size":2141,"mtime":1673861979576,"results":"300","hashOfConfig":"291"},{"size":2007,"mtime":1676046423244,"results":"301","hashOfConfig":"291"},{"size":1598,"mtime":1673861979566,"results":"302","hashOfConfig":"291"},{"size":1220,"mtime":1674057466934,"results":"303","hashOfConfig":"291"},{"size":2759,"mtime":1673861979565,"results":"304","hashOfConfig":"291"},{"size":3722,"mtime":1673957507149,"results":"305","hashOfConfig":"291"},{"size":2562,"mtime":1673861979565,"results":"306","hashOfConfig":"291"},{"size":3355,"mtime":1673861979576,"results":"307","hashOfConfig":"291"},{"size":1742,"mtime":1673861979567,"results":"308","hashOfConfig":"291"},{"size":2625,"mtime":1673957697554,"results":"309","hashOfConfig":"291"},{"size":1152,"mtime":1674054695302,"results":"310","hashOfConfig":"291"},{"size":2084,"mtime":1673861979575,"results":"311","hashOfConfig":"291"},{"size":935,"mtime":1673861979817,"results":"312","hashOfConfig":"291"},{"size":352,"mtime":1673861979613,"results":"313","hashOfConfig":"291"},{"size":1495,"mtime":1674559185144,"results":"314","hashOfConfig":"291"},{"size":4829,"mtime":1676110352071,"results":"315","hashOfConfig":"291"},{"size":1466,"mtime":1673861979618,"results":"316","hashOfConfig":"291"},{"size":2040,"mtime":1676046318606,"results":"317","hashOfConfig":"291"},{"size":987,"mtime":1673861979561,"results":"318","hashOfConfig":"291"},{"size":821,"mtime":1673861979613,"results":"319","hashOfConfig":"291"},{"size":6736,"mtime":1674280382409,"results":"320","hashOfConfig":"291"},{"size":1700,"mtime":1673861979564,"results":"321","hashOfConfig":"291"},{"size":1822,"mtime":1673957326039,"results":"322","hashOfConfig":"291"},{"size":2654,"mtime":1673861979562,"results":"323","hashOfConfig":"291"},{"size":2600,"mtime":1676008486616,"results":"324","hashOfConfig":"291"},{"size":1280,"mtime":1673861979562,"results":"325","hashOfConfig":"291"},{"size":3237,"mtime":1673861979563,"results":"326","hashOfConfig":"291"},{"size":4696,"mtime":1673957164193,"results":"327","hashOfConfig":"291"},{"size":850,"mtime":1674057476419,"results":"328","hashOfConfig":"291"},{"size":3000,"mtime":1673861979563,"results":"329","hashOfConfig":"291"},{"size":5413,"mtime":1673861979562,"results":"330","hashOfConfig":"291"},{"size":3932,"mtime":1673861979621,"results":"331","hashOfConfig":"291"},{"size":772,"mtime":1673861979626,"results":"332","hashOfConfig":"291"},{"size":5783,"mtime":1676110279369,"results":"333","hashOfConfig":"291"},{"size":778,"mtime":1673861979627,"results":"334","hashOfConfig":"291"},{"size":2763,"mtime":1676008486620,"results":"335","hashOfConfig":"291"},{"size":884,"mtime":1673861979627,"results":"336","hashOfConfig":"291"},{"size":197,"mtime":1673861979620,"results":"337","hashOfConfig":"291"},{"size":8381,"mtime":1674563270859,"results":"338","hashOfConfig":"291"},{"size":2790,"mtime":1676105666455,"results":"339","hashOfConfig":"291"},{"size":2668,"mtime":1676084403665,"results":"340","hashOfConfig":"291"},{"size":1463,"mtime":1676087356738,"results":"341","hashOfConfig":"291"},{"size":4513,"mtime":1673861979817,"results":"342","hashOfConfig":"291"},{"size":338,"mtime":1676008486618,"results":"343","hashOfConfig":"291"},{"size":11691,"mtime":1673861979618,"results":"344","hashOfConfig":"291"},{"size":3789,"mtime":1673861979777,"results":"345","hashOfConfig":"291"},{"size":6426,"mtime":1673861979776,"results":"346","hashOfConfig":"291"},{"size":4245,"mtime":1673861979777,"results":"347","hashOfConfig":"291"},{"size":7257,"mtime":1673861979792,"results":"348","hashOfConfig":"291"},{"size":7250,"mtime":1673861979792,"results":"349","hashOfConfig":"291"},{"size":10193,"mtime":1673861979793,"results":"350","hashOfConfig":"291"},{"size":15922,"mtime":1676008486826,"results":"351","hashOfConfig":"291"},{"size":1431,"mtime":1673861979804,"results":"352","hashOfConfig":"291"},{"size":3063,"mtime":1675061937779,"results":"353","hashOfConfig":"291"},{"size":1310,"mtime":1673861979630,"results":"354","hashOfConfig":"291"},{"size":1238,"mtime":1673861979807,"results":"355","hashOfConfig":"291"},{"size":1737,"mtime":1673861979802,"results":"356","hashOfConfig":"291"},{"size":1786,"mtime":1673861979809,"results":"357","hashOfConfig":"291"},{"size":1767,"mtime":1673861979799,"results":"358","hashOfConfig":"291"},{"size":2294,"mtime":1673861979813,"results":"359","hashOfConfig":"291"},{"size":1726,"mtime":1673861979811,"results":"360","hashOfConfig":"291"},{"size":1616,"mtime":1673861979762,"results":"361","hashOfConfig":"291"},{"size":1922,"mtime":1675144837358,"results":"362","hashOfConfig":"291"},{"size":4708,"mtime":1676008486770,"results":"363","hashOfConfig":"291"},{"size":1575,"mtime":1673861979774,"results":"364","hashOfConfig":"291"},{"size":2111,"mtime":1674901140490,"results":"365","hashOfConfig":"291"},{"size":1738,"mtime":1673861979802,"results":"366","hashOfConfig":"291"},{"size":1421,"mtime":1673861979805,"results":"367","hashOfConfig":"291"},{"size":1734,"mtime":1673861979810,"results":"368","hashOfConfig":"291"},{"size":1753,"mtime":1673861979803,"results":"369","hashOfConfig":"291"},{"size":1353,"mtime":1673861979814,"results":"370","hashOfConfig":"291"},{"size":1714,"mtime":1673861979812,"results":"371","hashOfConfig":"291"},{"size":1601,"mtime":1673861979771,"results":"372","hashOfConfig":"291"},{"size":1845,"mtime":1673861979799,"results":"373","hashOfConfig":"291"},{"size":2382,"mtime":1675011341241,"results":"374","hashOfConfig":"291"},{"size":1353,"mtime":1673861979779,"results":"375","hashOfConfig":"291"},{"size":1363,"mtime":1673861979780,"results":"376","hashOfConfig":"291"},{"size":1377,"mtime":1673861979781,"results":"377","hashOfConfig":"291"},{"size":1373,"mtime":1673861979781,"results":"378","hashOfConfig":"291"},{"size":1320,"mtime":1673861979778,"results":"379","hashOfConfig":"291"},{"size":1355,"mtime":1673861979791,"results":"380","hashOfConfig":"291"},{"size":1404,"mtime":1673861979783,"results":"381","hashOfConfig":"291"},{"size":1449,"mtime":1673861979784,"results":"382","hashOfConfig":"291"},{"size":1289,"mtime":1673861979815,"results":"383","hashOfConfig":"291"},{"size":1772,"mtime":1673861979816,"results":"384","hashOfConfig":"291"},{"size":1553,"mtime":1673861979815,"results":"385","hashOfConfig":"291"},{"size":1391,"mtime":1673861979783,"results":"386","hashOfConfig":"291"},{"size":1335,"mtime":1673861979785,"results":"387","hashOfConfig":"291"},{"size":2006,"mtime":1673861979617,"results":"388","hashOfConfig":"291"},{"size":1855,"mtime":1674711178661,"results":"389","hashOfConfig":"291"},{"size":3385,"mtime":1673861979617,"results":"390","hashOfConfig":"291"},{"size":4703,"mtime":1673861979629,"results":"391","hashOfConfig":"291"},{"size":12869,"mtime":1673861979629,"results":"392","hashOfConfig":"291"},{"size":8206,"mtime":1673861979803,"results":"393","hashOfConfig":"291"},{"size":17508,"mtime":1675014818899,"results":"394","hashOfConfig":"291"},{"size":22318,"mtime":1673861979800,"results":"395","hashOfConfig":"291"},{"size":22318,"mtime":1673861979808,"results":"396","hashOfConfig":"291"},{"size":7757,"mtime":1675079200841,"results":"397","hashOfConfig":"291"},{"size":6380,"mtime":1674837611298,"results":"398","hashOfConfig":"291"},{"size":7389,"mtime":1673861979808,"results":"399","hashOfConfig":"291"},{"size":6788,"mtime":1673861979801,"results":"400","hashOfConfig":"291"},{"size":22310,"mtime":1673861979797,"results":"401","hashOfConfig":"291"},{"size":6792,"mtime":1673861979797,"results":"402","hashOfConfig":"291"},{"size":6240,"mtime":1673861979813,"results":"403","hashOfConfig":"291"},{"size":22329,"mtime":1673861979810,"results":"404","hashOfConfig":"291"},{"size":7323,"mtime":1673861979811,"results":"405","hashOfConfig":"291"},{"size":20297,"mtime":1673861979804,"results":"406","hashOfConfig":"291"},{"size":7245,"mtime":1673861979807,"results":"407","hashOfConfig":"291"},{"size":22323,"mtime":1673861979806,"results":"408","hashOfConfig":"291"},{"size":4993,"mtime":1673861979762,"results":"409","hashOfConfig":"291"},{"size":9105,"mtime":1673861979761,"results":"410","hashOfConfig":"291"},{"size":6591,"mtime":1675144073026,"results":"411","hashOfConfig":"291"},{"size":8007,"mtime":1675147115723,"results":"412","hashOfConfig":"291"},{"size":19962,"mtime":1673861979772,"results":"413","hashOfConfig":"291"},{"size":18443,"mtime":1676008486820,"results":"414","hashOfConfig":"291"},{"size":5813,"mtime":1674709451529,"results":"415","hashOfConfig":"291"},{"size":8616,"mtime":1676008486821,"results":"416","hashOfConfig":"291"},{"size":22321,"mtime":1673861979813,"results":"417","hashOfConfig":"291"},{"size":22333,"mtime":1673861979801,"results":"418","hashOfConfig":"291"},{"size":6834,"mtime":1673861979802,"results":"419","hashOfConfig":"291"},{"size":7282,"mtime":1674207977899,"results":"420","hashOfConfig":"291"},{"size":16052,"mtime":1673861979805,"results":"421","hashOfConfig":"291"},{"size":7021,"mtime":1673861979810,"results":"422","hashOfConfig":"291"},{"size":22333,"mtime":1673861979809,"results":"423","hashOfConfig":"291"},{"size":5001,"mtime":1673861979771,"results":"424","hashOfConfig":"291"},{"size":15266,"mtime":1673861979779,"results":"425","hashOfConfig":"291"},{"size":5751,"mtime":1675079370866,"results":"426","hashOfConfig":"291"},{"size":22410,"mtime":1676008486823,"results":"427","hashOfConfig":"291"},{"size":15933,"mtime":1673861979780,"results":"428","hashOfConfig":"291"},{"size":16239,"mtime":1673861979781,"results":"429","hashOfConfig":"291"},{"size":9895,"mtime":1673861979778,"results":"430","hashOfConfig":"291"},{"size":16071,"mtime":1673861979780,"results":"431","hashOfConfig":"291"},{"size":3655,"mtime":1673861979770,"results":"432","hashOfConfig":"291"},{"size":16231,"mtime":1673861979791,"results":"433","hashOfConfig":"291"},{"size":13452,"mtime":1673861979815,"results":"434","hashOfConfig":"291"},{"size":10454,"mtime":1673861979814,"results":"435","hashOfConfig":"291"},{"size":6459,"mtime":1673861979817,"results":"436","hashOfConfig":"291"},{"size":10562,"mtime":1673861979816,"results":"437","hashOfConfig":"291"},{"size":6807,"mtime":1673861979815,"results":"438","hashOfConfig":"291"},{"size":6469,"mtime":1673861979803,"results":"439","hashOfConfig":"291"},{"size":6586,"mtime":1673861979814,"results":"440","hashOfConfig":"291"},{"size":6798,"mtime":1673861979812,"results":"441","hashOfConfig":"291"},{"size":22341,"mtime":1673861979802,"results":"442","hashOfConfig":"291"},{"size":22338,"mtime":1673861979811,"results":"443","hashOfConfig":"291"},{"size":7138,"mtime":1673861979799,"results":"444","hashOfConfig":"291"},{"size":22325,"mtime":1673861979798,"results":"445","hashOfConfig":"291"},{"size":16260,"mtime":1673861979783,"results":"446","hashOfConfig":"291"},{"size":16274,"mtime":1673861979784,"results":"447","hashOfConfig":"291"},{"size":16250,"mtime":1673861979782,"results":"448","hashOfConfig":"291"},{"size":16248,"mtime":1673861979785,"results":"449","hashOfConfig":"291"},{"size":2055,"mtime":1676008486728,"results":"450","hashOfConfig":"291"},{"size":1855,"mtime":1676008486748,"results":"451","hashOfConfig":"291"},{"size":2116,"mtime":1676008486780,"results":"452","hashOfConfig":"291"},{"size":1405,"mtime":1676008486788,"results":"453","hashOfConfig":"291"},{"size":1696,"mtime":1676008486741,"results":"454","hashOfConfig":"291"},{"size":2887,"mtime":1676008486797,"results":"455","hashOfConfig":"291"},{"size":1878,"mtime":1676008486746,"results":"456","hashOfConfig":"291"},{"size":1739,"mtime":1676008486772,"results":"457","hashOfConfig":"291"},{"size":2869,"mtime":1673861979617,"results":"458","hashOfConfig":"291"},{"size":10947,"mtime":1674709305501,"results":"459","hashOfConfig":"291"},{"size":3334,"mtime":1674208630515,"results":"460","hashOfConfig":"291"},{"size":601,"mtime":1673861979613,"results":"461","hashOfConfig":"291"},{"size":301,"mtime":1673861979618,"results":"462","hashOfConfig":"291"},{"size":7588,"mtime":1674740100460,"results":"463","hashOfConfig":"291"},{"size":12623,"mtime":1674839642764,"results":"464","hashOfConfig":"291"},{"size":12303,"mtime":1675061948928,"results":"465","hashOfConfig":"291"},{"size":12955,"mtime":1676008486824,"results":"466","hashOfConfig":"291"},{"size":3966,"mtime":1674910404321,"results":"467","hashOfConfig":"291"},{"size":6943,"mtime":1675013920609,"results":"468","hashOfConfig":"291"},{"size":11188,"mtime":1675013682634,"results":"469","hashOfConfig":"291"},{"size":6575,"mtime":1676008486771,"results":"470","hashOfConfig":"291"},{"size":5773,"mtime":1673861979729,"results":"471","hashOfConfig":"291"},{"size":1699,"mtime":1676008486789,"results":"472","hashOfConfig":"291"},{"size":1696,"mtime":1676008486747,"results":"473","hashOfConfig":"291"},{"size":1690,"mtime":1676008486727,"results":"474","hashOfConfig":"291"},{"size":1444,"mtime":1676008486729,"results":"475","hashOfConfig":"291"},{"size":1693,"mtime":1676008486732,"results":"476","hashOfConfig":"291"},{"size":1705,"mtime":1676008486723,"results":"477","hashOfConfig":"291"},{"size":1708,"mtime":1676008486725,"results":"478","hashOfConfig":"291"},{"size":1693,"mtime":1676008486735,"results":"479","hashOfConfig":"291"},{"size":1696,"mtime":1676008486736,"results":"480","hashOfConfig":"291"},{"size":1706,"mtime":1676008486738,"results":"481","hashOfConfig":"291"},{"size":1687,"mtime":1676008486769,"results":"482","hashOfConfig":"291"},{"size":1699,"mtime":1676008486767,"results":"483","hashOfConfig":"291"},{"size":1702,"mtime":1676008486765,"results":"484","hashOfConfig":"291"},{"size":1699,"mtime":1676008486773,"results":"485","hashOfConfig":"291"},{"size":1687,"mtime":1676008486782,"results":"486","hashOfConfig":"291"},{"size":1690,"mtime":1676008486779,"results":"487","hashOfConfig":"291"},{"size":1699,"mtime":1676008486750,"results":"488","hashOfConfig":"291"},{"size":1687,"mtime":1676008486786,"results":"489","hashOfConfig":"291"},{"size":1693,"mtime":1676008486743,"results":"490","hashOfConfig":"291"},{"size":1681,"mtime":1676008486776,"results":"491","hashOfConfig":"291"},{"size":1696,"mtime":1676008486740,"results":"492","hashOfConfig":"291"},{"size":1694,"mtime":1676008486796,"results":"493","hashOfConfig":"291"},{"size":1701,"mtime":1676008486744,"results":"494","hashOfConfig":"291"},{"size":1681,"mtime":1676008486813,"results":"495","hashOfConfig":"291"},{"size":1702,"mtime":1676008486801,"results":"496","hashOfConfig":"291"},{"size":1699,"mtime":1676008486790,"results":"497","hashOfConfig":"291"},{"size":1700,"mtime":1676008486803,"results":"498","hashOfConfig":"291"},{"size":1693,"mtime":1676008486810,"results":"499","hashOfConfig":"291"},{"size":1705,"mtime":1676008486792,"results":"500","hashOfConfig":"291"},{"size":1696,"mtime":1676008486805,"results":"501","hashOfConfig":"291"},{"size":1719,"mtime":1676008486808,"results":"502","hashOfConfig":"291"},{"size":1705,"mtime":1676008486799,"results":"503","hashOfConfig":"291"},{"size":1699,"mtime":1676008486794,"results":"504","hashOfConfig":"291"},{"size":1706,"mtime":1676008486815,"results":"505","hashOfConfig":"291"},{"size":1699,"mtime":1676008486818,"results":"506","hashOfConfig":"291"},{"size":1705,"mtime":1676008486816,"results":"507","hashOfConfig":"291"},{"size":3244,"mtime":1673861979738,"results":"508","hashOfConfig":"291"},{"size":5834,"mtime":1676008486787,"results":"509","hashOfConfig":"291"},{"size":3270,"mtime":1673861979722,"results":"510","hashOfConfig":"291"},{"size":5865,"mtime":1676008486745,"results":"511","hashOfConfig":"291"},{"size":3244,"mtime":1673861979692,"results":"512","hashOfConfig":"291"},{"size":5959,"mtime":1676008486726,"results":"513","hashOfConfig":"291"},{"size":6112,"mtime":1676008486729,"results":"514","hashOfConfig":"291"},{"size":4796,"mtime":1673861979693,"results":"515","hashOfConfig":"291"},{"size":5928,"mtime":1676008486730,"results":"516","hashOfConfig":"291"},{"size":3645,"mtime":1673861979694,"results":"517","hashOfConfig":"291"},{"size":5983,"mtime":1676008486724,"results":"518","hashOfConfig":"291"},{"size":3309,"mtime":1673861979690,"results":"519","hashOfConfig":"291"},{"size":3321,"mtime":1673861979691,"results":"520","hashOfConfig":"291"},{"size":5972,"mtime":1676008486722,"results":"521","hashOfConfig":"291"},{"size":5940,"mtime":1676008486734,"results":"522","hashOfConfig":"291"},{"size":3203,"mtime":1673861979717,"results":"523","hashOfConfig":"291"},{"size":3263,"mtime":1673861979716,"results":"524","hashOfConfig":"291"},{"size":5914,"mtime":1676008486736,"results":"525","hashOfConfig":"291"},{"size":5919,"mtime":1676008486737,"results":"526","hashOfConfig":"291"},{"size":3252,"mtime":1673861979718,"results":"527","hashOfConfig":"291"},{"size":5882,"mtime":1676008486768,"results":"528","hashOfConfig":"291"},{"size":5751,"mtime":1676008486751,"results":"529","hashOfConfig":"291"},{"size":3264,"mtime":1673861979728,"results":"530","hashOfConfig":"291"},{"size":3214,"mtime":1673861979727,"results":"531","hashOfConfig":"291"},{"size":5739,"mtime":1676008486766,"results":"532","hashOfConfig":"291"},{"size":3197,"mtime":1673861979726,"results":"533","hashOfConfig":"291"},{"size":5886,"mtime":1676008486773,"results":"534","hashOfConfig":"291"},{"size":3331,"mtime":1673861979732,"results":"535","hashOfConfig":"291"},{"size":5832,"mtime":1676008486781,"results":"536","hashOfConfig":"291"},{"size":3304,"mtime":1673861979724,"results":"537","hashOfConfig":"291"},{"size":5907,"mtime":1676008486749,"results":"538","hashOfConfig":"291"},{"size":5820,"mtime":1676008486785,"results":"539","hashOfConfig":"291"},{"size":5859,"mtime":1676008486777,"results":"540","hashOfConfig":"291"},{"size":3268,"mtime":1673861979734,"results":"541","hashOfConfig":"291"},{"size":3191,"mtime":1673861979736,"results":"542","hashOfConfig":"291"},{"size":3234,"mtime":1673861979735,"results":"543","hashOfConfig":"291"},{"size":5864,"mtime":1676008486742,"results":"544","hashOfConfig":"291"},{"size":5812,"mtime":1676008486775,"results":"545","hashOfConfig":"291"},{"size":3263,"mtime":1673861979720,"results":"546","hashOfConfig":"291"},{"size":5874,"mtime":1676008486739,"results":"547","hashOfConfig":"291"},{"size":3282,"mtime":1673861979719,"results":"548","hashOfConfig":"291"},{"size":3211,"mtime":1673861979733,"results":"549","hashOfConfig":"291"},{"size":5596,"mtime":1673861979721,"results":"550","hashOfConfig":"291"},{"size":5827,"mtime":1676008486812,"results":"551","hashOfConfig":"291"},{"size":5877,"mtime":1676008486795,"results":"552","hashOfConfig":"291"},{"size":3213,"mtime":1673861979753,"results":"553","hashOfConfig":"291"},{"size":5715,"mtime":1676008486744,"results":"554","hashOfConfig":"291"},{"size":3283,"mtime":1673861979744,"results":"555","hashOfConfig":"291"},{"size":5887,"mtime":1676008486790,"results":"556","hashOfConfig":"291"},{"size":3291,"mtime":1673861979739,"results":"557","hashOfConfig":"291"},{"size":5897,"mtime":1676008486800,"results":"558","hashOfConfig":"291"},{"size":3688,"mtime":1673861979748,"results":"559","hashOfConfig":"291"},{"size":3265,"mtime":1673861979752,"results":"560","hashOfConfig":"291"},{"size":5867,"mtime":1676008486809,"results":"561","hashOfConfig":"291"},{"size":5888,"mtime":1676008486792,"results":"562","hashOfConfig":"291"},{"size":5820,"mtime":1676008486802,"results":"563","hashOfConfig":"291"},{"size":3231,"mtime":1673861979749,"results":"564","hashOfConfig":"291"},{"size":3317,"mtime":1673861979741,"results":"565","hashOfConfig":"291"},{"size":5931,"mtime":1676008486807,"results":"566","hashOfConfig":"291"},{"size":3278,"mtime":1673861979750,"results":"567","hashOfConfig":"291"},{"size":3383,"mtime":1673861979751,"results":"568","hashOfConfig":"291"},{"size":5907,"mtime":1676008486798,"results":"569","hashOfConfig":"291"},{"size":3318,"mtime":1673861979745,"results":"570","hashOfConfig":"291"},{"size":5887,"mtime":1676008486793,"results":"571","hashOfConfig":"291"},{"size":5878,"mtime":1676008486804,"results":"572","hashOfConfig":"291"},{"size":3291,"mtime":1673861979742,"results":"573","hashOfConfig":"291"},{"size":5877,"mtime":1676008486814,"results":"574","hashOfConfig":"291"},{"size":3278,"mtime":1673861979754,"results":"575","hashOfConfig":"291"},{"size":5887,"mtime":1676008486818,"results":"576","hashOfConfig":"291"},{"size":5867,"mtime":1676008486816,"results":"577","hashOfConfig":"291"},{"size":3291,"mtime":1673861979757,"results":"578","hashOfConfig":"291"},{"size":3265,"mtime":1673861979755,"results":"579","hashOfConfig":"291"},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18ob8cn",{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","suppressedMessages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"598","messages":"599","suppressedMessages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601"},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628"},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632"},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663"},{"filePath":"664","messages":"665","suppressedMessages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","suppressedMessages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","suppressedMessages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","suppressedMessages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","suppressedMessages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","suppressedMessages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","suppressedMessages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","suppressedMessages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","suppressedMessages":"708","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"709"},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731"},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","suppressedMessages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758"},{"filePath":"759","messages":"760","suppressedMessages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765"},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769"},{"filePath":"770","messages":"771","suppressedMessages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773"},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780"},{"filePath":"781","messages":"782","suppressedMessages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"784","messages":"785","suppressedMessages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"787"},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"795"},{"filePath":"796","messages":"797","suppressedMessages":"798","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799"},{"filePath":"800","messages":"801","suppressedMessages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"803"},{"filePath":"804","messages":"805","suppressedMessages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807"},{"filePath":"808","messages":"809","suppressedMessages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811"},{"filePath":"812","messages":"813","suppressedMessages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"815"},{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"819","messages":"820","suppressedMessages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"822","messages":"823","suppressedMessages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825"},{"filePath":"826","messages":"827","suppressedMessages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"829","messages":"830","suppressedMessages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"832"},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836"},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840"},{"filePath":"841","messages":"842","suppressedMessages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844"},{"filePath":"845","messages":"846","suppressedMessages":"847","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852"},{"filePath":"853","messages":"854","suppressedMessages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856"},{"filePath":"857","messages":"858","suppressedMessages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860"},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867"},{"filePath":"868","messages":"869","suppressedMessages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871"},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875"},{"filePath":"876","messages":"877","suppressedMessages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879"},{"filePath":"880","messages":"881","suppressedMessages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"883"},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887"},{"filePath":"888","messages":"889","suppressedMessages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891"},{"filePath":"892","messages":"893","suppressedMessages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"895"},{"filePath":"896","messages":"897","suppressedMessages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"899"},{"filePath":"900","messages":"901","suppressedMessages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903"},{"filePath":"904","messages":"905","suppressedMessages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"907"},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911"},{"filePath":"912","messages":"913","suppressedMessages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915"},{"filePath":"916","messages":"917","suppressedMessages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"919"},{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929"},{"filePath":"930","messages":"931","suppressedMessages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933"},{"filePath":"934","messages":"935","suppressedMessages":"936","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"937"},{"filePath":"938","messages":"939","suppressedMessages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"941","messages":"942","suppressedMessages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944"},{"filePath":"945","messages":"946","suppressedMessages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948"},{"filePath":"949","messages":"950","suppressedMessages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"952","messages":"953","suppressedMessages":"954","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"955","messages":"956","suppressedMessages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958"},{"filePath":"959","messages":"960","suppressedMessages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"962"},{"filePath":"963","messages":"964","suppressedMessages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966"},{"filePath":"967","messages":"968","suppressedMessages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"970"},{"filePath":"971","messages":"972","suppressedMessages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"974"},{"filePath":"975","messages":"976","suppressedMessages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978"},{"filePath":"979","messages":"980","suppressedMessages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"982"},{"filePath":"983","messages":"984","suppressedMessages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986"},{"filePath":"987","messages":"988","suppressedMessages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990"},{"filePath":"991","messages":"992","suppressedMessages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994"},{"filePath":"995","messages":"996","suppressedMessages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"998"},{"filePath":"999","messages":"1000","suppressedMessages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002"},{"filePath":"1003","messages":"1004","suppressedMessages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1006","messages":"1007","suppressedMessages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1009","messages":"1010","suppressedMessages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012"},{"filePath":"1013","messages":"1014","suppressedMessages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1016","messages":"1017","suppressedMessages":"1018","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"1020"},{"filePath":"1021","messages":"1022","suppressedMessages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1024","messages":"1025","suppressedMessages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1027"},{"filePath":"1028","messages":"1029","suppressedMessages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031"},{"filePath":"1032","messages":"1033","suppressedMessages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035"},{"filePath":"1036","messages":"1037","suppressedMessages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039"},{"filePath":"1040","messages":"1041","suppressedMessages":"1042","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043"},{"filePath":"1044","messages":"1045","suppressedMessages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047"},{"filePath":"1048","messages":"1049","suppressedMessages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051"},{"filePath":"1052","messages":"1053","suppressedMessages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1055"},{"filePath":"1056","messages":"1057","suppressedMessages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059"},{"filePath":"1060","messages":"1061","suppressedMessages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1063","messages":"1064","suppressedMessages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1066","messages":"1067","suppressedMessages":"1068","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1069"},{"filePath":"1070","messages":"1071","suppressedMessages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073"},{"filePath":"1074","messages":"1075","suppressedMessages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077"},{"filePath":"1078","messages":"1079","suppressedMessages":"1080","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1081"},{"filePath":"1082","messages":"1083","suppressedMessages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085"},{"filePath":"1086","messages":"1087","suppressedMessages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1089"},{"filePath":"1090","messages":"1091","suppressedMessages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093"},{"filePath":"1094","messages":"1095","suppressedMessages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097"},{"filePath":"1098","messages":"1099","suppressedMessages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1101"},{"filePath":"1102","messages":"1103","suppressedMessages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1105"},{"filePath":"1106","messages":"1107","suppressedMessages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109"},{"filePath":"1110","messages":"1111","suppressedMessages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1113"},{"filePath":"1114","messages":"1115","suppressedMessages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117"},{"filePath":"1118","messages":"1119","suppressedMessages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121"},{"filePath":"1122","messages":"1123","suppressedMessages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1125"},{"filePath":"1126","messages":"1127","suppressedMessages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129"},{"filePath":"1130","messages":"1131","suppressedMessages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133"},{"filePath":"1134","messages":"1135","suppressedMessages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1137"},{"filePath":"1138","messages":"1139","suppressedMessages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141"},{"filePath":"1142","messages":"1143","suppressedMessages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145"},{"filePath":"1146","messages":"1147","suppressedMessages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149"},{"filePath":"1150","messages":"1151","suppressedMessages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153"},{"filePath":"1154","messages":"1155","suppressedMessages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1157","messages":"1158","suppressedMessages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1160","messages":"1161","suppressedMessages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1163","messages":"1164","suppressedMessages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1166","messages":"1167","suppressedMessages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1169","messages":"1170","suppressedMessages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1172","messages":"1173","suppressedMessages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","suppressedMessages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1178","messages":"1179","suppressedMessages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1181"},{"filePath":"1182","messages":"1183","suppressedMessages":"1184","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1185","messages":"1186","suppressedMessages":"1187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","suppressedMessages":"1190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","suppressedMessages":"1193","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1194"},{"filePath":"1195","messages":"1196","suppressedMessages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1198","messages":"1199","suppressedMessages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1201","messages":"1202","suppressedMessages":"1203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1204","messages":"1205","suppressedMessages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1207","messages":"1208","suppressedMessages":"1209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1210","messages":"1211","suppressedMessages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1213","messages":"1214","suppressedMessages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1216","messages":"1217","suppressedMessages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1219","messages":"1220","suppressedMessages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222"},{"filePath":"1223","messages":"1224","suppressedMessages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1226","messages":"1227","suppressedMessages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1229","messages":"1230","suppressedMessages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","suppressedMessages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1235","messages":"1236","suppressedMessages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1238","messages":"1239","suppressedMessages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1241","messages":"1242","suppressedMessages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1244","messages":"1245","suppressedMessages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1247","messages":"1248","suppressedMessages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1250","messages":"1251","suppressedMessages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1253","messages":"1254","suppressedMessages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1256","messages":"1257","suppressedMessages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1259","messages":"1260","suppressedMessages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1262","messages":"1263","suppressedMessages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1265","messages":"1266","suppressedMessages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1268","messages":"1269","suppressedMessages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1271","messages":"1272","suppressedMessages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1274","messages":"1275","suppressedMessages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1277","messages":"1278","suppressedMessages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1280","messages":"1281","suppressedMessages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1283","messages":"1284","suppressedMessages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1286","messages":"1287","suppressedMessages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1289","messages":"1290","suppressedMessages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1292","messages":"1293","suppressedMessages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1295","messages":"1296","suppressedMessages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1298","messages":"1299","suppressedMessages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1301","messages":"1302","suppressedMessages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1304","messages":"1305","suppressedMessages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1307","messages":"1308","suppressedMessages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1310","messages":"1311","suppressedMessages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1313","messages":"1314","suppressedMessages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1316","messages":"1317","suppressedMessages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1319","messages":"1320","suppressedMessages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1322","messages":"1323","suppressedMessages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","suppressedMessages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1328","messages":"1329","suppressedMessages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1331","messages":"1332","suppressedMessages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334"},{"filePath":"1335","messages":"1336","suppressedMessages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1338","messages":"1339","suppressedMessages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1341"},{"filePath":"1342","messages":"1343","suppressedMessages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1345","messages":"1346","suppressedMessages":"1347","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1348"},{"filePath":"1349","messages":"1350","suppressedMessages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1352","messages":"1353","suppressedMessages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1355","messages":"1356","suppressedMessages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358"},{"filePath":"1359","messages":"1360","suppressedMessages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1362","messages":"1363","suppressedMessages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1365"},{"filePath":"1366","messages":"1367","suppressedMessages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1369","messages":"1370","suppressedMessages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1372"},{"filePath":"1373","messages":"1374","suppressedMessages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376"},{"filePath":"1377","messages":"1378","suppressedMessages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1380","messages":"1381","suppressedMessages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1383","messages":"1384","suppressedMessages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1386"},{"filePath":"1387","messages":"1388","suppressedMessages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1390"},{"filePath":"1391","messages":"1392","suppressedMessages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1394","messages":"1395","suppressedMessages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1397","messages":"1398","suppressedMessages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400"},{"filePath":"1401","messages":"1402","suppressedMessages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1404","messages":"1405","suppressedMessages":"1406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1407","messages":"1408","suppressedMessages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1410"},{"filePath":"1411","messages":"1412","suppressedMessages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1414"},{"filePath":"1415","messages":"1416","suppressedMessages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1418","messages":"1419","suppressedMessages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421"},{"filePath":"1422","messages":"1423","suppressedMessages":"1424","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1425","messages":"1426","suppressedMessages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1428"},{"filePath":"1429","messages":"1430","suppressedMessages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1432","messages":"1433","suppressedMessages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1435"},{"filePath":"1436","messages":"1437","suppressedMessages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1439","messages":"1440","suppressedMessages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1442","messages":"1443","suppressedMessages":"1444","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1445","messages":"1446","suppressedMessages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448"},{"filePath":"1449","messages":"1450","suppressedMessages":"1451","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1452"},{"filePath":"1453","messages":"1454","suppressedMessages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1456"},{"filePath":"1457","messages":"1458","suppressedMessages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1460","messages":"1461","suppressedMessages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1463","messages":"1464","suppressedMessages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1466"},{"filePath":"1467","messages":"1468","suppressedMessages":"1469","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1470","messages":"1471","suppressedMessages":"1472","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1473"},{"filePath":"1474","messages":"1475","suppressedMessages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477"},{"filePath":"1478","messages":"1479","suppressedMessages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1481"},{"filePath":"1482","messages":"1483","suppressedMessages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1485","messages":"1486","suppressedMessages":"1487","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1488","messages":"1489","suppressedMessages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1491"},{"filePath":"1492","messages":"1493","suppressedMessages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1495","messages":"1496","suppressedMessages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498"},{"filePath":"1499","messages":"1500","suppressedMessages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1502","messages":"1503","suppressedMessages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1505"},{"filePath":"1506","messages":"1507","suppressedMessages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1509","messages":"1510","suppressedMessages":"1511","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512"},{"filePath":"1513","messages":"1514","suppressedMessages":"1515","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516"},{"filePath":"1517","messages":"1518","suppressedMessages":"1519","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1520","messages":"1521","suppressedMessages":"1522","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1523","messages":"1524","suppressedMessages":"1525","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1526","messages":"1527","suppressedMessages":"1528","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1529"},{"filePath":"1530","messages":"1531","suppressedMessages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533"},{"filePath":"1534","messages":"1535","suppressedMessages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1537","messages":"1538","suppressedMessages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1540"},{"filePath":"1541","messages":"1542","suppressedMessages":"1543","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1544"},{"filePath":"1545","messages":"1546","suppressedMessages":"1547","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1548","messages":"1549","suppressedMessages":"1550","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1551"},{"filePath":"1552","messages":"1553","suppressedMessages":"1554","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1555","messages":"1556","suppressedMessages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1558","messages":"1559","suppressedMessages":"1560","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561"},{"filePath":"1562","messages":"1563","suppressedMessages":"1564","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1565","messages":"1566","suppressedMessages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568"},{"filePath":"1569","messages":"1570","suppressedMessages":"1571","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1572","messages":"1573","suppressedMessages":"1574","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1575","messages":"1576","suppressedMessages":"1577","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1578"},{"filePath":"1579","messages":"1580","suppressedMessages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1582"},"E:\\reactProject\\diagnosticnew\\src\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\reportWebVitals.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\App.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\layout.js",["1583","1584","1585","1586","1587","1588","1589","1590","1591","1592"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Auth\\Login.js",["1593","1594","1595","1596","1597","1598"],[],"import React, { useEffect, useState } from 'react';\r\nimport bg from '../../assets/image/bg-5.jpg';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { checkAuthCred, checkAuthOTP } from '../../_redux/actions/auth.action';\r\nimport GlobalAlert from '../../components/GlobalAlert';\r\n\r\nconst Login = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst forceUpdate = useForceUpdate();\r\n\tconst [validator , setValidator] = useState(new SimpleReactValidator())\r\n\tconst [userDetails , setUserDetails] = useState({\r\n\t\tuser_name:'',\r\n\t\tpassword:''\r\n\t});\r\n\r\n\tconst [messageAlert , setMessageAlert] = useState({\r\n\t\tshow:false,\r\n\t\tmessage:\"\",\r\n\t\ttype:\"\"\r\n\t});\r\n\r\n\tconst [isLoading , setIsLoading] = useState(false);\r\n\r\n\tconst checkAuthCredResponse = useSelector((state) => state.auth);\r\n\tconst checkAuthOtpResponse = useSelector((state) => state.auth.getOtpResponse);\r\n\r\n\tconst [otp , setOtp] = useState('');\r\n\r\n\tconst handleOtp = (event) => {\t\r\n\t\tsetOtp(event.target.value);\r\n\t}\r\n\r\n\tconst [showOtp , setShowOtp] = useState(false);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetUserDetails({...userDetails, \r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tconst checkLogin = () => {\r\n\t\tif(validator.fieldValid('Username') && validator.fieldValid('Password')){\r\n\t\t\tdispatch(checkAuthCred(userDetails))\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvalidator.showMessages();\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkOTP = () => {\r\n\t\tif(validator.fieldValid('OTP')){\r\n\t\t\tvar login = `grant_type=password&username=${userDetails.user_name}&password=${otp}`;\r\n\t\t\tdispatch(checkAuthOTP(login));\r\n\t\t\tsetIsLoading(true);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvalidator.showMessages();\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(checkAuthCredResponse){\r\n\t\t\tsetIsLoading(checkAuthCredResponse.loadingStatus);\r\n\t\t\tsetMessageAlert({...messageAlert,\r\n\t\t\t\tshow:checkAuthCredResponse.responseMessage !== \"\",\r\n\t\t    \tmessage:checkAuthCredResponse.responseMessage,\r\n\t\t\t\ttype:checkAuthCredResponse.isValidCred ? \"success\" : \"danger\"\r\n\t\t\t});\r\n\t\t\tsetShowOtp(checkAuthCredResponse.isValidCred);\r\n\t\t}\r\n\t},[checkAuthCredResponse]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!(Object.keys(checkAuthOtpResponse).length === 0 && checkAuthOtpResponse.constructor === Object)){\r\n\t\t\tif(checkAuthOtpResponse.valid){\r\n\t\t\t\tlocalStorage.setItem(\"token\",checkAuthOtpResponse.access_token);\r\n\t\t\t\tlocalStorage.setItem(\"login\",checkAuthOtpResponse.valid);\r\n\t\t\t\tlocalStorage.setItem(\"userName\",checkAuthOtpResponse.userName);\r\n\t\t\t\tlocalStorage.setItem(\"userId\",checkAuthOtpResponse.userId);\r\n\t\t\t\tlocalStorage.setItem(\"code\",checkAuthOtpResponse.code);\r\n\t\t\t\tlocalStorage.setItem(\"encrypt_userId\",checkAuthOtpResponse.encrypt_userId);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetMessageAlert({...messageAlert,\r\n\t\t\t\t\tshow:!checkAuthOtpResponse.valid,\r\n\t\t\t\t\tmessage:checkAuthOtpResponse.message,\r\n\t\t\t\t\ttype:checkAuthOtpResponse.valid ? \"success\" : \"danger\"\r\n\t\t\t\t});\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t},[checkAuthOtpResponse])\r\n\r\n    return(\r\n        <div className=\"d-flex flex-column flex-root h-100\">\r\n\t\t \r\n\t\t\t<div className=\"login login-2 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\r\n\t\t\t\t \r\n\t\t\t\t<div className=\"login-aside order-2 order-lg-1 d-flex flex-column-fluid flex-lg-row-auto bgi-size-cover bgi-no-repeat p-7 p-lg-10\">\r\n\t\t\t\t\t \r\n\t\t\t\t\t<div className=\"d-flex flex-row-fluid flex-column justify-content-between\">\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<div className=\"d-flex flex-column-fluid flex-column flex-center mt-5 mt-lg-0\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"mb-15 text-center\">\r\n\t\t\t\t\t\t\t\t<img src=\"assets/media/logos/logo-letter-1.png\" className=\"max-h-75px\" alt=\"\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t<div className=\"login-form login-signin\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"font-weight-bold\">Sign In</h2>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-bold\">{showOtp ? \"OTP sent on email and whatsapp\" : \"Enter your username and password\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t \t<GlobalAlert show={messageAlert.show} type={messageAlert.type} message={messageAlert.message} />\r\n\t\t\t\t\t\t\t\t<form className=\"form\" noValidate=\"novalidate\" onSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tif(showOtp){\r\n\t\t\t\t\t\t\t\t\t\tcheckOTP();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\tcheckLogin();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{!showOtp ? <React.Fragment> <div className=\"form-group py-3 m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Email\" placeholder=\"Username\" name=\"user_name\" onChange={handleChange} autoComplete=\"off\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('Username', userDetails.user_name , 'required')}</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group py-3 border-top m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Password\" onChange={handleChange} placeholder=\"Password\" name=\"password\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('Password', userDetails.password , 'required')}</FormHelperText>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex flex-wrap justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"checkbox-inline\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"checkbox checkbox-outline m-0 text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<span></span>Remember me</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" id=\"kt_login_forgot\" className=\"text-muted text-hover-primary\">Forgot Password ?</a>\r\n\t\t\t\t\t\t\t\t\t</div> </React.Fragment> : <div className=\"form-group py-3 border-top m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Password\" onChange={handleOtp} placeholder=\"OTP\"  name=\"otp\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('OTP', otp , 'required|min:4|max:4')}</FormHelperText>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex flex-wrap justify-content-between align-items-center mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t<button id=\"kt_login_signin_submit\" className=\"btn btn-primary font-weight-bold w-100 px-9 py-4 my-3\" disabled={isLoading}>{isLoading ? <i class=\"fas fa-spinner fa-spin\"></i> : showOtp ? \"Submit\" : \"Sign In\"}</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<div className=\"d-flex flex-column-auto justify-content-between mt-15\">\r\n\t\t\t\t\t\t\t<div className=\"text-dark-50 font-weight-bold order-2 order-sm-1 my-2\">Developed and maintained by Rohin Infotech</div>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t \r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t\t<div className=\"order-1 order-lg-2 flex-column-auto flex-lg-row-fluid d-flex flex-column p-7\" style={{backgroundImage:`url(${bg})`}}>\r\n\t\t\t\t\t \r\n\t\t\t\t\t<div className=\"d-flex flex-column-fluid flex-lg-center\">\r\n\t\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\">\r\n\t\t\t\t\t\t\t<h1 className=\"display-2 font-weight-bold my-7 text-white\">ΔIAΓNO∑TIX</h1>\r\n\t\t\t\t\t\t\t{/* <p className=\"font-weight-bold font-size-lg text-white opacity-80\">The ultimate Bootstrap, Angular 8, React &amp; VueJS admin theme\r\n\t\t\t\t\t\t\t<br />framework for next generation web apps.</p> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t \r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t</div>\r\n\t\t\t \r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport  default Login;","E:\\reactProject\\diagnosticnew\\src\\pages\\index.js",["1599","1600","1601"],[],"import React, { useEffect } from 'react';\r\nimport MainLayout from '../layouts/layout';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkAuthOTP, getDecryptUserId } from '../_redux/actions/auth.action';\r\n\r\n\r\n\r\n\r\nconst SwitchApp = (props) => {\r\nconst isAuthorisedByUrl = new URLSearchParams(props.location.search).get(\"token\");\r\nconst dispatch = useDispatch();\r\nconst getDecryptUserDetailsResponse = useSelector((state) => state.auth.decryptUserDetails);\r\nconst checkAuthOtpResponse = useSelector((state) => state.auth.getOtpResponse);\r\n\r\nuseEffect(() => {\r\n    if(isAuthorisedByUrl){\r\n        const param = {\r\n            encrypt_user_id:isAuthorisedByUrl\r\n        }\r\n        dispatch(getDecryptUserId(param));\r\n    }\r\n    else{\r\n        window.location = \"/\";\r\n    }\r\n},[isAuthorisedByUrl]);\r\n\r\n\r\nuseEffect(() => {\r\n    if(getDecryptUserDetailsResponse){\r\n        console.log(getDecryptUserDetailsResponse);\r\n        var login = `grant_type=password&username=${getDecryptUserDetailsResponse.user_name}&password=${getDecryptUserDetailsResponse.password}`;\r\n        dispatch(checkAuthOTP(login));\r\n    }\r\n},[getDecryptUserDetailsResponse]);\r\n\r\nuseEffect(() => {\r\n    if(!(Object.keys(checkAuthOtpResponse).length === 0 && checkAuthOtpResponse.constructor === Object)){\r\n        if(checkAuthOtpResponse.valid){\r\n            localStorage.setItem(\"token\",checkAuthOtpResponse.access_token);\r\n            localStorage.setItem(\"login\",checkAuthOtpResponse.valid);\r\n            localStorage.setItem(\"userName\",checkAuthOtpResponse.userName);\r\n            localStorage.setItem(\"userId\",checkAuthOtpResponse.userId);\r\n            localStorage.setItem(\"code\",checkAuthOtpResponse.code);\r\n            localStorage.setItem(\"encrypt_userId\",checkAuthOtpResponse.encrypt_userId);\r\n            window.location = \"/\";\r\n        }\r\n    }\r\n},[checkAuthOtpResponse])\r\n\r\n\r\n    return  <div className=\"switch_loader\">\r\n            <div>\r\n                <CircularProgress />\r\n                <h4>Please wait....</h4>\r\n            </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default SwitchApp;","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\common.saga.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\auth.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\common.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\auth.saga.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\materialcode.saga.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\configuration.saga.js",["1602","1603"],[],"import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {  deleteSelectedPincode, deleteSelectedPincodeSuccess, getAccountGroupBrowse, getAccountGroupBrowseSuccess, getCategoryList, getCategoryListSuccess, getPincodeBrowseList, getPincodeBrowseListSuccess, updateAccountGroupInfo, updateAccountGroupInfoSuccess, updatePincodeInfo } from \"../../actions/masters/configuration.action\";\r\n\r\nimport { ConfigurationMasterController } from \"../../controller/Masters/configuration.controller\";\r\n\r\nfunction* getAccountGroupBrowseSaga (action) {\r\n    try {   \r\n        const accountGroupList = yield ConfigurationMasterController.searchAccountGroupBrowse(action.payload.params);\r\n        yield put(getAccountGroupBrowseSuccess(accountGroupList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getAccountGroupBrowseSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateAccountGroupInfoSaga (action) {\r\n    try {   \r\n        const updateAccountInfo = yield ConfigurationMasterController.updateAccountGroupInfo(action.payload.params);\r\n        yield put(updateAccountGroupInfoSuccess(updateAccountInfo));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(updateAccountGroupInfoSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getPincodeBrowseSaga (action) {\r\n    try {   \r\n        const pincodeList = yield ConfigurationMasterController.searchPincodeBrowse(action.payload.params);\r\n        yield put(getPincodeBrowseListSuccess(pincodeList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getPincodeBrowseListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updatePincodeInfoSaga (action) {\r\n    try {   \r\n        const updateAccountInfo = yield ConfigurationMasterController.updatePincodeInfo(action.payload.params);\r\n        yield put(updateAccountGroupInfoSuccess(updateAccountInfo));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(updateAccountGroupInfoSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* deletePincodeInfoSaga (action) {\r\n    try {   \r\n        const response = yield ConfigurationMasterController.deleteSelectedPincode(action.payload.params);\r\n        yield put(deleteSelectedPincodeSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(deleteSelectedPincodeSuccess(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function* ConfigurationMasterSaga () {\r\n    try {\r\n        yield takeLatest(getAccountGroupBrowse, getAccountGroupBrowseSaga);\r\n        yield takeLatest(updateAccountGroupInfo, updateAccountGroupInfoSaga);   \r\n        yield takeLatest(getPincodeBrowseList, getPincodeBrowseSaga);   \r\n        yield takeLatest(updatePincodeInfo, updatePincodeInfoSaga);   \r\n        yield takeLatest(deleteSelectedPincode, deletePincodeInfoSaga);   \r\n\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\product.saga.js",["1604","1605","1606","1607","1608"],[],"import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { dropdownTechInformation, dropdownTechInformationSuccess, getCategoryList, getCategoryListSuccess, getGGNameList, getGGNameListSuccess, getLPRefList, getLPRefListSuccess, getProductListBrowse, getProductListBrowseSuccess, updateProductListPrice, updateProductLPRef, updateProductMovingNonMoving, updateProductVerifiedStatus } from \"../../actions/masters/product.action\";\r\nimport { ProductMasterController } from \"../../controller/Masters/product.controller\";\r\n\r\nfunction* getProductBrowseSaga (action) {\r\n    try {   \r\n        const listValue = yield ProductMasterController.getProductBrowse(action.payload.params, action.payload.filters);\r\n        yield put(getProductListBrowseSuccess(listValue));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getProductListBrowseSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getCategoryListSaga (action) {\r\n    try {    \r\n        const response = yield ProductMasterController.getCategoryList();\r\n        yield put(getCategoryListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getCategoryListSuccess(error));\r\n    }\r\n}\r\nfunction* dropdownTechSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.dropdownTechInformation();\r\n        yield put(dropdownTechInformationSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(dropdownTechInformationSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getGGNameListSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.getGGNameList();\r\n        yield put(getGGNameListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getGGNameListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductVerifiedStatusSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductVerifyStatus(action.payload.param);\r\n        yield put(getGGNameListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getGGNameListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductListPriceSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductListPrice(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* updateProductLPRefSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductLpRef(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductMovingSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductMovingNonMoving(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nexport default function* ProductMasterSaga () {\r\n    try {\r\n        yield takeLatest(getProductListBrowse, getProductBrowseSaga);\r\n        yield takeLatest(getCategoryList, getCategoryListSaga);   \r\n        yield takeLatest(dropdownTechInformation, dropdownTechSaga);   \r\n        yield takeLatest(getGGNameList, getGGNameListSaga);   \r\n        yield takeLatest(updateProductVerifiedStatus, updateProductVerifiedStatusSaga);   \r\n        yield takeLatest(updateProductListPrice, updateProductListPriceSaga);   \r\n        yield takeLatest(updateProductLPRef, updateProductLPRefSaga);   \r\n        yield takeLatest(updateProductMovingNonMoving, updateProductMovingSaga);   \r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","E:\\reactProject\\diagnosticnew\\src\\_redux\\middleware\\Masters\\account.saga.js",["1609"],[],"import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { AccountMasterController } from \"../../controller/Masters/account.controller\";\r\nimport { getAccountMasterFiltersList, getAccountMasterFiltersListSuccess, previewSelectedAccount, previewSelectedAccountSuccess, searchAccountMasterData, searchAccountMasterDataSuccess, setAccountHide, setAccountVerified } from '../../actions/masters/account.action';\r\nfunction* searchAccountMasterSaga (action) {\r\n    try {   \r\n        const browseAccountMaster = yield AccountMasterController.browseAccountData(action.payload.filters, action.payload.params);\r\n        yield put(searchAccountMasterDataSuccess(browseAccountMaster));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(searchAccountMasterDataSuccess(error));\r\n    }\r\n}\r\nfunction* getAccountFilterSaga (action) {\r\n    try {   \r\n        const filterList = yield AccountMasterController.getAccountMasterFilters();\r\n        yield put(getAccountMasterFiltersListSuccess(filterList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getAccountMasterFiltersListSuccess(error));\r\n    }\r\n}\r\nfunction* previewSelectedAccountSaga (action) {\r\n    try {   \r\n        const accountDetails = yield AccountMasterController.getSelectedAccountDetails(action.payload);\r\n        yield put(previewSelectedAccountSuccess(accountDetails));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nfunction* setAccountHideSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.accountHideUpdate(action.payload);\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nfunction* setAccountVerifiedSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.updateAccountVerified(action.payload);\r\n        if(!accountEdit.valid){\r\n            alert(\"something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nexport default function* AccountMasterSaga () {\r\n    try {\r\n        yield takeLatest(searchAccountMasterData, searchAccountMasterSaga);\r\n        yield takeLatest(getAccountMasterFiltersList, getAccountFilterSaga);\r\n        yield takeLatest(previewSelectedAccount, previewSelectedAccountSaga);\r\n        yield takeLatest(setAccountHide, setAccountHideSaga);\r\n        yield takeLatest(setAccountVerified, setAccountVerifiedSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\configuration.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\account.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\product.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\materialcode.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\reducers\\Masters\\all.reducer.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\routes.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\RouteWithSubRoutes.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\breadcrumbs.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\header.js",["1610","1611","1612","1613","1614","1615","1616","1617"],[],"E:\\reactProject\\diagnosticnew\\src\\components\\sidebar.js",["1618","1619"],[],"import React from \"react\";\r\n\r\nconst Sidebar = ({ onToggle, show, menuList }) => {\r\n  return (\r\n    <div className={`main-sidebar ${show ? \"sidebar--show\" : \"\"}`}>\r\n      <div className=\"top-main  d-flex align-items-center\">\r\n        <div className=\"logo-header mr-5\">\r\n          {/* <img src={logo} className=\"img-fluid\" /> */}\r\n          <h4 className=\"mb-0 text-white\" style={{ fontSize: 24 }}>\r\n            DIAGNOSTIC\r\n          </h4>\r\n          <p className=\"logo-text mb-0 text-white\">\r\n            <small>Diagnostic Automation</small>\r\n            <span className=\"ml-2\">13.5</span>\r\n          </p>\r\n        </div>\r\n        <img\r\n          src={\"/asset/icons/chevrons-left.svg\"}\r\n          onClick={() => onToggle()}\r\n          className=\"svg-menu mr-3\"\r\n        />\r\n        <img\r\n          src={\"/asset/icons/pin.svg\"}\r\n          className=\"svg-menu\"\r\n          onClick={() => onToggle()}\r\n        />\r\n      </div>\r\n      <div className=\"sidebar-menulist mt-10\">\r\n        {console.log(menuList)}\r\n        <ul className=\"list-unstyled\">\r\n          {menuList &&\r\n            menuList.map((menu, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  {\" \"}\r\n                  {menu.menu_name}{\" \"}\r\n                  <i className=\"fas fa-chevron-right float-right\"></i>\r\n                </li>\r\n              );\r\n            })}\r\n          <li></li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\common.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\auth.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\GlobalAlert.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\common.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\auth.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\product.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\configuration.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\materialcode.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\account.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\configuration.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\product.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\materialcode.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\controller\\Masters\\account.controller.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\_redux\\actions\\masters\\all.action.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Logistics.js",["1620","1621"],[],"import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport DCIndex from \"../pages/DC\";\r\nimport CcrInIndex from \"../pages/logistics/ccr\";\r\nimport CcrIndex from \"../pages/logistics/ccr\";\r\nimport CcrOutIndex from \"../pages/logistics/ccr/ccrOut\";\r\nimport CourierInIndex from \"../pages/logistics/courier\";\r\nimport CourierIndex from \"../pages/logistics/courier\";\r\nimport CourierOutIndex from \"../pages/logistics/courier/courierOut\";\r\nimport CourierInvoiceIndex from \"../pages/logistics/courier/invoice\";\r\n// import DeliveryChallanIndex from \"../pages/logistics/delivery-challan\";\r\n// import DeliveryChallanBrowse from \"../pages/logistics/delivery-challan/browse\";\r\nimport ChallanIndexMdc from \"../pages/logistics/delivery-challan/mdc\";\r\nimport SlWipIndex from \"../pages/logistics/delivery-challan/slwip/index\";\r\nimport ChallanIndex from \"../pages/logistics/delivery-challan/index\";\r\nimport JobWorkIndex from \"../pages/logistics/job-work\";\r\nimport JobWorkOutIndex from \"../pages/logistics/job-work/jobWorkOut\";\r\nimport MrnDcIndex from \"../pages/logistics/material-receipt-note\";\r\nimport MrnPoIndex from \"../pages/logistics/material-receipt-note/mrn-po\";\r\nimport ReturnableIndex from \"../pages/logistics/returnable-gate-pass\";\r\nimport RrgpIndex from \"../pages/logistics/returnable-gate-pass/rrgp\";\r\nconst Logistics = () => {\r\n  const selectedSubMenu = window.location.pathname.split(\"/\")[2];\r\n  const menuLength=window.location.pathname.split('/').length;\r\n  // console.log(window.location.pathname.split('/').length)\r\n  // console.log(window.location.pathname.split('/'))\r\n  \r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Switch>\r\n        <Route path=\"/logistics/out/sl-dc\" exact ><ChallanIndex slType={\"SL\"}/></Route>\r\n        <Route path=\"/logistics/out/non-sl-dc\" exact><ChallanIndex slType={\"Non SL\"}/></Route>\r\n        <Route path=\"/logistics/out/mdc\" exact component={ChallanIndexMdc} />\r\n        <Route path=\"/logistics/out/sl-wip\"exact><SlWipIndex slType={\"SL\"}/></Route>\r\n        <Route path=\"/logistics/out/non-sl-wip\" exact><SlWipIndex slType={\"Non SL\"}/></Route>\r\n        <Route path=\"/logistics/out/dc-packaging\" exact component={DCIndex} />\r\n        <Route path=\"/logistics/in/mrn-dc\" exact component={MrnDcIndex} />\r\n        <Route path=\"/logistics/in/mrn-po\" exact component={MrnPoIndex} />\r\n        <Route path=\"/logistics/in/mrn-wip\" exact component={MrnDcIndex} />\r\n        <Route path=\"/logistics/rgp/rgp\" exact component={ReturnableIndex} />\r\n        <Route path=\"/logistics/rgp/rrgp\" exact component={RrgpIndex} />\r\n        <Route path=\"/logistics/jw/jwin\" exact component={JobWorkIndex} />\r\n        <Route path=\"/logistics/jw/jwo\" exact component={JobWorkOutIndex} />\r\n        <Route path=\"/logistics/ccr/ccr-in\" exact component={CcrInIndex} />\r\n        <Route path=\"/logistics/ccr/ccr-out\" exact component={CcrOutIndex} />\r\n        <Route path=\"/logistics/courier/in\" exact component={CourierInIndex} />\r\n        <Route path=\"/logistics/courier/out\" exact component={CourierOutIndex} />\r\n        <Route path=\"/logistics/courier/invoice\" exact component={CourierInvoiceIndex} />\r\n        {/* <Route\r\n          path=\"/logistics/delivery-challan\"\r\n          exact\r\n          component={DeliveryChallanIndex}\r\n        /> */}\r\n        {(menuLength<=2||selectedSubMenu===\"in\")&&<Redirect to=\"/logistics/in/mrn-dc\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"out\"&&<Redirect to=\"/logistics/out/sl-dc\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"rgp\"&&<Redirect to=\"/logistics/rgp/rgp\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"jw\"&&<Redirect to=\"/logistics/jw/jwin\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"ccr\"&&<Redirect to=\"/logistics/ccr/ccr-in\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"courier\"&&<Redirect to=\"/logistics/courier/in\" from=\"/logistics\" />}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default Logistics;\r\n","E:\\reactProject\\diagnosticnew\\src\\layouts\\Profile.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Masters.js",["1622","1623","1624","1625","1626"],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Stock.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Sales.js",["1627"],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Support.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\layouts\\Dashboard.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\appbar.js",["1628","1629","1630","1631","1632","1633"],[],"import {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport user from \"../assets/image/user.jpg\";\r\nimport moment from \"moment\";\r\nimport AirplayIcon from \"@material-ui/icons/Airplay\";\r\nimport SwipeableTemporaryDrawer from \"./leftModal\";\r\nimport { CommonController } from \"../_redux/controller/common.controller\";\r\nimport { id } from \"date-fns/locale\";\r\nimport { nodeUrl } from \"../config\";\r\nconst auth = localStorage.getItem(\"login\");\r\nconst userName = localStorage.getItem(\"userName\");\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress\r\n        disableShrink\r\n        size={35}\r\n        variant=\"determinate\"\r\n        {...props}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.time)}`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nconst MainBar = ({ onMenuClick }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [profilePrev, setprofilePrev] = useState({ right: false });\r\n  const [profileList, setprofileList] = useState(\"\");\r\n  const open = Boolean(anchorEl);\r\n  const [time, setTime] = useState({\r\n    hrs: moment().format(\"h\"),\r\n    minutes: moment().format(\"mm\"),\r\n    seconds: moment().format(\"ss\"),\r\n    hrsValue: Math.ceil((parseInt(moment().format(\"h\")) * 8 + 1) / 10) * 10,\r\n    minValue: Math.ceil((parseInt(moment().format(\"mm\")) * 2 + 1) / 10) * 10,\r\n    secValue: Math.ceil((parseInt(moment().format(\"ss\")) * 1.6 + 1) / 10) * 10,\r\n  });\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const profilePrevlist = async () => {\r\n    await CommonController.commonApiCallFilter(\r\n      \"user/profile_prev\",\r\n      { user_id: localStorage.getItem(\"userId\") },\r\n      \"post\",\r\n      \"node\"\r\n    )\r\n      .then((result) => {\r\n        if (result.status === 200) {\r\n          setprofileList(result.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleClose = () => {\r\n    setprofilePrev({ ...profilePrev, right: true });\r\n    setAnchorEl(null);\r\n  };\r\n  const calculateTime = () => {\r\n    setInterval(() => {\r\n      setTime({\r\n        ...time,\r\n        hrsValue: Math.ceil((parseInt(moment().format(\"h\")) * 8 + 1) / 10) * 10,\r\n        hrs: moment().format(\"h\"),\r\n        secValue:\r\n          Math.ceil((parseInt(moment().format(\"ss\")) * 1.6 + 1) / 10) * 10,\r\n        seconds: moment().format(\"ss\"),\r\n        minValue:\r\n          Math.ceil((parseInt(moment().format(\"mm\")) * 2 + 1) / 10) * 10,\r\n        minutes: moment().format(\"mm\"),\r\n      });\r\n    }, 1000);\r\n  };\r\n  const handleSwitch = () => {\r\n    window.location = `http://erp.diag.in/SwitchLogin.aspx?${localStorage.getItem(\r\n      \"encrypt_userId\"\r\n    )}`;\r\n  };\r\n  useEffect(() => {\r\n    calculateTime();\r\n    profilePrevlist();\r\n  }, []);\r\n  return (\r\n    <AppBar position=\"static\" className=\"theme_bg\" elevation={0}>\r\n      <Toolbar variant=\"dense\" disableGutters>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2 d-flex align-items-center\">\r\n              <div className=\"logo-header\">\r\n                {/* <img src={logo} className=\"img-fluid\" /> */}\r\n                <h4 className=\"mb-0\">DIAGNOSTIC</h4>\r\n                <p className=\"logo-text  mb-0\">\r\n                  <small>Diagnostic Automation</small>\r\n                  <span className=\"ml-2\">13.5</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-10 text-right\">\r\n              <div className=\"row justify-content-end\">\r\n                <div className=\"col-md-1 text-center py-1 pr-0\">\r\n                  <div className=\"clock_container\">\r\n                    <p className=\"mb-0\">Week </p>\r\n                    <h2 className=\"mb-0 mt-2 mx-auto\">{moment().isoWeek()}</h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 py-1\">\r\n                  <div className=\"clock_container\">\r\n                    <p className=\"mb-2 text-center\">\r\n                      {moment().format(\"dddd DD MMM YYYY\")}\r\n                    </p>\r\n                    <div className=\"clock_circle d-flex justify-content-around\">\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          className=\"hrs\"\r\n                          value={time.hrsValue}\r\n                          time={time.hrs}\r\n                        />\r\n                      </div>\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          color=\"secondary\"\r\n                          value={time.minValue}\r\n                          time={time.minutes}\r\n                        />\r\n                      </div>\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          className=\"seconds\"\r\n                          value={time.secValue}\r\n                          time={time.seconds}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 text-right d-flex align-items-center py-1\">\r\n                  <div className=\"clock_container ml-auto\">\r\n                    <p className=\"mb-0\">Switch</p>\r\n                    <Button\r\n                      variant=\"default\"\r\n                      className=\"bg-white switch_btn mx-3 mt-2\"\r\n                      // variant=\"contained\"\r\n                      onClick={handleSwitch}\r\n                      disableElevation\r\n                    >\r\n                      <AirplayIcon />\r\n                    </Button>\r\n                  </div>\r\n                  {auth && (\r\n                    <div className=\"clock_container ml-3\">\r\n                      <p className=\"mb-0\">{userName}</p>\r\n                      <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        className=\"pt-2 pb-0\"\r\n                        onClick={handleClose}\r\n                        color=\"inherit\"\r\n                      >\r\n                        <div className=\"user_header d-flex align-items-center\">\r\n                          <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={`${nodeUrl + profileList.image_path}`}\r\n                          />\r\n                          {/* <span className=\"ml-3\">{userName}</span> */}\r\n                        </div>\r\n                      </IconButton>\r\n                      {/* <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        open={open}\r\n                        onClick={handleClose}\r\n                      >\r\n                        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleLogOut}>Logout</MenuItem>\r\n                      </Menu> */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Toolbar>\r\n      <SwipeableTemporaryDrawer\r\n        leftTrue={profilePrev}\r\n        profileList={profileList}\r\n        updateImage={useCallback(() => profilePrevlist(), [profileList])}\r\n      />\r\n    </AppBar>\r\n  );\r\n};\r\nexport default MainBar;\r\n","E:\\reactProject\\diagnosticnew\\src\\components\\third_menu.js",["1634","1635","1636"],[],"E:\\reactProject\\diagnosticnew\\src\\components\\sub_menu.js",["1637"],[],"E:\\reactProject\\diagnosticnew\\src\\components\\main_menu.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\services.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\config.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\leftModal.js",["1638","1639","1640"],[],"import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport KeyIcon from '@mui/icons-material/Key';\r\nimport user from \"../assets/image/user.jpg\";\r\nimport { Avatar, Grid, Input, Stack, TextField } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport moment from \"moment/moment\";\r\nimport { nodeUrl } from \"../config\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { showSuccessToast } from \"./common\";\r\nimport {Typography } from \"@material-ui/core\";\r\nfunction SwipeableTemporaryDrawer({ leftTrue, profileList, updateImage }) {\r\n  const id = localStorage.getItem(\"userId\");\r\n  const [state, setState] = React.useState({\r\n    right: false,\r\n  });\r\nconst [ modalPassword, setmodalPassword] = React.useState(false)\r\n  const [modal, setmodal] = React.useState(false);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log();\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const handleSubmitPassword=()=>{\r\n    console.log(\"cvbnm,\")\r\n  }\r\n  const handelUpdateImage = async (e) => {\r\n    let value = e.target.files[0];\r\n    let formData = new FormData();\r\n    formData.append(\"file_path\", value);\r\n    formData.append(\"user_id\", id);\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${nodeUrl}user/user_image_upload`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    }).then((data) => {\r\n      if (data.status === 200) {\r\n        showSuccessToast(data.message);\r\n        updateImage();\r\n      }\r\n    });\r\n  };\r\n  const handleLogOut = () => {\r\n    localStorage.clear();\r\n    window.location = \"/login\";\r\n  };\r\n  const handleModalClose = () => {\r\n    setmodal(false);\r\n  };\r\n  React.useEffect(() => {\r\n    setState(leftTrue);\r\n    toggleDrawer(\"right\", state.right);\r\n  }, [leftTrue]);\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <h4 className=\"py-5 ml-3\">Profile</h4>\r\n      <Divider />\r\n      {/* <img src={user} class=\"rounded mx-auto d-block py-5\" alt=\"...\"></img> */}\r\n      <div>\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          className=\"mx-auto d-block m-3\"\r\n          src={`${nodeUrl + profileList.image_path}`}\r\n          sx={{ width: 120, height: 120 }}\r\n        />\r\n        <div className=\"custom_edit\">\r\n          <label htmlFor=\"file-upload\" style={{ cursor: \"pointer\" }}>\r\n            <CameraAltIcon for=\"file-upload\" fontSize=\"large\" />\r\n          </label>\r\n          <Input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            sx={{ display: \"none\" }}\r\n            onChange={handelUpdateImage}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* {profileList.map(value=>{})} */}\r\n      {/* <Typography>xcvbnm</Typography> */}\r\n      <list\r\n        sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n        component=\"nav\"\r\n        // onClose={toggleDrawer(\"right\", false)}\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        {/* <ListItemButton onClick={() =>{ setmodal(true);toggleDrawer(\"right\", false)}}> */}\r\n        <ListItemButton\r\n          onClick={() => {\r\n            setmodal(true);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <PersonIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Profile\"\r\n            onClick={toggleDrawer(\"right\", false)}\r\n          />\r\n        </ListItemButton>\r\n        <ListItemButton onClick={()=>setmodalPassword(true)}>\r\n          <ListItemIcon>\r\n            <LockResetIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Reset Password\"\r\n          onClick={toggleDrawer(\"right\", false)}\r\n          />\r\n        </ListItemButton>\r\n        <ListItemButton>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Setting\" />\r\n        </ListItemButton>\r\n        <ListItemButton onClick={handleLogOut}>\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"LogOut\" />\r\n        </ListItemButton>\r\n      </list>\r\n    </Box>\r\n  );\r\n  return (\r\n    <div>\r\n      <SwipeableDrawer\r\n        anchor={\"right\"}\r\n        open={state.right}\r\n        onClose={toggleDrawer(\"right\", false)}\r\n        onOpen={toggleDrawer(\"right\", true)}\r\n      >\r\n        {list(\"right\")}\r\n      </SwipeableDrawer>\r\n      <Modal\r\n        show={modal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        {/* <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header> */}\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          className=\"mx-auto d-block m-3\"\r\n          src={`${nodeUrl + profileList.image_path}`}\r\n          sx={{ width: 150, height: 150 }}\r\n        />\r\n        <Modal.Body>\r\n          <Grid\r\n            container\r\n            rowSpacing={2}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n          >\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Name\"\r\n                value={profileList.first_name + \" \" + profileList.last_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mobile No\"\r\n                value={profileList.mobile}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Email\"\r\n                value={profileList.email}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"D.O.B\"\r\n                value={moment(profileList.dob).format(\"DD/MM/YYYY\")}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Gender\"\r\n                value={profileList.gender}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Department Name\"\r\n                value={profileList.department_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Relationship\"\r\n                value={profileList.m_status}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Father Or Husband Name\"\r\n                value={profileList.Father_husband_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mother Name\"\r\n                value={profileList.mother_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button onClick={handleModalClose}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={modalPassword}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body>\r\n          {/* <Stack\r\n            spacing={2}\r\n            direction=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <stack spacing={2}>\r\n              <Button onClick={handleModalClose}>Close</Button>\r\n              <Button onClick={handleModalClose}>Close</Button>\r\n            </stack>\r\n          </Stack> */}\r\n\r\n<Box\r\n          sx={{\r\n            // marginTop: ,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 2, bgcolor: '#3949ac' }}>\r\n            {/* <LockOutlinedIcon /> */}\r\n            <KeyIcon/>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            Reset Password\r\n          </Typography>\r\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              label=\"New Password\"\r\n              name=\"password\"\r\n              // autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Grid container spacing={2}>\r\n              <Grid item >\r\n              <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={handleSubmitPassword}\r\n              >\r\n                Continue\r\n               </Button>\r\n              </Grid>\r\n              <Grid item>\r\n               <Button\r\n              variant=\"text\"\r\n              color=\"error\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={()=>{setmodalPassword(false)}}>\r\n                Cancel\r\n               </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button onClick={handleModalClose}>Close</Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default memo(SwipeableTemporaryDrawer);\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\changePassword.js",["1641","1642","1643"],[],"import { Button, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../components/common\";\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\n\r\nconst ChangePassword = () => {\r\n  const [formData, setFormData] = useState({\r\n    oldpass: \"\",\r\n    newpass: \"\",\r\n    confpass: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    errors: {},\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = { ...formData.errors };\r\n    if (formData.oldpass == \"\") {\r\n      errors.oldpass = \"Please enter old password\";\r\n    } else {\r\n      delete errors.oldpass;\r\n    }\r\n    if (formData.newpass == \"\") {\r\n      errors.newpass = \"Please enter new password\";\r\n    } else {\r\n      delete errors.newpass;\r\n    }\r\n    if (formData.confpass == \"\") {\r\n      errors.confpass = \"Please enter confirm password\";\r\n    } else {\r\n      delete errors.confpass;\r\n    }\r\n    console.log(errors);\r\n    setFormData({ ...formData, errors: errors });\r\n    return Object.keys(errors).length !== 0;\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n      if (!validateForm()) {\r\n        await CommonController.commonApiCallFilter(\r\n          \"Profile/UpdateEmployeePassword\",\r\n          formData,\r\n          \"post\"\r\n        ).then((data) => {\r\n          if (data.valid) {\r\n            showSuccessToast(\"Password changed successfully \");\r\n          } else {\r\n            showErrorToast(data.msg);\r\n          }\r\n        });\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card shadow\">\r\n      <div className=\"card-body\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              value={formData.oldpass}\r\n              name=\"oldpass\"\r\n              type=\"password\"\r\n              label=\"Old Password\"\r\n              onChange={handleChange}\r\n            />\r\n            {formData.errors && (\r\n              <p className=\"mb-0 text-danger\">{formData.errors.oldpass}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              name=\"newpass\"\r\n              type=\"password\"\r\n              value={formData.newpass}\r\n              label=\"New Password\"\r\n              onChange={handleChange}\r\n            />\r\n            {formData.errors && (\r\n              <p className=\"mb-0 text-danger\">{formData.errors.newpass}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-3\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              size=\"small\"\r\n              name=\"confpass\"\r\n              value={formData.confpass}\r\n              label=\"Conf. Password\"\r\n              onChange={handleChange}\r\n            />\r\n            {formData.errors && (\r\n              <p className=\"mb-0 text-danger\">{formData.errors.confpass}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"col-md-12 mt-5\">\r\n            <Button\r\n              disable={loading}\r\n              variant=\"contained\"\r\n              onClick={onSubmit}\r\n              disableElevation\r\n              color=\"primary\"\r\n            >\r\n              {loading ? \"Processing...\" : \"Update Password\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\attendance.js",["1644","1645","1646"],[],"import { DatePicker } from \"@material-ui/pickers\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CustomPagination from \"../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\r\nimport { showErrorToast } from \"../../components/common\";\r\nimport moment from \"moment\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst AttendanceBrowse = () => {\r\n  const [bodyParam, setBodyParam] = useState({\r\n    from_date: new Date().setDate(new Date().getDate() - 1),\r\n    to_date: new Date(),\r\n    emp_id: \"1\",\r\n  });\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [bodyParam]);\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let body = { ...bodyParam };\r\n      body.from_date = moment(bodyParam.from_date).format(\"DD-MM-yyyy\");\r\n      body.to_date = moment(bodyParam.to_date).format(\"DD-MM-yyyy\");\r\n      await CommonController.commonApiCall(\r\n        \"Attandance/EmpAttandanceBrowse\",\r\n        params,\r\n        body,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleDateChange = (name, date) => {\r\n    setBodyParam({ ...bodyParam, [name]: date });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <div className=\"filter_box mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-0\">Filters</h4>\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <DatePicker\r\n                label=\"Date\"\r\n                value={bodyParam.from_date}\r\n                format=\"dd/MM/yyyy\"\r\n                onChange={(date) => handleDateChange(\"from_date\", date)}\r\n                animateYearScrolling\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <DatePicker\r\n                label=\"Date\"\r\n                value={bodyParam.to_date}\r\n                format=\"dd/MM/yyyy\"\r\n                onChange={(date) => handleDateChange(\"to_date\", date)}\r\n                animateYearScrolling\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onKeyUp={handleParams}\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid\r\n            columns={[\r\n              {\r\n                field: \"srno\",\r\n                headerName: \"Sr. no\",\r\n                flex: 0,\r\n                hide: true,\r\n              },\r\n              {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"emp_code\",\r\n                headerName: \"Emp Code\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"emp_name\",\r\n                headerName: \"Emp Name\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"in_time\",\r\n                headerName: \"In Time\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"out_time\",\r\n                headerName: \"Out Time\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"m_in_time\",\r\n                headerName: \"Req. In Time\",\r\n                flex: 0.1,\r\n              },\r\n\r\n              {\r\n                field: \"m_out_time\",\r\n                headerName: \"Req. Out Time\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"remarks\",\r\n                headerName: \"Remarks\",\r\n                flex: 0.1,\r\n              },\r\n            ]}\r\n            pagination\r\n            getRowId={(row) => row.srno}\r\n            disableColumnFilter\r\n            pageSize={params.pageSize}\r\n            page={params.pageNo}\r\n            rowsPerPageOptions={[10, 15, 25, 100]}\r\n            rowCount={totalRecord}\r\n            paginationMode=\"server\"\r\n            onPageSizeChange={handlePageSizeChange}\r\n            onPageChange={handlePageChange}\r\n            loading={loading}\r\n            rowHeight={30}\r\n            components={\r\n              browseListData.length > 0\r\n                ? {\r\n                    Pagination: CustomPagination,\r\n                    NoRowsOverlay: CustomNoRowsOverlay,\r\n                  }\r\n                : {}\r\n            }\r\n            onSortModelChange={(sort) => {\r\n              if (sort.length > 0) {\r\n                setParams({\r\n                  ...params,\r\n                  sort_column: sort[0].field,\r\n                  sort_order: sort[0].sort,\r\n                });\r\n              }\r\n            }}\r\n            rows={browseListData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttendanceBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Profile\\profile.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\itemLedgerBrowse.js",["1647","1648","1649","1650","1651","1652","1653"],[],"import { DatePicker } from \"@material-ui/pickers\";\r\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CustomPagination from \"../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\r\nimport { showErrorToast } from \"../../components/common\";\r\nimport moment from \"moment\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst ItemLedgerBrowse = () => {\r\n  const [bodyParam, setBodyParam] = useState({\r\n    sdate: new Date(new Date().getTime() - 24 * 60 * 60 * 1000),\r\n    edate: new Date(),\r\n    product_id: \"\",\r\n  });\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [mlfbList, setMLFBList] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  const getProductList = async () => {\r\n    await CommonController.commonApiCallFilter(\r\n      \"Dropdown/GetProductMlfb\",\r\n      {}\r\n    ).then((data) => setMLFBList(data));\r\n  };\r\n\r\n  const handleDateChange = (name, date) => {\r\n    setBodyParam({ ...bodyParam, [name]: date });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProductList();\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [bodyParam]);\r\n\r\n  const handleAutoChange = (name, value) => {\r\n    setBodyParam({ ...bodyParam, [name]: value });\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let body = { ...bodyParam };\r\n      body.sdate = moment(bodyParam.sdate).format(\"DD-MM-yyyy\");\r\n      body.edate = moment(bodyParam.edate).format(\"DD-MM-yyyy\");\r\n      await CommonController.commonApiCall(\r\n        \"Stock/NewDailyLedgerReportInStock\",\r\n        params,\r\n        body,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <div className=\"filter_box mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-0\">Filters</h4>\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <DatePicker\r\n                label=\"From Date\"\r\n                value={bodyParam.sdate}\r\n                format=\"dd/MM/yyyy\"\r\n                onChange={(date) => handleDateChange(\"sdate\", date)}\r\n                animateYearScrolling\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <DatePicker\r\n                label=\"To Date\"\r\n                value={bodyParam.edate}\r\n                format=\"dd/MM/yyyy\"\r\n                onChange={(date) => handleDateChange(\"edate\", date)}\r\n                animateYearScrolling\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                minDate={bodyParam.sdate}\r\n                fullWidth\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo2\"\r\n                options={mlfbList}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.value}\r\n                value={selectedValue}\r\n                onChange={(event, value) => {\r\n                  handleAutoChange(\"product_id\", value ? value.id : null);\r\n                  setSelectedValue(value);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"MLFB No.\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid\r\n            columns={[\r\n              {\r\n                field: \"id\",\r\n                headerName: \"Sr. no\",\r\n                flex: 0,\r\n                hide: true,\r\n              },\r\n              {\r\n                field: \"entry_type\",\r\n                headerName: \"Entry Type\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"comp_id\",\r\n                headerName: \"Comp Id\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"tran_no\",\r\n                headerName: \"Tran No\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"party\",\r\n                headerName: \"Party\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"in_qty\",\r\n                headerName: \"In Qty\",\r\n                flex: 0.1,\r\n              },\r\n\r\n              {\r\n                field: \"out_qty\",\r\n                headerName: \"Out Qty\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n              {\r\n                field: \"balance\",\r\n                headerName: \"Balance\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n            ]}\r\n            pagination\r\n            disableColumnFilter\r\n            pageSize={params.pageSize}\r\n            page={params.pageNo}\r\n            rowsPerPageOptions={[10, 15, 25, 100]}\r\n            rowCount={totalRecord}\r\n            paginationMode=\"server\"\r\n            onPageSizeChange={handlePageSizeChange}\r\n            onPageChange={handlePageChange}\r\n            loading={loading}\r\n            rowHeight={30}\r\n            components={\r\n              browseListData.length > 0\r\n                ? {\r\n                    Pagination: CustomPagination,\r\n                    NoRowsOverlay: CustomNoRowsOverlay,\r\n                  }\r\n                : {}\r\n            }\r\n            onSortModelChange={(sort) => {\r\n              if (sort.length > 0) {\r\n                setParams({\r\n                  ...params,\r\n                  sort_column: sort[0].field,\r\n                  sort_order: sort[0].sort,\r\n                });\r\n              }\r\n            }}\r\n            rows={browseListData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemLedgerBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\serialLedgerBrowse.js",["1654","1655"],[],"import { TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CustomPagination from \"../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\r\nimport { showErrorToast } from \"../../components/common\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst SerialLedgerBrowse = () => {\r\n  const [bodyParam, setBodyParam] = useState({\r\n    product_id: \"\",\r\n    serial_no: \"\",\r\n    category_id: \"\",\r\n  });\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [mlfbList, setMLFBList] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState({\r\n    category: \"\",\r\n    mlfb: \"\",\r\n  });\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n  const getMLFBList = async (id) => {\r\n    await CommonController.commonApiCallFilter(\r\n      `Dropdown/GetMlfbListInStock`,\r\n      {\r\n        category_id: id,\r\n      },\r\n      \"get\"\r\n    ).then((data) => setMLFBList(data));\r\n  };\r\n\r\n  const getCategoryList = async () => {\r\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(\r\n      (data) => setCategoryList(data)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoryList();\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [bodyParam]);\r\n\r\n  const handleAutoChange = (name, value) => {\r\n    setBodyParam({ ...bodyParam, [name]: value });\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"Stock/ProductLedgerSerialNoReport\",\r\n        params,\r\n        bodyParam,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <div className=\"filter_box mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-0\">Filters</h4>\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo\"\r\n                options={categoryList}\r\n                onChange={(event, value) => {\r\n                  setSelectedValue({ ...selectedValue, category: value });\r\n                  handleAutoChange(\"category_id\", value ? value.id : null);\r\n                  if (value) {\r\n                    getMLFBList(value.id);\r\n                  }\r\n                }}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.value}\r\n                value={selectedValue.category}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Category\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo2\"\r\n                options={mlfbList}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.value}\r\n                value={selectedValue.mlfb}\r\n                onChange={(event, value) => {\r\n                  handleAutoChange(\"product_id\", value ? value.id : null);\r\n                  setSelectedValue({ ...selectedValue, mlfb: value });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"MLFB No.\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                name=\"serial_no\"\r\n                label=\"Serial No\"\r\n                onChange={(e) =>\r\n                  setBodyParam({ ...bodyParam, serial_no: e.target.value })\r\n                }\r\n                value={bodyParam.serial_no}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid\r\n            columns={[\r\n              {\r\n                field: \"id\",\r\n                headerName: \"Sr. no\",\r\n                flex: 0,\r\n                hide: true,\r\n              },\r\n              {\r\n                field: \"entry_type\",\r\n                headerName: \"Entry Type\",\r\n                flex: 0.1,\r\n              },\r\n\r\n              {\r\n                field: \"tran_no\",\r\n                headerName: \"Tran No\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"party\",\r\n                headerName: \"Party\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"mlfb_no\",\r\n                headerName: \"In Qty\",\r\n                flex: 0.1,\r\n              },\r\n\r\n              {\r\n                field: \"serial_no\",\r\n                headerName: \"Out Qty\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n            ]}\r\n            pagination\r\n            disableColumnFilter\r\n            pageSize={params.pageSize}\r\n            page={params.pageNo}\r\n            rowsPerPageOptions={[10, 15, 25, 100]}\r\n            rowCount={totalRecord}\r\n            paginationMode=\"server\"\r\n            onPageSizeChange={handlePageSizeChange}\r\n            onPageChange={handlePageChange}\r\n            loading={loading}\r\n            rowHeight={30}\r\n            components={\r\n              browseListData.length > 0\r\n                ? {\r\n                    Pagination: CustomPagination,\r\n                    NoRowsOverlay: CustomNoRowsOverlay,\r\n                  }\r\n                : {}\r\n            }\r\n            onSortModelChange={(sort) => {\r\n              if (sort.length > 0) {\r\n                setParams({\r\n                  ...params,\r\n                  sort_column: sort[0].field,\r\n                  sort_order: sort[0].sort,\r\n                });\r\n              }\r\n            }}\r\n            rows={[]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SerialLedgerBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Stock\\stockBrowse.js",["1656","1657"],[],"import { DatePicker } from \"@material-ui/pickers\";\r\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport CustomPagination from \"../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\r\nimport { showErrorToast } from \"../../components/common\";\r\nimport moment from \"moment\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst StockBrowse = () => {\r\n  const [bodyParam, setBodyParam] = useState({\r\n    date: new Date(),\r\n    zero: false,\r\n    category_id: \"\",\r\n    product_id: \"\",\r\n    siemens_product: \"\",\r\n  });\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [mlfbList, setMLFBList] = useState([]);\r\n  const [selectedValue, setSelectedValue] = useState({\r\n    category: \"\",\r\n    mlfb: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"zero\") {\r\n      setBodyParam({ ...bodyParam, [e.target.name]: e.target.checked });\r\n    } else {\r\n      setBodyParam({ ...bodyParam, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setBodyParam({ ...bodyParam, date: date });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getMLFBList = async (id) => {\r\n    await CommonController.commonApiCallFilter(\r\n      `Dropdown/GetMlfbListInStock`,\r\n      {\r\n        category_id: id,\r\n      },\r\n      \"get\"\r\n    ).then((data) => setMLFBList(data));\r\n  };\r\n\r\n  const getCategoryList = async () => {\r\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(\r\n      (data) => setCategoryList(data)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoryList();\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n\r\n  const handleAutoChange = (name, value) => {\r\n    setBodyParam({ ...bodyParam, [name]: value });\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let body = { ...bodyParam };\r\n      body.date = moment(bodyParam.date).format(\"DD-MM-yyyy\");\r\n      body.zero = bodyParam.zero ? \"0\" : \"\";\r\n      await CommonController.commonApiCall(\r\n        \"Stock/NewDailyStockReportInStock\",\r\n        params,\r\n        body,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <div className=\"filter_box mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-0\">Filters</h4>\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <DatePicker\r\n                label=\"Date\"\r\n                value={bodyParam.date}\r\n                format=\"dd/MM/yyyy\"\r\n                onChange={(date) => handleDateChange(date)}\r\n                animateYearScrolling\r\n                inputVariant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo\"\r\n                options={categoryList}\r\n                onChange={(event, value) => {\r\n                  setSelectedValue({ ...selectedValue, category: value });\r\n                  handleAutoChange(\"category_id\", value ? value.id : null);\r\n                  if (value) {\r\n                    getMLFBList(value.id);\r\n                  }\r\n                }}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.value}\r\n                value={selectedValue.category}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Category\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo2\"\r\n                options={mlfbList}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.value}\r\n                value={selectedValue.mlfb}\r\n                onChange={(event, value) => {\r\n                  handleAutoChange(\"product_id\", value ? value.id : null);\r\n                  setSelectedValue({ ...selectedValue, mlfb: value });\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"MLFB No.\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-5 mb-md-0\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                }}\r\n                name=\"siemens_product\"\r\n                select\r\n                label=\"Siemen Product\"\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value={\"siemens\"}>Siemens</MenuItem>\r\n                <MenuItem value={\"non-siemens\"}>Non-Siemens</MenuItem>\r\n              </TextField>\r\n            </div>\r\n            <div className=\"col-md-1 mb-5 mb-md-0\">\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Checkbox defaultChecked />}\r\n                  label=\"Zero\"\r\n                  name=\"zero\"\r\n                  checked={bodyParam.zero}\r\n                  onChange={handleChange}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                onChange={handleParams}\r\n                value={params.filter_value}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-12 text-right\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={getBrowseListData}\r\n                disableElevation\r\n              >\r\n                Refresh\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ height: 400, width: \"100%\" }}>\r\n          <DataGrid\r\n            columns={[\r\n              {\r\n                field: \"id\",\r\n                headerName: \"Sr. no\",\r\n                flex: 0,\r\n                hide: true,\r\n              },\r\n              {\r\n                field: \"erp_code\",\r\n                headerName: \"ERP Code\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"category\",\r\n                headerName: \"Category\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"group\",\r\n                headerName: \"Group\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"item\",\r\n                headerName: \"Item\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"mlfb\",\r\n                headerName: \"MLFB\",\r\n                flex: 0.1,\r\n              },\r\n              {\r\n                field: \"description\",\r\n                headerName: \"Description\",\r\n                flex: 0.1,\r\n              },\r\n\r\n              {\r\n                field: \"store_qty\",\r\n                headerName: \"Store Qty\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n              {\r\n                field: \"di_qty\",\r\n                headerName: \"DI Qty\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n              {\r\n                field: \"open_qty\",\r\n                headerName: \"Open Qty\",\r\n                flex: 0.1,\r\n                align: \"right\",\r\n              },\r\n            ]}\r\n            pagination\r\n            disableColumnFilter\r\n            pageSize={params.pageSize}\r\n            page={params.pageNo}\r\n            rowsPerPageOptions={[10, 15, 25, 100]}\r\n            rowCount={totalRecord}\r\n            paginationMode=\"server\"\r\n            onPageSizeChange={handlePageSizeChange}\r\n            onPageChange={handlePageChange}\r\n            loading={loading}\r\n            rowHeight={30}\r\n            components={\r\n              browseListData.length > 0\r\n                ? {\r\n                    Pagination: CustomPagination,\r\n                    NoRowsOverlay: CustomNoRowsOverlay,\r\n                  }\r\n                : {}\r\n            }\r\n            onSortModelChange={(sort) => {\r\n              if (sort.length > 0) {\r\n                setParams({\r\n                  ...params,\r\n                  sort_column: sort[0].field,\r\n                  sort_order: sort[0].sort,\r\n                });\r\n              }\r\n            }}\r\n            rows={browseListData}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\user rights\\browse.js",["1658","1659"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\index.js",["1660","1661","1662"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport DeliveryChallanBrowse from \"./browse\";\r\nimport AddDeliveryChallan from \"./dc-add\";\r\n\r\nconst ChallanIndex = ({ type ,slType}) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n          {`New ${slType} DC` }\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <DeliveryChallanBrowse type={type} slType={slType} />\r\n        ) : (\r\n          <AddDeliveryChallan challanType={type} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallanIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\index.js",["1663","1664","1665","1666","1667"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\index.js",["1668","1669","1670"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DCBrowseList from \"./browse\";\r\nimport NewDCPackaging from \"./form\";\r\n\r\nconst DCIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Packaging\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <DCBrowseList /> : <NewDCPackaging />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DCIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\index.js",["1671","1672"],[],"import React, { useState } from \"react\";\r\nimport SlWipAdd from \"./add\";\r\n\r\nimport SlWipBrowse from \"./browse\";\r\n\r\n\r\nexport default function SlWipIndex({slType}) {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n           {`New ${slType} WIP` }\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <SlWipBrowse slType={slType}/> : <SlWipAdd />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\index.js",["1673","1674"],[],"import React,{useState} from 'react'\r\nimport CourierAdd from './add'\r\nimport CourierBrowse from './browse'\r\nexport default function CourierInIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                \r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CourierBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\index.js",["1675","1676","1677","1678"],[],"import React,{useState} from 'react'\r\nimport JobWorkAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport JobWorkBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function JobWorkIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                    Job Work In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <JobWorkBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <JobWorkAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\index.js",["1679","1680","1681","1682"],[],"import React,{useState} from 'react'\r\nimport CcrAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport CcrBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function CcrInIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        CCR In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CcrBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CcrAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\index.js",["1683","1684","1685"],[],"import React,{useState} from 'react'\r\nimport RgpBrowseDc from './browse';\r\n\r\nimport RrgpAdd from './rrgp/add';\r\n\r\n\r\n\r\nexport default function ReturnableIndex() {\r\n    const challanType = new URLSearchParams(window.location.search).get(\"type\");\r\n    const [index, setindex] = useState(0)\r\n    // const history = useHistory();\r\n    // console.log(challanType);\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={\r\n                            `nav-link ` +\r\n                            (index === 0\r\n                                ? \"active\"\r\n                                : \"\")\r\n                        }\r\n                        onClick={() => {\r\n                            // window.location.href = `/logistics/delivery-challan?type=${encodeURIComponent(\r\n                            //   \"SL\" \r\n                            // )}`;\r\n                            setindex(0)\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={\r\n                            `nav-link ` +\r\n                            (index === 1 ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() =>\r\n                            // (window.location.href = `/logistics/delivery-challan?type=${encodeURIComponent(\r\n                            //   \"Non SL\"\r\n                            // )}`)\r\n                            setindex(1)\r\n                        }\r\n                    >\r\n                        Returnable Gate Pass\r\n                    </a>\r\n                </li>\r\n              \r\n              \r\n               \r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {/* {(index === 0 || index === 1) && <ChallanIndex\r\n                    type={challanType ? decodeURIComponent(challanType) : \"SL\"}\r\n                />}  */}\r\n                \r\n                {  index===0&& <RgpBrowseDc/>}\r\n                {  index===1&& <RrgpAdd/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\index.js",["1686","1687"],[],"import React,{useState} from 'react'\r\nimport MrnAddDc from './add';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function MrnDcIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        New Material Receipt Note\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <MrnBrowseDc/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <MrnAddDc/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\index.js",["1688","1689"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearSelectedComboId } from \"../../../_redux/actions/masters/all.action\";\r\nimport AddComboMLFB from \"./addCombo\";\r\n// import AddMaterialCode from \"./addMaterialCode\";\r\nimport ComboMLFBBrowse from \"./browse\";\r\n// import MaterialCodeBrowse from \"./browse\";\r\n\r\nconst ComboMLFBIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              dispatch(clearSelectedComboId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              dispatch(clearSelectedComboId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Combo MLFB\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <ComboMLFBBrowse onEdit={() => handleIndex(1)} />\r\n        ) : (\r\n          <AddComboMLFB onClose={() => handleIndex(0)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComboMLFBIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\index.js",["1690","1691"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\index.js",["1692"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\index.js",["1693","1694","1695"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AddItemGroupMaster from \"./addItem\";\r\nimport ItemGroupBrowse from \"./browse\";\r\n// import AddMaterialCode from \"./addMaterialCode\";\r\n// import MaterialCodeBrowse from \"./browse\";\r\nconst ItemGroupIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              //   dispatch(clearSelectedComboId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              //   dispatch(clearSelectedComboId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Item Group\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {\r\n          selectedIndex === 0 ? (\r\n            <ItemGroupBrowse onEdit={() => handleIndex(1)} />\r\n          ) : (\r\n            <AddItemGroupMaster />\r\n          )\r\n          //   <AddComboMLFB onClose={() => handleIndex(0)} />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemGroupIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\index.js",["1696","1697"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\index.js",["1698","1699"],[],"import React,{useState} from 'react'\r\n\r\nimport CourierOutBrowse from './browse';\r\nimport CourierOutAdd from './add'\r\n\r\nexport default function CourierOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CourierOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\index.js",["1700","1701","1702"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DeliveryChallanMdcBrowse from \"./browse\";\r\nimport AddDeliveryChallanMdc from \"./mdc-add\";\r\n\r\nconst ChallanIndexMdc = ({ type }) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            Manufacturing DC\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          \r\n            <DeliveryChallanMdcBrowse/>\r\n        \r\n        ) : (\r\n        \r\n        <AddDeliveryChallanMdc/>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallanIndexMdc;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\index.js",["1703","1704"],[],"import React,{useState} from 'react'\r\nimport JobWorkOutAdd from './add';\r\nimport JobWorkOutBrowse from './browse';\r\n\r\nexport default function JobWorkOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                    Job Work Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <JobWorkOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <JobWorkOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\index.js",["1705","1706"],[],"import React,{useState} from 'react'\r\nimport CourierInvoiceBrowse from './browse'\r\nimport CourierInvoiceAdd from './add'\r\nexport default function CourierInvoiceIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier Invoice\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                <CourierInvoiceBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierInvoiceAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\index.js",["1707","1708","1709","1710","1711","1712"],[],"import React, { useState } from \"react\";\r\nimport RgpAdd from \"./add\";\r\nimport RrgpAdd from \"./add\";\r\nimport MrnAddDc from \"./add\";\r\nimport RrgpBrowse from \"./browse\";\r\nimport RgpBrowseDc from \"./browse\";\r\nimport MrnBrowseDc from \"./browse\";\r\n\r\nexport default function RrgpIndex() {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            Return Of Returnable Gate Pass{\" \"}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <RrgpBrowse /> : <RrgpAdd/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\index.js",["1713","1714"],[],"import React,{useState} from 'react'\r\nimport MrnPoAdd from './add';\r\n\r\nimport MrnPoBrowse from './browse';\r\n\r\nexport default function MrnPoIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        New MRN(PO)\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <MrnPoBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <MrnPoAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\index.js",["1715","1716"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearSelectedGodownId } from \"../../../_redux/actions/masters/all.action\";\r\nimport AddGodown from \"./addEntry\";\r\n\r\nimport GodownBrowse from \"./browse\";\r\n// import AddMaterialCode from \"./addMaterialCode\";\r\n\r\n// import MaterialCodeBrowse from \"./browse\";\r\n\r\nconst GodownIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Godown\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <GodownBrowse onEdit={() => handleIndex(1)} />\r\n        ) : (\r\n          <AddGodown onClose={() => handleIndex(0)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GodownIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\index.js",["1717","1718","1719","1720","1721","1722"],[],"import React,{useState} from 'react'\r\nimport CcrAdd from './add';\r\nimport CcrOutAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport CcrOutBrowse from './browse';\r\nimport CcrBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function CcrOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        CCR Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CcrOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CcrOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\index.js",["1723","1724","1725"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Enquiry\\index.js",["1726","1727","1728"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport SalesEnquiryBrowse from \"./browse\";\r\n\r\nconst SalesIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Sales Enquiry\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesEnquiryBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\issues\\index.js",["1729","1730","1731"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesIssueBrowse from \"./browse\";\r\n\r\n\r\nconst SalesIssueIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n            >\r\n            New Marketing Visit\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesIssueBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesIssueIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\marketingVisit\\index.js",["1732","1733","1734"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesMarketingBrowse from \"./browse\";\r\n\r\nconst SalesMarketingIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n\r\n            New Marketing Visit\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesMarketingBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesMarketingIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\quotation\\index.js",["1735","1736","1737"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesQuotationBrowse from \"./browse\";\r\n\r\n\r\n\r\nconst SalesQuotationIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Quotation\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesQuotationBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesQuotationIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Costing\\index.js",["1738","1739","1740"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesCostingBrowse from \"./browse\";\r\n\r\nconst SalesCostingIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Costing\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesCostingBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesCostingIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\soAmedment\\index.js",["1741","1742","1743"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesSoAmdBrowse from \"./browse\";\r\n\r\nconst SalesSoAmdIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New SO Amendment\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesSoAmdBrowse/>\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesSoAmdIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPos\\index.js",["1744","1745","1746","1747"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesSlSoPosBrowse from \"./browse\";\r\n\r\nimport SalesEnquiryBrowse from \"./browse\";\r\n\r\nconst SalesSlSoPosIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New SO POS\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesSlSoPosBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesSlSoPosIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPosSummarise\\index.js",["1748","1749","1750","1751"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesSlSoPosSummariseBrowse from \"./browse\";\r\n\r\nimport SalesEnquiryBrowse from \"./browse\";\r\n\r\nconst SalesSlSoPosSummariseIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New SO POS Summarize\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesSlSoPosSummariseBrowse/>\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesSlSoPosSummariseIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\index.js",["1752","1753"],[],"import React, { useState } from \"react\";\r\nimport AddSupportTicket from \"./addTicket\";\r\nimport SupportTicketBrowse from \"./browse\";\r\nconst SupportTicketIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n         \r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n         \r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Ticket\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <SupportTicketBrowse /> : <AddSupportTicket />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportTicketIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\index.js",["1754","1755"],[],"import React, { useState } from \"react\";\r\nimport AddTicketCommercial from \"./addCommericial\";\r\nimport SupportTicketCommericialBrowse from \"./tcBrowse\";\r\nconst SupportTicketCommercialIndex = (props) => {\r\n  const approvalObj = props.location.state;\r\n  const [selectedIndex, setSeletedIndex] = useState(\r\n    approvalObj ? approvalObj.index : 0\r\n  );\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New Commercial\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SupportTicketCommericialBrowse\r\n            selectedPreviewId={(id) => {\r\n              setSelectedId(id);\r\n              handleIndex(1);\r\n            }}\r\n          />\r\n        ) : (\r\n          <AddTicketCommercial\r\n            previewId={approvalObj ? approvalObj.id : selectedId}\r\n            changeTab={handleIndex}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportTicketCommercialIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketApproval\\index.js",["1756","1757","1758"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBrowseUserRight } from \"../../../components/common\";\r\nimport SupportTicketApprovalBrowse from \"./browse\";\r\n\r\nconst SupportTicketApprovalIndex = () => {\r\n  const userRight = useSelector((state) => state.common.userRightList);\r\n\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        {getBrowseUserRight(userRight)?.insert_right === \"True\" && (\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n              onClick={() => {\r\n                // dispatch(clearSelectedGodownId());\r\n                handleIndex(1);\r\n              }}\r\n            >\r\n              New Ticket Approval\r\n            </a>\r\n          </li>\r\n        )}\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <SupportTicketApprovalBrowse /> : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportTicketApprovalIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slDI\\index.js",["1759","1760","1761","1762"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SalesSiDiBrowse from \"./browse\";\r\n\r\nimport SalesEnquiryBrowse from \"./browse\";\r\n\r\nconst SalesSiDiIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New SL DI\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SalesSiDiBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesSiDiIndex;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\soDetail\\index.js",["1763","1764","1765"],[],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport SoDetailBrowse from \"./browse\";\r\n\r\nconst SoDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            New So Detail\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <SoDetailBrowse />\r\n        ) : (\r\n          <h2>Sales Enquiry Form</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoDetail;\r\n","E:\\reactProject\\diagnosticnew\\src\\components\\common.js",["1766","1767"],[],"import { Button } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nexport const showSuccessToast = (msg) => {\r\n  toast.success(msg, {\r\n    position: \"bottom-right\",\r\n    autoClose: 10000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"colored\",\r\n  });\r\n};\r\nexport const showErrorToast = (msg) => {\r\n  toast.error(msg, {\r\n    position: \"bottom-right\",\r\n    autoClose: 10000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"colored\",\r\n  });\r\n};\r\nexport const UserRight=()=>{\r\n  const thirdmenu=useSelector((state)=>state.common.userRightListThird)\r\n  console.log(thirdmenu)\r\n}\r\nexport const buttonLoader = (loading, label, onClick, color) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color={color}\r\n      disabled={loading}\r\n      onClick={onClick}\r\n      disableElevation\r\n    >\r\n      {loading ? <i class=\"fas fa-circle-notch fa-spin\"></i> : label}\r\n    </Button>\r\n  );\r\n};\r\nexport const getBrowseUserRight = (response) => {\r\n  const pathArr = window.location.pathname.split(\"/\").filter((x) => x != \"\");\r\n  // console.log(pathArr);\r\n  // console.log(response?.filter((x) => x.transaction_name.toLowerCase() == pathArr[2]));\r\n  return response?.filter((x) => x.transaction_name.toLowerCase() == pathArr[2])[0]\r\n};\r\n\r\nexport const getAutoValue = (key, arr, val) => {\r\n  const value = arr.filter((x) => x[key] === val);\r\n  return value && value.length > 0 ? value[0] : null;\r\n};\r\nexport const debounce = (func, delay) => {\r\n  let debounceTimer;\r\n  return function () {\r\n    const context = this;\r\n    const args = arguments;\r\n    clearTimeout(debounceTimer);\r\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\r\n  };\r\n};\r\nexport const getUserId = () => {\r\n  return localStorage.getItem(\"userId\");\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\components\\CustomPagination.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\customRowComponent.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\browse.js",["1768","1769","1770","1771","1772","1773"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\r\nimport { showErrorToast } from \"../../components/common\";\r\nimport DateFilter from \"../../components/dateFilter\";\r\n\r\nconst DCBrowseList = (props) => {\r\n  const history = useHistory();\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"dc/browseDCPackage\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.recordsFiltered);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"entry_no\",\r\n              headerName: \"Entry No.\",\r\n              width: 100,\r\n            },\r\n\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 400,\r\n            },\r\n\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 400,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DCBrowseList;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\DC\\form.js",["1774","1775"],[],"import { Button, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete, TextField } from \"@mui/material\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../components/basic-table\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../components/common\";\r\nimport { TablePicker } from \"../../components/table-picker\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { CommonController } from \"../../_redux/controller/common.controller\";\r\n\r\nconst NewDCPackaging = () => {\r\n  const [selectedPackingList, setSelectedPackingList] = useState([]);\r\n  const [showPackagingList, setShowPackagingList] = useState(false);\r\n  const [itemListBody, setItemListBody] = useState(null);\r\n  const [showItemList, setShowItemList] = useState(null);\r\n  const [companyList, setCompanyList] = useState([]);\r\n  const [selectedCompany, setSelectedCompany] = useState(null);\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    date: moment().format(\"DD/MM/YYYY\"),\r\n    entry_no: \"\",\r\n    remarks: \"\",\r\n  });\r\n  const [boxList, setBoxList] = useState([\r\n    {\r\n      items: [],\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getEntryNo();\r\n  }, []);\r\n  useEffect(() => {\r\n    setItemListBody({\r\n      dcList: selectedPackingList.map((item) => ({ id: item.tran_id })),\r\n      itemList: [],\r\n    });\r\n  }, [selectedPackingList]);\r\n\r\n  useEffect(() => {\r\n    if (boxList.length > 1) {\r\n      let iList = [];\r\n      boxList.forEach((x) => {\r\n        iList.push.apply(iList, x.items);\r\n      });\r\n\r\n      setItemListBody({\r\n        dcList: selectedPackingList.map((item) => ({ id: item.tran_id })),\r\n        itemList: iList,\r\n      });\r\n    }\r\n  }, [boxList]);\r\n\r\n  const togglePackagingList = () => setShowPackagingList(!showPackagingList);\r\n  const toggleItemList = (index) => setShowItemList(index);\r\n\r\n  const handlePackagingList = (data) => {\r\n    setSelectedPackingList(data);\r\n    togglePackagingList();\r\n  };\r\n\r\n  const handleIemList = (data, index) => {\r\n    let tempBox = [...boxList];\r\n    tempBox[index].items = data;\r\n    setBoxList(tempBox);\r\n    toggleItemList(null);\r\n  };\r\n\r\n  const removeBox = (index) => {\r\n    setBoxList(boxList.filter((item, _) => _ !== index));\r\n  };\r\n\r\n  const addBox = () => {\r\n    setBoxList([\r\n      ...boxList,\r\n      {\r\n        items: [],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const itemListColumn = [\r\n    {\r\n      id: \"tran_id\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"ID\",\r\n    },\r\n    {\r\n      id: \"mlfb_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"MLFB No.\",\r\n    },\r\n    {\r\n      id: \"dc_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"DC No.\",\r\n    },\r\n    {\r\n      id: \"item_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Item Name\",\r\n    },\r\n    {\r\n      id: \"description\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Description\",\r\n    },\r\n\r\n    {\r\n      id: \"qty\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Quantity\",\r\n    },\r\n    {\r\n      id: \"serial_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Serial No.\",\r\n    },\r\n  ];\r\n\r\n  const packagingListColumn = [\r\n    {\r\n      id: \"tran_id\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"ID\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Date\",\r\n      dateFormat: true,\r\n    },\r\n    {\r\n      id: \"dc_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"DC No.\",\r\n    },\r\n    {\r\n      id: \"Company\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Company\",\r\n    },\r\n    {\r\n      id: \"Contact\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Contact\",\r\n    },\r\n    {\r\n      id: \"so_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"SO No.\",\r\n    },\r\n    {\r\n      id: \"dispatch_through\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Dispatch Through\",\r\n    },\r\n    {\r\n      id: \"Destination\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Destination\",\r\n    },\r\n    {\r\n      id: \"datetime\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Datetime\",\r\n      dateFormat: true,\r\n    },\r\n    {\r\n      id: \"status\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Status\",\r\n    },\r\n    {\r\n      id: \"comments\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Comments\",\r\n    },\r\n    {\r\n      id: \"remarks\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Remarks\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      id: \"di_no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"DI No.\",\r\n    },\r\n  ];\r\n\r\n  const getCompanyList = async (search) => {\r\n    try {\r\n      let response = await CommonController.commonApiCallFilter(\r\n        \"dc/pickCompany\",\r\n        { search: search },\r\n        \"get\",\r\n        \"node\"\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setCompanyList(response.result);\r\n      } else {\r\n        showErrorToast(response.message);\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const deletePickItem = (item, index) => {\r\n    let tempBoxList = [...boxList];\r\n    tempBoxList[index].items = tempBoxList[index].items.filter(\r\n      (x) => x.tran_id !== item.tran_id\r\n    );\r\n\r\n    setBoxList(tempBoxList);\r\n  };\r\n\r\n  const getEntryNo = async () => {\r\n    try {\r\n      let response = await CommonController.commonApiCallFilter(\r\n        \"dc/generateDCNo\",\r\n        {},\r\n        \"get\",\r\n        \"node\"\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setInitialValues({ ...initialValues, entry_no: response.data });\r\n      } else {\r\n        showErrorToast(response.message);\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const submitDC = async () => {\r\n    try {\r\n      if (initialValues.remarks === \"\") {\r\n        showErrorToast(\"Please enter remarks\");\r\n      } else if (boxList.filter((x) => x.items.length < 1).length > 0) {\r\n        showErrorToast(\"Please choose items for box\");\r\n      } else if (selectedPackingList.length < 1) {\r\n        showErrorToast(\"Please choose dc packaging\");\r\n      } else {\r\n        const body = {\r\n          tran_id: \"0\",\r\n          date: initialValues.date,\r\n          entry_no: initialValues.entry_no,\r\n          company_id: selectedCompany.company_id,\r\n          remarks: initialValues.remarks,\r\n          boxList: boxList,\r\n          user_id: localStorage.getItem(\"userId\"),\r\n        };\r\n        let response = await CommonController.commonApiCallFilter(\r\n          \"dc/insertDc\",\r\n          body,\r\n          \"post\",\r\n          \"node\"\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          showSuccessToast(response.message);\r\n          window.location.reload();\r\n        } else {\r\n          showErrorToast(response.message);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container-fluid mt-5 pt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"entry-details d-flex col-md-6\">\r\n          <div className=\"mr-3\">\r\n            <h5>Date</h5>\r\n            <TextField\r\n              value={initialValues.date}\r\n              fullWidth\r\n              label=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div className=\"mr-3\">\r\n            <h5>Entry No.</h5>{\" \"}\r\n            <TextField\r\n              value={initialValues.entry_no}\r\n              fullWidth\r\n              label=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              disabled\r\n            />\r\n          </div>\r\n          <div>\r\n            <h5>Remarks</h5>\r\n            <TextField\r\n              label=\"Remarks\"\r\n              fullWidth\r\n              value={initialValues.remarks}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"remarks\"\r\n              onChange={(e) =>\r\n                setInitialValues({ ...initialValues, remarks: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4  ml-auto \">\r\n          <h5>Pick Company</h5>\r\n          <div className=\"d-flex align-items-center\">\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={companyList}\r\n              fullWidth\r\n              size=\"small\"\r\n              getOptionLabel={(option) => option.company_name}\r\n              value={selectedCompany}\r\n              onChange={(e, value) => setSelectedCompany(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onInput={(e) => {\r\n                    debounce(getCompanyList(e.target.value, 200));\r\n                  }}\r\n                  label=\"\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            {!showPackagingList && selectedCompany && (\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"mx-3 w-25\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                onClick={togglePackagingList}\r\n              >\r\n                Pick DC\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {showPackagingList && (\r\n        <TablePicker\r\n          selectedItems={selectedPackingList}\r\n          columns={packagingListColumn}\r\n          url={\"dc/pickDC\"}\r\n          isNode=\"node\"\r\n          apiBody={{ company_id: selectedCompany?.company_id }}\r\n          apiType=\"post\"\r\n          onPickerClose={togglePackagingList}\r\n          onSubmit={handlePackagingList}\r\n        />\r\n      )}\r\n\r\n      {selectedPackingList.length > 0 && (\r\n        <SimpleTable\r\n          columns={packagingListColumn}\r\n          rows={selectedPackingList}\r\n          // onDelete={handleAddedCustomer}\r\n        />\r\n      )}\r\n\r\n      {itemListBody &&\r\n        itemListBody.dcList.length > 0 &&\r\n        boxList.map((box, index) => {\r\n          return (\r\n            <div className=\"box-list mt-5 pt-5\" key={index}>\r\n              <div className=\"d-flex\">\r\n                <h2 className=\"box-header\">Box no. {index + 1}</h2>\r\n                <div className=\" ml-auto\">\r\n                  {showItemList !== index && (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"mr-2\"\r\n                      disableElevation\r\n                      variant=\"contained\"\r\n                      onClick={() => toggleItemList(index)}\r\n                    >\r\n                      Pick Item\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2 ml-auto\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={() => removeBox(index)}\r\n                  >\r\n                    Remove Box\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              {showItemList === index && (\r\n                <TablePicker\r\n                  selectedItems={box.items}\r\n                  columns={itemListColumn}\r\n                  url={\"dc/pickDCItem\"}\r\n                  isNode=\"node\"\r\n                  apiBody={itemListBody}\r\n                  apiType=\"post\"\r\n                  onPickerClose={() => toggleItemList(null)}\r\n                  onSubmit={(data) => handleIemList(data, index)}\r\n                />\r\n              )}\r\n              {box.items.length > 0 && showItemList !== index && (\r\n                <SimpleTable\r\n                  columns={itemListColumn}\r\n                  rows={box.items}\r\n                  onDelete={(item) => deletePickItem(item, index)}\r\n                />\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n      {selectedPackingList.length > 0 && (\r\n        <div className=\"float-action-btn\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            onClick={addBox}\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n            Add Box\r\n          </Fab>\r\n        </div>\r\n      )}\r\n      <hr />\r\n      <div className=\"w-100 mt-3 text-right\">\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"mr-2\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={submitDC}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button color=\"primary\" disableElevation variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewDCPackaging;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\browse.js",["1776","1777","1778","1779","1780"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\n\r\nconst DeliveryChallanBrowse = ({ type ,slType }) => {\r\n  \r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    status: \"\",\r\n    chk_all: false,\r\n    sl_type:slType,\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n     setBodyParam({...bodyParam,sl_type:event})\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistics/dc/browseDelivery\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.recordsFiltered);\r\n          setAmountFigures({\r\n            amount: data.amount,\r\n            mdc_amount: data.mdc_amount,\r\n            actual_amount: data.actual_amount,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleBodyParam(slType)\r\n  \r\n  }, [slType]);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"filter_box \">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-2\">Filters</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"row \" style={{\"width\":\"200%\"}}>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onKeyUp={handleParams}\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          </div>\r\n        </div>\r\n        <div className=\"widget-container pl-5\">\r\n          <div className=\"widget-box first\">\r\n            <span>Amount</span>\r\n            <p>{currenyMasking(amountFigures.amount)}</p>\r\n          </div>\r\n          <div className=\"widget-box second\">\r\n            <span>MDC Amount</span>\r\n            <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n          </div>\r\n          <div className=\"widget-box third\">\r\n            <span>Actual Amount</span>\r\n            <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"D.C No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n\r\n            {\r\n              field: \"contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"sales_order\",\r\n              headerName: \"Sales Order\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"so_date\",\r\n              headerName: \"S.O. Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_date\",\r\n              headerName: \"Ref Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"di_no\",\r\n              headerName: \"DI No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"pi_no\",\r\n              headerName: \"PI No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"dispatch_thr\",\r\n              headerName: \"Dispatch Thr.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"destination\",\r\n              headerName: \"Destination\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"amount\",\r\n              headerName: \"Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mdc_amount\",\r\n              headerName: \"MDC Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"actual_amount\",\r\n              headerName: \"Actual Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"comments\",\r\n              headerName: \"Comments\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Datetime\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]} \r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryChallanBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\browse.js",["1781","1782","1783","1784","1785","1786","1787","1788","1789","1790"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\add.js",["1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst CourierAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\add.js",["1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst JobWorkAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobWorkAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\form.js",["1819","1820","1821","1822","1823","1824","1825","1826"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\tcs.js",["1827","1828","1829"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\browse.js",["1830","1831","1832","1833","1834","1835","1836","1837","1838","1839"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst JobWorkBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_jwin\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"jwin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Ref Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"Destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Attachement\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobWorkBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\browse.js",["1840","1841","1842","1843","1844","1845","1846","1847","1848","1849"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst CourierBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierin\",\r\n         params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"tran_no\",\r\n              headerName: \"Tran No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            // {\r\n            //   field: \"so_no\",\r\n            //   headerName: \"So No\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              headerName: \"Description\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"box_no\",\r\n              headerName: \"Box No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"no_of_packets\",\r\n              headerName: \"No Of Packets\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n\r\n            // {\r\n            //   field: \"comments\",\r\n            //   headerName: \"Comments\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\add.js",["1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst CcrAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CcrAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\browse.js",["1864","1865","1866","1867","1868","1869","1870","1871","1872","1873"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst CcrBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_ccrin\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n  \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"ccrin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"cperson_name\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_no\",\r\n              headerName: \"Notification No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_date\",\r\n              headerName: \"Notification Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.notification_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"carrier\",\r\n                headerName: \"carrier\",\r\n                width: 120,\r\n              },\r\n              {\r\n                field: \"destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CcrBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\browse.js",["1874","1875","1876","1877","1878","1879","1880","1881","1882","1883"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst RgpBrowseDc = () => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_rgp\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n            {\r\n              field: \"rgp_no\",\r\n              headerName: \"RGP No.\",\r\n              width: 120,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Package\",\r\n              headerName: \"Package\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"Transport\",\r\n                headerName: \"Transport\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Attachement\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default RgpBrowseDc;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\add.js",["1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst MrnAddDc = ({ challanType }) => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MrnAddDc;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\browse.js",["1898","1899","1900","1901","1902","1903","1904","1905","1906","1907"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst MrnBrowseDc = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_mrn_dc\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n             \r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.po_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.docket_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MrnBrowseDc;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\dc-add.js",["1908","1909","1910","1911","1912"],[],"import {\r\n  Button,\r\n  formatMs,\r\n  MenuItem,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getUserId, showErrorToast } from \"../../../components/common\";\r\nimport { TablePicker } from \"../../../components/table-picker\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst AddDeliveryChallan = ({ challanType }) => {\r\n  const [pickItemList, setPickItemList] = useState([]);\r\n  const [showDITable, setDITable] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    di_no: \"\",\r\n    dc_no: \"\",\r\n    so_no: \"\",\r\n    company_id: \"\",\r\n    company_name: \"\",\r\n    cperson_id: \"\",\r\n    di_id: \"\",\r\n    di_date: \"\",\r\n    so_date: null,\r\n    cperson_name: \"\",\r\n    ref_no: \"\",\r\n    ref_date: null,\r\n    dis_doc_no: \"\",\r\n    dis_doc_date: null,\r\n    dis_through: \"\",\r\n    destination: \"\",\r\n    vehicle_no: \"\",\r\n    type: \"\",\r\n    status: \"open\",\r\n    remarks: \"\",\r\n    noofbox: \"\",\r\n    scan_using: \"\",\r\n    dcDetail: [],\r\n  });\r\n\r\n  const [showDIList, setShowDIList] = useState(false);\r\n  const [selectedDI, setSelectedDI] = useState(null);\r\n\r\n  const toggleDIList = () => setShowDIList(!showDIList);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleDateChange = (name, date) => {\r\n    setFormData({ ...formData, [name]: date });\r\n  };\r\n\r\n  const diListColumn = [\r\n    {\r\n      id: \"tran_id\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"\",\r\n    },\r\n    {\r\n      id: \"di_no\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"DI No\",\r\n    },\r\n    {\r\n      id: \"date\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"DI Date\",\r\n    },\r\n    {\r\n      id: \"company_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Party\",\r\n    },\r\n    {\r\n      id: \"cperson_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Contact\",\r\n    },\r\n    {\r\n      id: \"indent_no\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Indent No\",\r\n    },\r\n    {\r\n      id: \"so_no\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"SO No\",\r\n    },\r\n    {\r\n      id: \"so_date\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"SO Date\",\r\n    },\r\n    {\r\n      id: \"remarks\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Remarks\",\r\n    },\r\n  ];\r\n\r\n  const getDCNo = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/generateDc\",\r\n        {},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData({ ...formData, dc_no: data.data.dc_no });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDCNo();\r\n    // getPreviewDC(\"30490\");\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    getItemDIList(data.tran_id);\r\n    setSelectedDI(data);\r\n    setFormData({\r\n      ...formData,\r\n      so_no: data.so_no,\r\n      cperson_name: data.cperson_name,\r\n      di_date: moment().format(\"MM/DD/YYYY\"),\r\n      company_name: data.company_name,\r\n      di_no: data.di_no,\r\n      company_id: data.company_id,\r\n      cperson_id: data.cperson_id,\r\n      di_id: data.tran_id,\r\n    });\r\n    toggleDIList();\r\n  };\r\n\r\n  const getItemDIList = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/pickDIItem\",\r\n        { id: id },\r\n        \"post\", \r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setPickItemList(data.data);\r\n        } else {\r\n          showErrorToast(data.message);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const submitMain = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let temp = { ...formData };\r\n      temp.dcDetail = pickItemList;\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/insertmain\",\r\n        temp,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          getPreviewDC(data.data);\r\n        } else {\r\n          showErrorToast(data.message);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const getPreviewDC = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/previewDC\",\r\n        { id: id },\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData(data.data.dc_main[0]);\r\n          setPickItemList(data.data.dc_detail);\r\n          setDITable(true);\r\n        } else {\r\n          showErrorToast(data.message);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const updateItemById = async (obj) => {\r\n    try {\r\n      const request = {\r\n        tran_id: obj.tran_id,\r\n        box_no: obj.box_no,\r\n        mlfb_no: obj.mlfb_no,\r\n        material_code: obj.material_code,\r\n        serial_no: obj.serial_no,\r\n        user_id: getUserId(),\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/updateItemById\",\r\n        request,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          console.log(data);\r\n        } else {\r\n          showErrorToast(data.message);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const {\r\n    dc_no,\r\n    so_no,\r\n    cperson_name,\r\n    so_date,\r\n    ref_date,\r\n    remarks,\r\n    scan_using,\r\n    noofbox,\r\n    destination,\r\n    dis_doc_date,\r\n    dis_doc_no,\r\n    dis_through,\r\n    vehicle_no,\r\n    ref_no,\r\n    type,\r\n    status,\r\n  } = formData;\r\n\r\n  const handleItemChange = (index, event) => {\r\n    let tempList = [...pickItemList];\r\n    tempList[index][event.target.name] = event.target.value;\r\n    setPickItemList(tempList);\r\n  };\r\n\r\n  const getNextElem = (row, input) => {\r\n    const nextElem = document.getElementById(\r\n      `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\r\n        parseInt(input) > 2 ? \"1\" : parseInt(input) + 1\r\n      }`\r\n    );\r\n\r\n    return nextElem\r\n      ? nextElem.disabled\r\n        ? document.getElementById(\r\n            `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\r\n              parseInt(input) > 2 ? \"1\" : parseInt(input) + 2\r\n            }`\r\n          )\r\n        : document.getElementById(\r\n            `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\r\n              parseInt(input) > 2 ? \"1\" : parseInt(input) + 1\r\n            }`\r\n          )\r\n      : null;\r\n  };\r\n\r\n  const switchToInput = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      const currentElemRow = event.target.id.split(\"-\")[2];\r\n      const currentElemInp = event.target.id.split(\"-\")[3];\r\n      if (currentElemRow) {\r\n        const elem = getNextElem(currentElemRow, currentElemInp);\r\n        if (elem) {\r\n          elem.focus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"D.C. No.\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={dc_no}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Date\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={moment().format(\"MM/DD/YYYY\")}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"DI No.\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={formData.di_no}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Date\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={formData?.di_date}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Party Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            disabled\r\n            value={formData.company_name}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Sales Order\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={so_no}\r\n            variant=\"outlined\"\r\n            name=\"so_no\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <DatePicker\r\n            label=\"Date\"\r\n            value={so_date}\r\n            format=\"dd/MM/yyyy\"\r\n            onChange={(date) => handleDateChange(\"so_date\", date)}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            autoOk\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Contact Person\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={cperson_name}\r\n            name=\"cperson_name\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Ref(PO) No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={ref_no}\r\n            name={\"ref_no\"}\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <DatePicker\r\n            label=\"Date\"\r\n            value={ref_date}\r\n            format=\"dd/MM/yyyy\"\r\n            onChange={(date) => handleDateChange(\"ref_date\", date)}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            autoOk\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Type\"\r\n            value={type}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            select\r\n            name=\"type\"\r\n            onChange={handleChange}\r\n          >\r\n            {\" \"}\r\n            <MenuItem value=\"Project\">Project</MenuItem>\r\n            <MenuItem value=\"Spare\">Spare</MenuItem>\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Status\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={status}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Dispatch Doc. No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={dis_doc_no}\r\n            onChange={handleChange}\r\n            name=\"dis_doc_no\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <DatePicker\r\n            label=\"Date\"\r\n            value={dis_doc_date}\r\n            format=\"dd/MM/yyyy\"\r\n            onChange={(date) => handleDateChange(\"dis_doc_date\", date)}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            autoOk\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Remarks\"\r\n            fullWidth\r\n            value={remarks}\r\n            name=\"remarks\"\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n            multiline\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Dispatch Through\"\r\n            fullWidth\r\n            value={dis_through}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"dis_through\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Destination\"\r\n            fullWidth\r\n            name=\"destination\"\r\n            onChange={handleChange}\r\n            value={destination}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n     \r\n        \r\n          <TextField\r\n            label=\"Scan Using\"\r\n            fullWidth\r\n            select\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"scan_using\"\r\n            disabled={selectedDI}\r\n            onChange={handleChange}\r\n            value={scan_using}\r\n          >\r\n            <MenuItem value=\"MLFB NO\">MLFB NO</MenuItem>\r\n            <MenuItem value=\"MATERIAL CODE\">MATERIAL CODE</MenuItem>\r\n          </TextField>\r\n        </div> \r\n        \r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Vehicle No.\"\r\n            fullWidth\r\n            name=\"vehicle_no\"\r\n            variant=\"outlined\"\r\n            value={vehicle_no}\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"No of Box\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"noofbox\"\r\n            value={noofbox}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"diList-container\">\r\n        {!showDIList && (\r\n          <div className=\"text-right w-100 mb-5\">\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mr-2\"\r\n              disableElevation\r\n              variant=\"contained\"\r\n              onClick={toggleDIList}\r\n            >\r\n              Pick DI\r\n            </Button>\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mr-2\"\r\n              disableElevation\r\n              variant=\"contained\"\r\n              disabled={loading}\r\n              onClick={submitMain}\r\n            >\r\n              {loading ? \"Processing...\" : \" Save & Proceed\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {showDIList && (\r\n          <TablePicker\r\n            selectedItems={selectedDI}\r\n            columns={diListColumn}\r\n            url={\"logistics/dc/pickDI\"}\r\n            isNode=\"node\"\r\n            apiBody={{ user_id: getUserId(), sl_type: challanType }}\r\n            apiType=\"post\"\r\n            onPickerClose={toggleDIList}\r\n            type=\"single\"\r\n            onSubmit={handleSubmit}\r\n          />\r\n        )}\r\n\r\n        {showDITable && (\r\n          <div className=\"table-responsive mb-5 pb-5\">\r\n            <Paper>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>S.N.</TableCell>\r\n                    <TableCell>Box No</TableCell>\r\n                    <TableCell>MLFB No.</TableCell>\r\n                    <TableCell>Material Code</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Serial No.</TableCell>\r\n                    <TableCell align=\"right\">Quantity</TableCell>\r\n                    <TableCell align=\"right\">Rate</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {pickItemList.length > 0 &&\r\n                    pickItemList.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment>\r\n                          <TableRow\r\n                            key={index}\r\n                            style={{\r\n                              backgroundColor: item.serial\r\n                                ? \"rgb(255 238 240)\"\r\n                                : \"#fff\",\r\n                            }}\r\n                          >\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell style={{ width: 100 }}>\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"box_no\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => handleItemChange(index, e)}\r\n                                // onKeyPress={(e) => {\r\n\r\n                                // }}\r\n                              />{\" \"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {item.serial_no !== null ? (\r\n                                <input\r\n                                  type=\"type\"\r\n                                  disabled={scan_using === \"MATERIAL CODE\"}\r\n                                  className=\"form-control switchInput\"\r\n                                  name=\"mlfb_no\"\r\n                                  onKeyPress={switchToInput}\r\n                                  id={`row-input-${index + 1}-1`}\r\n                                  onChange={(e) => handleItemChange(index, e)}\r\n                                />\r\n                              ) : (\r\n                                item.mlfb_no\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {\" \"}\r\n                              {item.serial_no !== null ? (\r\n                                <input\r\n                                  type=\"type\"\r\n                                  disabled={scan_using === \"MLFB NO\"}\r\n                                  className=\"form-control switchInput\"\r\n                                  id={`row-input-${index + 1}-2`}\r\n                                  name=\"material_code\"\r\n                                  onKeyPress={switchToInput}\r\n                                  onChange={(e) => handleItemChange(index, e)}\r\n                                />\r\n                              ) : (\r\n                                item.material_code\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: 200 }}>\r\n                              {item.description}\r\n                            </TableCell>\r\n                            <TableCell style={{ width: 200 }}>\r\n                              {\" \"}\r\n                              {item.serial_no !== null && (\r\n                                <input\r\n                                  type=\"type\"\r\n                                  className=\"form-control switchInput\"\r\n                                  name=\"serial_no\"\r\n                                  id={`row-input-${index + 1}-3`}\r\n                                  onKeyPress={(e) => {\r\n                                    switchToInput(e);\r\n                                    if (e.key === \"Enter\") {\r\n                                      updateItemById(pickItemList[index]);\r\n                                    }\r\n                                  }}\r\n                                  onChange={(e) => handleItemChange(index, e)}\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{item.qty}</TableCell>\r\n                            <TableCell align=\"right\">{item.rate}</TableCell>\r\n                            <TableCell align=\"right\">{item.amount}</TableCell>\r\n                          </TableRow>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDeliveryChallan;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\browse.js",["1913","1914","1915","1916","1917","1918","1919","1920","1921"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst SlWipBrowse = ({slType}) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:false,\r\n    status: \"\",\r\n    approval:\"\",\r\n    sl_type:\"\"\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (sl) => {\r\n\r\n      setBodyParam({...bodyParam,sl_type:sl})\r\n     \r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistics/dc/browseWip\",\r\n        params,\r\n        bodyParam,\r\n        \"node\"\r\n      ).then((data) => {\r\n    \r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n          \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleBodyParam(slType)\r\n  \r\n  }, [slType]);\r\n \r\n\r\n  useEffect(() => {\r\n    \r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"SR. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"DC No\",\r\n              width: 120,\r\n            },\r\n         \r\n            {\r\n              field: \"Company\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"sales_order\",\r\n              headerName: \"Sales Order\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"so_date\",\r\n                headerName: \"So Date\",\r\n                width: 120,\r\n                renderCell:(params)=>{\r\n                  return moment(params.row.so_date).format(\"DD/MM/YYYY\");\r\n                }\r\n              },\r\n              {\r\n                field: \"ref_date\",\r\n                headerName: \"Ref Date\",\r\n                width: 120,\r\n                renderCell:(params)=>{\r\n                  return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n                }\r\n              },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"di_no\",\r\n              headerName: \"DI No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"pi_no\",\r\n              headerName: \"PI No.\",\r\n              width: 150,\r\n            },\r\n            \r\n            {\r\n              field: \"dis_through\",\r\n              headerName: \"Dispatch Thr\",\r\n              width: 120,\r\n            }, {\r\n              field: \"Destination\",\r\n              headerName: \"Destination\",\r\n              width: 120,\r\n            }, {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"amount\",\r\n              headerName: \"Amount\",\r\n              width: 120,\r\n            },{\r\n              field: \"mdc_amount\",\r\n              headerName: \"MDC Amount\",\r\n              width: 120,\r\n            },{\r\n              field: \"actual_amount\",\r\n              headerName: \"Actual Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default SlWipBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\slwip\\add.js",["1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst SlWipAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlWipAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\browse.js",["1936","1937"],[],"import { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectedComboMLFBId } from \"../../../_redux/actions/masters/all.action\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst ComboMLFBBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"ComboMlfb/ComboMlfbBrowse\",\r\n      params,\r\n      user_id\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedComboMLFBId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbDelete\", {\r\n      tran_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"mlfb_no\",\r\n              headerName: \"MLFB No.\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Date\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.tran_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.tran_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComboMLFBBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\combomlfb\\addCombo.js",["1938","1939","1940"],[],"import { TextField, Button } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Loader } from \"../../../components/loader\";\r\n\r\nconst AddComboMLFB = ({ onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoading, setDataLoading] = useState(false);\r\n  const [validator, setValidator] = useState(new SimpleReactValidator());\r\n  const selectedComboMLFBIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.comboMLFBId\r\n  );\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  const [mlfbProductList, setProductList] = useState([]);\r\n  const [insertParams, setInsertParams] = useState({\r\n    tran_id: \"0\",\r\n    date: null,\r\n    product_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    user_name: localStorage.getItem(\"userName\"),\r\n    mlfbItems: [],\r\n  });\r\n\r\n  const [selectedParams, setSelectedParams] = useState({\r\n    date: null,\r\n    selectedProduct: \"\",\r\n    selectedMlfb: \"\",\r\n  });\r\n  useEffect(async () => {\r\n    if (selectedComboMLFBIdResponse && mlfbProductList.length > 0) {\r\n      setDataLoading(true);\r\n      await CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbPreview\", {\r\n        tran_id: selectedComboMLFBIdResponse,\r\n      }).then((data) => {\r\n        setSelectedParams({\r\n          ...selectedParams,\r\n          date: new Date(\r\n            data.date.split(\"/\")[1] +\r\n              \"/\" +\r\n              data.date.split(\"/\")[0] +\r\n              \"/\" +\r\n              data.date.split(\"/\")[2]\r\n          ),\r\n          selectedMlfb: mlfbProductList.filter(\r\n            (x) => x.value === data.mlfb_no\r\n          )[0],\r\n        });\r\n        setInsertParams({\r\n          ...insertParams,\r\n          remarks: data.remarks,\r\n          product_id: data.product_id,\r\n          mlfbItems: data.mlfbItems,\r\n          date: data.date,\r\n          tran_id: data.tran_id,\r\n        });\r\n      });\r\n      setDataLoading(false);\r\n    }\r\n  }, [selectedComboMLFBIdResponse, mlfbProductList]);\r\n  const onProductChoose = async () => {\r\n    const tempList = [...insertParams.mlfbItems];\r\n    const indx = tempList.findIndex(\r\n      (x) => x.product_id === selectedParams.selectedProduct?.id\r\n    );\r\n    if (indx > -1) {\r\n      showErrorToast(\"Already selected\");\r\n    } else {\r\n      setLoading(true);\r\n      await CommonController.commonApiCallFilter(\r\n        \"ComboMlfb/ComboMlfbPreviewDetails\",\r\n        {\r\n          product_id: selectedParams.selectedProduct?.id,\r\n        }\r\n      ).then((data) => {\r\n        tempList.push(data);\r\n      });\r\n      setInsertParams({ ...insertParams, mlfbItems: tempList });\r\n      setLoading(false);\r\n      setSelectedParams({ ...selectedParams, selectedProduct: \"\" });\r\n    }\r\n  };\r\n  const insertCombo = async () => {\r\n    if (validator.allValid()) {\r\n      if (insertParams.mlfbItems.length > 0) {\r\n        CommonController.commonApiCallFilter(\r\n          \"ComboMlfb/ComboMlfbInsert\",\r\n          insertParams\r\n        ).then((data) => {\r\n          if (data.valid) {\r\n            showSuccessToast(\"Successfully Saved\");\r\n          } else {\r\n            showErrorToast(\"Something went wrong\");\r\n          }\r\n        });\r\n      } else {\r\n        showErrorToast(\"Please select MLFB Products\");\r\n      }\r\n    } else {\r\n      validator.showMessages();\r\n      // rerender to show messages for the first time\r\n      // you can use the autoForceUpdate option to do this automatically`\r\n      forceUpdate();\r\n    }\r\n  };\r\n  const getProductList = async () => {\r\n    await CommonController.commonApiCallFilter(\r\n      \"Dropdown/GetProductMlfb\",\r\n      {}\r\n    ).then((data) => setProductList(data));\r\n  };\r\n  useEffect(() => {\r\n    getProductList();\r\n  }, []);\r\n  //   const handleDataChange = () => {};\r\n  const handleDateChange = (key, date) => {\r\n    setInsertParams({\r\n      ...insertParams,\r\n      [key]: moment(date).format(\"DD-MM-YYYY\"),\r\n    });\r\n    setSelectedParams({ ...selectedParams, date: date });\r\n  };\r\n  const mlfbColumns = [\r\n    {\r\n      id: \"mlfb_no\",\r\n      label: \"MLFB No\",\r\n    },\r\n    {\r\n      id: \"product_code\",\r\n      label: \"Product Code\",\r\n    },\r\n    {\r\n      id: \"category_name\",\r\n      label: \"Category Name\",\r\n    },\r\n    {\r\n      id: \"p_group_name\",\r\n      label: \"Group Name\",\r\n    },\r\n  ];\r\n  const handleDelete = (row) => {\r\n    const tempList = [...insertParams.mlfbItems];\r\n    const indx = tempList.findIndex((x) => x.product_id === row.product_id);\r\n    if (indx > -1) {\r\n      tempList.splice(indx, 1);\r\n    }\r\n    setInsertParams({ ...insertParams, mlfbItems: tempList });\r\n  };\r\n  return (\r\n    <div className=\"container-fluid mt-5 pt-5\">\r\n      {dataLoading && <Loader />}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n          <DatePicker\r\n            label=\"Date*\"\r\n            value={selectedParams.date}\r\n            format=\"dd-MM-yyyy\"\r\n            onChange={(date) => {\r\n              handleDateChange(\"date\", date);\r\n              setSelectedParams({ ...selectedParams, date: date });\r\n            }}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n          />\r\n          <p className=\"text-danger\">\r\n            {validator.message(\"Date\", selectedParams.date, \"required\")}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={mlfbProductList}\r\n            getOptionLabel={(options) => options.value}\r\n            fullWidth\r\n            value={selectedParams.selectedMlfb}\r\n            onChange={(event, newValue) => {\r\n              setInsertParams({ ...insertParams, product_id: newValue?.id });\r\n              setSelectedParams({ ...selectedParams, selectedMlfb: newValue });\r\n            }}\r\n            size=\"small\"\r\n            renderInput={(params) => (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                {...params}\r\n                label=\"MLFB No.*\"\r\n              />\r\n            )}\r\n          />\r\n          <p className=\"text-danger\">\r\n            {validator.message(\"MLFB\", insertParams.product_id, \"required\")}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            multiline\r\n            label=\"Remarks\"\r\n            value={insertParams.remarks}\r\n            onChange={(event) => {\r\n              setInsertParams({ ...insertParams, remarks: event.target.value });\r\n            }}\r\n          />\r\n          <p className=\"text-danger\">\r\n            {validator.message(\"Remarks\", insertParams.remarks, \"required\")}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-4 d-flex\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo2\"\r\n            options={mlfbProductList}\r\n            getOptionLabel={(options) => options.value}\r\n            fullWidth\r\n            value={selectedParams.selectedProduct}\r\n            onChange={(event, newValue) => {\r\n              setSelectedParams({\r\n                ...selectedParams,\r\n                selectedProduct: newValue,\r\n              });\r\n            }}\r\n            size=\"small\"\r\n            className=\"mr-3\"\r\n            renderInput={(params) => (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                {...params}\r\n                label=\"MLFB Product\"\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={loading}\r\n            onClick={onProductChoose}\r\n            disableElevation\r\n            variant=\"contained\"\r\n          >\r\n            {loading ? (\r\n              <i class=\"fas fa-circle-notch fa-spin text-white\"></i>\r\n            ) : (\r\n              \"Add\"\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <SimpleTable\r\n        columns={mlfbColumns}\r\n        rows={insertParams.mlfbItems}\r\n        onDelete={handleDelete}\r\n      />\r\n      <div className=\"w-100 text-right mt-4\">\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"mr-2\"\r\n          color=\"primary\"\r\n          disableElevation\r\n          onClick={insertCombo}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button\r\n          onClick={() => onClose()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disableElevation\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddComboMLFB;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\addEntry.js",["1941","1942","1943","1944","1945"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\browse.js",["1946","1947","1948","1949","1950","1951"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\addItem.js",["1952","1953"],[],"import {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  CardContent,\r\n  Card,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { buttonLoader, showSuccessToast } from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst selectedValues = {\r\n  editIndex: null,\r\n  category_id: null,\r\n  group_id: null,\r\n  item_id: null,\r\n  description: null,\r\n  mlfb_no: \"\",\r\n  lp_ref: \"\",\r\n  list_price: \"\",\r\n  qty: 1,\r\n  amount: \"\",\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst AddItemGroupMaster = () => {\r\n  const selectedIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.itemGroupId\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataLoading, setDataLoading] = useState(false);\r\n  const [addedItemList, setAddedItemList] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    product_id: \"0\",\r\n    category_id: null,\r\n    p_group_id: null,\r\n    item_id: null,\r\n    description: \"\",\r\n    mlfb_no: \"\",\r\n    uom_id: null,\r\n    list_price: \"\",\r\n    lp_ref: \"\",\r\n    productQtyItem: [],\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n\r\n  const [dropdownList, setDropDownList] = useState({\r\n    categoryNameList: [],\r\n    uomList: [],\r\n    groupNameList: [],\r\n    itemNameList: [],\r\n    descriptionList: [],\r\n  });\r\n\r\n  const [addDropDownList, setAddDropDownList] = useState({\r\n    categoryNameList: [],\r\n    groupNameList: [],\r\n    itemNameList: [],\r\n    descriptionList: [],\r\n  });\r\n\r\n  const [selectedDropDown, setSelectedDropDown] = useState(selectedValues);\r\n\r\n  const [showItemList, setShowItemList] = useState(false);\r\n\r\n  const onItemRemove = (index) => {\r\n    let list = [...addedItemList];\r\n    list.splice(index, 1);\r\n    setAddedItemList(list);\r\n  };\r\n\r\n  useEffect(() => {\r\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemGroupMasterPreview\", {\r\n      product_id: selectedIdResponse ? selectedIdResponse : 0,\r\n    }).then((data) => {\r\n      setDropDownList({\r\n        ...dropdownList,\r\n        categoryNameList: data.categoryList,\r\n        groupNameList: data.groupList,\r\n        itemNameList: data.itemList,\r\n        uomList: data.uomList,\r\n      });\r\n      setAddDropDownList({\r\n        ...addDropDownList,\r\n        categoryNameList: data.categoryList,\r\n      });\r\n    });\r\n  }, [selectedIdResponse]);\r\n\r\n  const getFilterGroup = (event, newValue) => {\r\n    CommonController.commonApiCallFilter(\r\n      \"ItemGroup/GroupItemDescriptionDDLList\",\r\n      {\r\n        category_id: newValue.id,\r\n      }\r\n    ).then((data) => {\r\n      setAddDropDownList({\r\n        ...addDropDownList,\r\n        groupNameList: data.objList.groupList,\r\n        descriptionList: data.objList.descList,\r\n      });\r\n      setSelectedDropDown({ ...selectedDropDown, category_id: newValue });\r\n    });\r\n  };\r\n\r\n  const getFilterItems = (event, newValue) => {\r\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemDescriptionDDLList\", {\r\n      category_id: selectedDropDown.category_id.id,\r\n      group_id: newValue.id,\r\n    }).then((data) => {\r\n      setAddDropDownList({\r\n        ...addDropDownList,\r\n        itemNameList: data.objList.itemList,\r\n        descriptionList: data.objList.descList,\r\n      });\r\n      setSelectedDropDown({ ...selectedDropDown, group_id: newValue });\r\n    });\r\n  };\r\n\r\n  const getFilterDescription = (event, newValue) => {\r\n    CommonController.commonApiCallFilter(\"ItemGroup/DescriptionDDLList\", {\r\n      category_id: selectedDropDown.category_id.id,\r\n      group_id: selectedDropDown.group_id.id,\r\n      item_id: newValue.id,\r\n    }).then((data) => {\r\n      setAddDropDownList({\r\n        ...addDropDownList,\r\n        descriptionList: data.mList.descList,\r\n      });\r\n      setSelectedDropDown({ ...selectedDropDown, item_id: newValue });\r\n    });\r\n  };\r\n\r\n  const getFilterValues = (event, newValue) => {\r\n    CommonController.commonApiCallFilter(\"itemGroup/MlfbLpListPriceObj\", {\r\n      category_id: selectedDropDown.category_id.id,\r\n      group_id: selectedDropDown.group_id.id,\r\n      item_id: selectedDropDown.item_id.id,\r\n      description: newValue.hasOwnProperty(\"description\")\r\n        ? newValue.description\r\n        : newValue.value,\r\n    }).then((data) => {\r\n      setSelectedDropDown({\r\n        ...selectedDropDown,\r\n        description: newValue,\r\n        mlfb_no: data.mList.mlfb_no,\r\n        lp_ref: data.mList.lp_ref,\r\n        list_price: data.mList.list_price,\r\n      });\r\n    });\r\n  };\r\n\r\n  const onItemAdd = () => {\r\n    let selected = { ...selectedDropDown };\r\n    selected.amount = selected.qty * selected.list_price;\r\n    setAddedItemList([...addedItemList, selected]);\r\n    setShowItemList(false);\r\n    setSelectedDropDown(selectedValues);\r\n  };\r\n\r\n  const handleFormData = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleFormDataList = (name, value) => {\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const getItemById = (id, list, key) => {\r\n    const item = list.filter((x) => x[key] === id);\r\n\r\n    return item.length > 0 ? item[0] : null;\r\n  };\r\n\r\n  const onAddItemInsert = () => {\r\n    setLoading(true);\r\n    let tempData = { ...formData };\r\n    let arr = [];\r\n    addedItemList.forEach((element) => {\r\n      let obj = {\r\n        category_id: element.category_id.id,\r\n        group_id: element.group_id.id,\r\n        item_id: element.item_id.id,\r\n        description: element.description.value,\r\n        mlfb_no: element.mlfb_no,\r\n        lp_ref: element.lp_ref,\r\n        list_price: element.list_price,\r\n        qty: element.qty,\r\n        amount: element.amount,\r\n      };\r\n      arr.push(obj);\r\n    });\r\n    tempData.productQtyItem = arr;\r\n    CommonController.commonApiCallFilter(\r\n      \"ItemGroup/ItemGroupMasterInsert\",\r\n      tempData\r\n    ).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(data.msg);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n      {dataLoading && <Loader />}\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-4\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Product ID\"\r\n            disabled\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            name=\"mlfb_no\"\r\n            onChange={handleFormData}\r\n            value={formData.mlfb_no}\r\n            label=\"MLFB No.\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={dropdownList.categoryNameList}\r\n            getOptionLabel={(option) => option.value}\r\n            size=\"small\"\r\n            value={getItemById(\r\n              formData.category_id,\r\n              dropdownList.categoryNameList,\r\n              \"id\"\r\n            )}\r\n            onChange={(event, value) =>\r\n              handleFormDataList(\"category_id\", value.id)\r\n            }\r\n            fullWidth\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Category Name\" />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-4\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={dropdownList.uomList}\r\n            getOptionLabel={(option) => option.value}\r\n            size=\"small\"\r\n            fullWidth\r\n            value={getItemById(formData.uom_id, dropdownList.uomList, \"id\")}\r\n            onChange={(event, value) => handleFormDataList(\"uom_id\", value.id)}\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"UOM\" />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={dropdownList.groupNameList}\r\n            getOptionLabel={(option) => option.value}\r\n            size=\"small\"\r\n            fullWidth\r\n            value={getItemById(\r\n              formData.p_group_id,\r\n              dropdownList.groupNameList,\r\n              \"id\"\r\n            )}\r\n            onChange={(event, value) =>\r\n              handleFormDataList(\"p_group_id\", value.id)\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Group Name\" />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            name=\"list_price\"\r\n            value={formData.list_price}\r\n            onChange={handleFormData}\r\n            label=\"List Price\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={dropdownList.itemNameList}\r\n            getOptionLabel={(option) => option.value}\r\n            size=\"small\"\r\n            fullWidth\r\n            value={getItemById(\r\n              formData.item_id,\r\n              dropdownList.itemNameList,\r\n              \"id\"\r\n            )}\r\n            onChange={(event, value) => handleFormDataList(\"item_id\", value.id)}\r\n            renderInput={(params) => (\r\n              <TextField {...params} variant=\"outlined\" label=\"Item Name\" />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            value={formData.lp_ref}\r\n            label=\"LP Reference\"\r\n            name=\"lp_ref\"\r\n            onChange={handleFormData}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            multiline\r\n            value={formData.description}\r\n            name=\"description\"\r\n            onChange={handleFormData}\r\n            label=\"Description\"\r\n          />\r\n        </div>\r\n      </div>\r\n      {!showItemList && (\r\n        <div className=\"my-4 text-right\">\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"mr-2\"\r\n            color=\"primary\"\r\n            disableElevation\r\n            onClick={() => setShowItemList(true)}\r\n          >\r\n            Add New Item\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <TableContainer className=\"mt-4\" component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Category</StyledTableCell>\r\n              <StyledTableCell>Group </StyledTableCell>\r\n              <StyledTableCell>Item</StyledTableCell>\r\n              <StyledTableCell>Description</StyledTableCell>\r\n              <StyledTableCell>MLFB No</StyledTableCell>\r\n              <StyledTableCell>LP Ref.</StyledTableCell>\r\n              <StyledTableCell>Qty</StyledTableCell>\r\n              <StyledTableCell>List Price</StyledTableCell>\r\n              <StyledTableCell>Amount</StyledTableCell>\r\n              <StyledTableCell>Actions</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {addedItemList.length > 0 ? (\r\n              addedItemList.map((item, index) => {\r\n                return (\r\n                  <TableRow key={item.category_id.id}>\r\n                    {\" \"}\r\n                    <TableCell>{item.category_id.value}</TableCell>\r\n                    <TableCell>{item.group_id.value}</TableCell>\r\n                    <TableCell>{item.item_id.value}</TableCell>\r\n                    <TableCell>\r\n                      {item.description.hasOwnProperty(\"description\")\r\n                        ? item.description.description\r\n                        : item.description.value}\r\n                    </TableCell>\r\n                    <TableCell>{item.mlfb_no}</TableCell>\r\n                    <TableCell>{item.lp_ref}</TableCell>\r\n                    <TableCell>{item.qty}</TableCell>\r\n                    <TableCell>{item.list_price}</TableCell>\r\n                    <TableCell>{item.amount}</TableCell>\r\n                    <TableCell>\r\n                      {\" \"}\r\n                      <ActionButtons\r\n                        onEdit={() => {\r\n                          setSelectedDropDown(addedItemList[index]);\r\n                          setShowItemList(true);\r\n                        }}\r\n                        onDelete={() => onItemRemove(index)}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })\r\n            ) : (\r\n              <TableRow>\r\n                <TableCell colSpan={12} className=\"text-center\">\r\n                  No Items\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {showItemList && (\r\n        <Card className=\"mt-4\">\r\n          <CardContent>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 mb-4\">\r\n                <Autocomplete\r\n                  disablePortal\r\n                  disableClearable\r\n                  id=\"combo-box-demo\"\r\n                  value={selectedDropDown.category_id}\r\n                  options={addDropDownList.categoryNameList}\r\n                  size=\"small\"\r\n                  getOptionLabel={(option) => option.value}\r\n                  fullWidth\r\n                  onChange={getFilterGroup}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      label=\"Category\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <Autocomplete\r\n                  disablePortal\r\n                  disableClearable\r\n                  id=\"combo-box-demo\"\r\n                  value={selectedDropDown.group_id}\r\n                  getOptionLabel={(option) => option.value}\r\n                  options={addDropDownList.groupNameList}\r\n                  size=\"small\"\r\n                  onChange={getFilterItems}\r\n                  fullWidth\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Group\" />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <Autocomplete\r\n                  disablePortal\r\n                  disableClearable\r\n                  id=\"combo-box-demo\"\r\n                  value={selectedDropDown.item_id}\r\n                  options={addDropDownList.itemNameList}\r\n                  getOptionLabel={(option) => option.value}\r\n                  onChange={getFilterDescription}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  renderInput={(params) => (\r\n                    <TextField {...params} variant=\"outlined\" label=\"Item\" />\r\n                  )}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-md-4 mb-4\">\r\n                <Autocomplete\r\n                  disablePortal\r\n                  disableClearable\r\n                  id=\"combo-box-demo\"\r\n                  value={selectedDropDown.description}\r\n                  options={addDropDownList.descriptionList}\r\n                  getOptionLabel={(option) =>\r\n                    option.hasOwnProperty(\"description\")\r\n                      ? option.description\r\n                      : option.value\r\n                  }\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  onChange={getFilterValues}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"outlined\"\r\n                      label=\"Description\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  label=\"MLFB\"\r\n                  fullWidth\r\n                  value={selectedDropDown?.mlfb_no}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  label=\"LP Ref.\"\r\n                  fullWidth\r\n                  value={selectedDropDown?.lp_ref}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  label=\"Qty\"\r\n                  value={selectedDropDown.qty}\r\n                  fullWidth\r\n                  onChange={(e) =>\r\n                    setSelectedDropDown({\r\n                      ...selectedDropDown,\r\n                      qty: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  label=\"List Price\"\r\n                  fullWidth\r\n                  value={selectedDropDown?.list_price}\r\n                  onChange={(e) =>\r\n                    setSelectedDropDown({\r\n                      ...selectedDropDown,\r\n                      list_price: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-md-4 mb-4\">\r\n                <TextField\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  disabled\r\n                  label=\"Amount\"\r\n                  fullWidth\r\n                  value={\r\n                    selectedDropDown.qty !== \"\"\r\n                      ? selectedDropDown.qty * selectedDropDown.list_price\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12 mb-4 text-right\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"mr-2\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={onItemAdd}\r\n                >\r\n                  Submit\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  className=\"mr-2\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  onClick={() => {\r\n                    setShowItemList(false);\r\n                    setSelectedDropDown(selectedValues);\r\n                  }}\r\n                >\r\n                  Close\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n      {buttonLoader(loading, \"Submit\", onAddItemInsert, \"primary\")}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddItemGroupMaster;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\addMaterialCode.js",["1954","1955","1956","1957"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\item Group\\browse.js",["1958","1959"],[],"import { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  selectedItemGroupId,\r\n} from \"../../../_redux/actions/masters/all.action\";\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst ItemGroupBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 0,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"ItemGroup/BrowseItemGroupMaster\",\r\n      params,\r\n      user_id\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedItemGroupId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemGroupMasterDelete\", {\r\n      item_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"category_name\",\r\n              headerName: \"Category\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"p_group_name\",\r\n              headerName: \"Group\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Item\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"mlfb_no\",\r\n              headerName: \"MLFB No.\",\r\n              flex: 0.1,\r\n            },\r\n\r\n            {\r\n              field: \"uom\",\r\n              headerName: \"UOM\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"list_price\",\r\n              headerName: \"List Price\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"lp_ref\",\r\n              headerName: \"LP Ref.\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Datetime\",\r\n              flex: 0.1,\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.product_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.product_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemGroupBrowse;\r\n",[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Material Code\\browse.js",["1960","1961","1962","1963","1964"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\add.js",["1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst RrgpAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RrgpAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\add.js",["1979","1980","1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CourierOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierOutAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\courierOut\\browse.js",["1993","1994","1995","1996","1997","1998","1999","2000","2001","2002"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CourierOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"tran_no\",\r\n              headerName: \"Tran No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            // {\r\n            //   field: \"so_no\",\r\n            //   headerName: \"So No\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              headerName: \"Description\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"box_no\",\r\n              headerName: \"Box No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"no_of_packets\",\r\n              headerName: \"No Of Packets\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n\r\n            // {\r\n            //   field: \"comments\",\r\n            //   headerName: \"Comments\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n          \r\n          ]}  \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierOutBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\browse.js",["2003","2004","2005","2006","2007","2008","2009","2010","2011","2012"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst DeliveryChallanMdcBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/mdc/browsemdc\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          console.log(data)\r\n          setTotalRecords(data.totalrecord);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"D.C No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"so_no\",\r\n              headerName: \"So No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            {\r\n              field: \"party_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"carrier\",\r\n              headerName: \"Carrier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"vehicle\",\r\n              headerName: \"Vehicle No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"value\",\r\n              headerName: \"Value\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"approved\",\r\n              headerName: \"Approved\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"comments\",\r\n              headerName: \"Comments\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryChallanMdcBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\delivery-challan\\mdc\\mdc-add.js",["2013","2014","2015","2016","2017"],[],"import {\r\n  Button,\r\n  TextField,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete,} from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nconst AddDeliveryChallanMdc = ({ challanType }) => {\r\n  const [tableList, settableList] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    dc_no: \"\",\r\n    po_no: \"\",\r\n    po_date: \"\",\r\n    courier: \"\",\r\n    vehicle_no: \"\",\r\n    contact_person: \"\",\r\n    cperson_id: \"\",\r\n    remarks: \"\",\r\n    no_of_box: \"\",\r\n    value: \"\",\r\n    box_no: \"\",\r\n    description: \"\",\r\n    qty: \"\",\r\n   \r\n  });\r\nconst [contactlist, setcontactlist] = useState(null)\r\nconst [saleslist, setsaleslist] = useState(null)\r\n  const [showDIList, setShowDIList] = useState(false);\r\n  const [accountList, setaccountList] = useState([]);\r\n  const [salesOrderList, setsalesOrderList] = useState([])\r\n  const toggleDIList = () => setShowDIList(!showDIList);\r\n  const submitAddBox = () => {\r\n          if (formData.box_no===\"\") {\r\n          showErrorToast(\"Please Enter Box No\");\r\n        }else if (formData.description===\"\") {\r\n          showErrorToast(\"Please Enter description\");\r\n        }else if (formData.qty===\"\") {\r\n          showErrorToast(\"Please Enter Quality\");\r\n         } else{\r\n          settableList([\r\n            ...tableList,\r\n            {\r\n              box_no: formData.box_no,\r\n              description: formData.description,\r\n              qty: formData.qty,\r\n            },\r\n          ]);\r\n          setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n         }\r\n  };\r\n \r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDateChange = (name, date) => {\r\n    setFormData({ ...formData, [name]: date });\r\n  };\r\n \r\n  const handleDeleteTable = (e) => {\r\n    tableList.splice(tableList.indexOf(e), 1);\r\n    settableList([...tableList]);\r\n  };\r\n\r\n  const diListColumn = [\r\n    {\r\n      id: \"box_no\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Box No\",\r\n    },\r\n    {\r\n      id: \"description\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Description\",\r\n    },\r\n    {\r\n      id: \"qty\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Qty\",\r\n    },\r\n  ];\r\n\r\n  const getDCNo = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/generateDc\",\r\n        {},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData({ ...formData, dc_no: data.data.dc_no });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  //Party name\r\n  const getCompanyList = async (search) => {\r\n    // setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/accountlist\",\r\n        { search:search},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n  console.log(data)\r\n        if (data.status === 200) {\r\n          setaccountList(data.result);\r\n          console.log(accountList)\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const getSalesOrder = async (search) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/picksomdc?search=\" + search,\r\n        \"\",\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setsalesOrderList(data.result)\r\n        }\r\n      }).catch(err=>{\r\n        showErrorToast(err.message)\r\n      })\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  //contact list\r\n  const getAccountContactList = async () => {\r\n\r\n    try {\r\n     \r\n      let search=contactlist.company_id;\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/accountcontactlist\",\r\n        { search:search},\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData({\r\n            ...formData,\r\n            cperson_id: data.result.cperson_id,\r\n            contact_person: data.result.cperson_name,\r\n          });\r\n        }else{\r\n         showErrorToast(data.message)\r\n        }\r\n      }).catch(err=>{\r\n        showErrorToast(err)\r\n      })\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const submitMdc = async () => {\r\n    try {\r\n      if (formData.po_no === \"\") {\r\n        showErrorToast(\"Please Enter Po No\");\r\n      }else if (formData.po_date === \"\") {\r\n        showErrorToast(\"Please Enter Po Date\");\r\n      }  else if (tableList.length < 0) {\r\n        showErrorToast(\"Please add box\");\r\n      } else if (formData.remarks === \"\") {\r\n        showErrorToast(\"Please enter remarks\");\r\n      } else if (contactlist.company_name === \"\") {\r\n        showErrorToast(\"Please Select Party Name\");\r\n      } else if (formData.courier === \"\") {\r\n        showErrorToast(\"Please Enter Courier\");\r\n      } else if (formData.vehicle_no === \"\") {\r\n        showErrorToast(\"Please Enter Vehicle NO\");\r\n      } else if (formData.contact_person === \"\") {\r\n        showErrorToast(\"Please Enter Contact Person\");\r\n      } else if (formData.no_of_box === \"\") {\r\n        showErrorToast(\"Please Enter No Of Box\");\r\n      \r\n      } else if (formData.value === \"\") {\r\n        showErrorToast(\"Please Enter Value\");\r\n      \r\n      } else {\r\n        const body = {\r\n          tran_id: \"0\",\r\n          date:moment().format(\"MM/DD/YYYY\"),\r\n          dc_no: formData.dc_no,\r\n          so_id:saleslist.tran_id,\r\n          company_id:contactlist.company_id,\r\n          company_name:contactlist.company_name,\r\n          cperson_id: formData.cperson_id,\r\n          cperson_name: formData.contact_person,\r\n          po_no: formData.po_no,\r\n          po_date: formData.po_date,\r\n          carrier: formData.courier,\r\n          vehicle: formData.vehicle_no,\r\n          remarks: formData.remarks,\r\n          noofbox: formData.no_of_box,\r\n          value: formData.value,\r\n          user_name: localStorage.getItem(\"userName\"),\r\n          manuDcDetail: tableList,\r\n          user_id: localStorage.getItem(\"userId\"),\r\n        };\r\n        await CommonController.commonApiCallFilter(\r\n          \"logistic/mdc/insertmdc\",\r\n          body,\r\n          \"post\",\r\n          \"node\"\r\n        )\r\n          .then((result) => {\r\n            if (result.status === 200) {\r\n              showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n              // window.location.reload();\r\n              settableList([])\r\n              setFormData({\r\n                ...formData,\r\n                date: \"\",\r\n                po_no: \"\",\r\n                po_date: \"\",\r\n                courier: \"\",\r\n                vehicle_no: \"\",\r\n                contact_person: \"\",\r\n                cperson_id: \"\",\r\n                remarks: \"\",\r\n                no_of_box: \"\",\r\n               \r\n                value: \"\",\r\n             \r\n              \r\n              });\r\n              setsaleslist(null)\r\n              setcontactlist(null)\r\n            } else {\r\n              showErrorToast(result.message.code);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            showErrorToast(err);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAccountContactList();\r\n\r\n  }, [contactlist]);\r\n\r\n  useEffect(() => {\r\n    getDCNo();\r\n  }, []);\r\n\r\n \r\n \r\n\r\n  const {\r\n    dc_no,\r\n    po_no,\r\n    courier,\r\n    po_date,\r\n    vehicle_no,\r\n    contact_person,\r\n    remarks,\r\n    no_of_box,\r\n    value,\r\n    box_no,\r\n    description,\r\n    qty,\r\n  } = formData;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Date\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={moment().format(\"MM/DD/YYYY\")}\r\n            size=\"small\"\r\n            name=\"date\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"DC NO.\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={dc_no}\r\n            name={\"dc_no\"}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"PO No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={po_no}\r\n            name=\"po_no\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <DatePicker\r\n            label=\"PO Date\"\r\n            // value={po_date}\r\n            format=\"dd/MM/yyyy\"\r\n            onChange={(date) => handleDateChange(\"po_date\", date)}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            autoOk\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n        <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={accountList}\r\n              fullWidth\r\n              size=\"small\"\r\n              getOptionLabel={(option) =>option.company_name}\r\n              value={contactlist}\r\n              onChange={(e, value) => setcontactlist(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onInput={(e) => {\r\n                    debounce(getCompanyList(e.target.value, 200));\r\n                  }}\r\n                  label=\"Party Name\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          {/* <TextField\r\n            label=\"Party Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={party_name}\r\n            name=\"party_name\"\r\n            // disabled\r\n            onChange={handleChange}\r\n            select\r\n          >\r\n            {accountList.map((val) => (\r\n              <MenuItem key={val.company_id} value={val.company_name}>\r\n                {val.company_name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField> */}\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Courier\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={courier}\r\n            variant=\"outlined\"\r\n            name=\"courier\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Vehicle No\"\r\n            fullWidth\r\n            value={vehicle_no}\r\n            onChange={handleChange}\r\n            name={\"vehicle_no\"}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Contact Person\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={contact_person}\r\n            name={\"contact_person\"}\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            // select\r\n          >\r\n            {/* <MenuItem value=\"ab\">ab</MenuItem> */}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Remarks\"\r\n            value={remarks}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"No Of Box\"\r\n            value={no_of_box}\r\n            name=\"no_of_box\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n        <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={salesOrderList}\r\n              fullWidth\r\n              getOptionLabel={(option) =>option.so_no}\r\n              value={saleslist}\r\n              onChange={(e, value) => setsaleslist(value)}\r\n              sx={{ height:20 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onChange={(e) => {\r\n                    debounce(getSalesOrder(e.target.value));\r\n                  }}\r\n                  label=\"Sales Order\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          {/* <TextField\r\n            label=\"Sales Order\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={sales_order}\r\n            onChange={handleChange}\r\n            name=\"sales_order\"\r\n            size=\"small\"\r\n            select\r\n          >\r\n           {salesOrderList.map((val,i)=>( <MenuItem key={i }value={val.so_no}> {val.so_no}</MenuItem>))}\r\n          </TextField> */}\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Value\"\r\n            fullWidth\r\n            value={value}\r\n            name=\"value\"\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n            multiline\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {tableList.length > 0 ? (\r\n        <SimpleTable\r\n          columns={diListColumn}\r\n          rows={tableList}\r\n          onDelete={handleDeleteTable}\r\n        />\r\n      ) : null}\r\n      <hr />\r\n      <div className=\"container-fluid\">\r\n        {/* <h1>Add Box:</h1> */}\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"Box No\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={box_no}\r\n              variant=\"outlined\"\r\n              name=\"box_no\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 mb-3\">\r\n            <TextField\r\n              label=\"Description\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n              variant=\"outlined\"\r\n              name=\"description\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"Qty\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={qty}\r\n              variant=\"outlined\"\r\n              name=\"qty\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 mb-3 pl-5\">\r\n            <Button\r\n              color=\"primary\"\r\n              // className=\"mr-2\"\r\n              // disableElevation\r\n              variant=\"contained\"\r\n              onClick={submitAddBox}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"float-action-btn\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            onClick={addBox}\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n            Add Box\r\n          </Fab>\r\n        </div> */}\r\n\r\n      <hr />\r\n      <div className=\"w-100 mt-3 text-right\">\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"mr-2\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={submitMdc}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button color=\"primary\" disableElevation variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDeliveryChallanMdc;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\browse.js",["2018","2019","2020","2021","2022","2023","2024","2025","2026","2027"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst JobWorkOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_jwout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n              field: \"jwout_no\",\r\n              headerName: \"JWOUT No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"jwin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Ref Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"Destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Attachement\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobWorkOutBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\job-work\\jobWorkOut\\add.js",["2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst JobWorkOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobWorkOutAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\browse.js",["2042","2043"],[],"import { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectedGodownId } from \"../../../_redux/actions/masters/all.action\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst GodownBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Godown/BrowseGodownMaster\",\r\n      params,\r\n      user_id\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedGodownId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Godown/GodownMasterDelete\", {\r\n      godown_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"godown_name\",\r\n              headerName: \"Godown Name\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"address\",\r\n              headerName: \"Address\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Date\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.godown_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.godown_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GodownBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Enquiry\\browse.js",["2044","2045","2046","2047","2048","2049","2050","2051"],[],"import {\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nconst SalesEnquiryBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  // const handleDateChange = (type, date) => {\r\n  //   setBodyParam({ ...bodyParam, [type]: date });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          \r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesEnquiryBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\addProduct.js",["2052","2053","2054","2055","2056"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\browse.js",["2057","2058","2059","2060","2061","2062","2063","2064"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\issues\\browse.js",["2065","2066","2067","2068","2069","2070","2071","2072"],[],"import {\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nconst SalesIssueBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesIssueBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\quotation\\browse.js",["2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesQuotationBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesQuotationBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\Sales Costing\\browse.js",["2086","2087","2088","2089","2090","2091"],[],"import { TextField, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nconst SalesCostingBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: \"\",\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Costing/SalesCostingBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          \r\n         \r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}       \r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"riv\",\r\n              headerName: \"Costing No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"status_name\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesCostingBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\marketingVisit\\browse.js",["2092","2093","2094","2095","2096","2097","2098","2099","2100","2101"],[],"import {\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesMarketingBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesMarketingBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\godown\\addEntry.js",["2102","2103"],[],"import { TextField, Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {\r\n  buttonLoader,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport useForceUpdate from \"use-force-update\";\r\nimport { useSelector } from \"react-redux\";\r\nconst AddGodown = ({ onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const selectedIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.godownId\r\n  );\r\n  const [validator, setValidator] = useState(new SimpleReactValidator());\r\n\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  const [insertParams, setInsertParams] = useState({\r\n    godown_id: \"0\",\r\n    godown_name: \"\",\r\n    address: \"\",\r\n    user_id: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedIdResponse) {\r\n      CommonController.commonApiCallFilter(\"Godown/GodownMasterPreview\", {\r\n        godown_id: selectedIdResponse,\r\n      }).then((data) => {\r\n        if (data.godown_id) {\r\n          setInsertParams({\r\n            ...insertParams,\r\n            godown_id: data.godown_id,\r\n            godown_name: data.godown_name,\r\n            address: data.address,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    }\r\n  }, [selectedIdResponse]);\r\n\r\n  const insertCombo = async () => {\r\n    if (validator.allValid()) {\r\n      setLoading(true);\r\n      CommonController.commonApiCallFilter(\r\n        \"Godown/GodownMasterInsert\",\r\n        insertParams\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          showSuccessToast(\"Successfully Saved\");\r\n          setLoading(false);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } else {\r\n      validator.showMessages();\r\n      // rerender to show messages for the first time\r\n      // you can use the autoForceUpdate option to do this automatically`\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5 pt-5\">\r\n      {/* {loading && <Loader />} */}\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Godown Name*\"\r\n            value={insertParams.godown_name}\r\n            onChange={(event) => {\r\n              setInsertParams({\r\n                ...insertParams,\r\n                godown_name: event.target.value,\r\n              });\r\n            }}\r\n          />\r\n          <p className=\"text-danger\">\r\n            {validator.message(\r\n              \"Godown Name\",\r\n              insertParams.godown_name,\r\n              \"required\"\r\n            )}\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            size=\"small\"\r\n            multiline\r\n            label=\"Address\"\r\n            value={insertParams.address}\r\n            onChange={(event) => {\r\n              setInsertParams({ ...insertParams, address: event.target.value });\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"w-100 text-right mt-4\">\r\n        <Button\r\n          onClick={() => onClose()}\r\n          variant=\"contained\"\r\n          className=\"mr-2\"\r\n          color=\"primary\"\r\n          disableElevation\r\n        >\r\n          Cancel\r\n        </Button>\r\n        {buttonLoader(loading, \"Save\", insertCombo, \"primary\")}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddGodown;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\soAmedment\\browse.js",["2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesSoAmdBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesSoAmdBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\browse.js",["2117","2118","2119","2120"],[],"import {\r\n  TextField,\r\n  MenuItem,\r\n  ListItem,\r\n  ListItemText,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  List,\r\n  ListItemAvatar,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { Button } from \"@mui/material\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst SupportTicketBrowse = (props) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [attachedFile, setAttachedFile] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    mtran_id: \"\",\r\n    comments: \"\",\r\n    status: \"\",\r\n    attach_file: \"\",\r\n    rit_user: localStorage.getItem(\"userName\"),\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n\r\n  const [empList, setEmpList] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: 1,\r\n    generated_by: \"\",\r\n    status: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"Ticket/SupportTicketBrowse\",\r\n        params,\r\n        bodyParam,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getEmployeeList = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        `Dropdown/GetEmpListInSupport`,\r\n        { user_id: localStorage.getItem(\"userId\") },\r\n        \"get\"\r\n      ).then((data) => {\r\n        setEmpList(data);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getEmployeeList();\r\n  }, []);\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n  const toggleRemarks = () => setRemarksModal(!remarksModal);\r\n  const saveRemarks = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", attachedFile);\r\n      await CommonController.commonApiFile(\r\n        \"Ticket/TicketImageInsert\",\r\n        formdata\r\n      );\r\n      await CommonController.commonApiCallFilter(\r\n        \"Ticket/TicketCommentInsert\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, mtran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Ticket/GetTicketComment\",\r\n      {\r\n        mtran_id: id,\r\n      },\r\n      \"post\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"generated_by\"\r\n              select\r\n              label=\"Generated By\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {empList &&\r\n                empList.map((emp, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={emp.value}>\r\n                      {emp.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"status\"\r\n              select\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"open\"}>Open</MenuItem>\r\n              <MenuItem value={\"close\"}>Close</MenuItem>\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status\"\r\n            onChange={onRemarkChange}\r\n            label=\"Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"comment\"\r\n            onChange={onRemarkChange}\r\n            label=\"Comments*\"\r\n            fullWidth\r\n          />\r\n          <div className=\"form-group mt-3\">\r\n            <label>Upload Attachment</label>\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"files\"\r\n              onChange={(e) => {\r\n                if (e.target.files.length > 0) {\r\n                  setAttachedFile(e.target.files[0]);\r\n                  setRemarks({\r\n                    ...remarks,\r\n                    attach_file: e.target.files[0].name,\r\n                  });\r\n                } else {\r\n                  setAttachedFile(null);\r\n                  setRemarks({\r\n                    ...remarks,\r\n                    attach_file: \"\",\r\n                  });\r\n                }\r\n              }}\r\n              type=\"file\"\r\n            />\r\n          </div>\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      {remark.attach_file !== \"\" ? (\r\n                        <img\r\n                          src={\r\n                            \"https://diagapi.quickgst.in/Support_Attachment/\" +\r\n                            remark.attach_file\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <Avatar>\r\n                          <ImageIcon />\r\n                        </Avatar>\r\n                      )}\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.emp_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.comments}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks === \"\" || remarks.status_id === \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n              hide: true,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"ticket_no\",\r\n              headerName: \"Ticket No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"menu\",\r\n              headerName: \"Menu\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"transaction\",\r\n              headerName: \"Transaction\",\r\n              width: 170,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"priority\",\r\n              headerName: \"Priority\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"details\",\r\n              headerName: \"Details\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"generated_by\",\r\n              headerName: \"Generated By\",\r\n              width: 130,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 170,\r\n            },\r\n            {\r\n              field: \"attachments\",\r\n              headerName: \"Attachments\",\r\n              width: 100,\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"\",\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        Comment\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SupportTicketBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticket\\addTicket.js",["2121","2122","2123"],[],"import { Button, MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  buttonLoader,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport {\r\n  getUserRightList,\r\n} from \"../../../_redux/actions/common.action\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst AddSupportTicket = () => {\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [userRightListArr, setUserRightList] = useState([]);\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const [attachments, setAttachments] = useState({\r\n    attach_file: null,\r\n    attach_file1: null,\r\n    attach_file2: null,\r\n  });\r\n  const [subMenuList, setSubMenuList] = useState([]);\r\n  useEffect(() => {\r\n    dispatch(getUserRightList());\r\n    // dispatch(getUserFilterList());\r\n  }, []);\r\n  // const groupBy = (array, key) => {\r\n  //   // Return the end result\r\n  //   return array.reduce((result, currentValue) => {\r\n  //     // If an array already present for key, push it to the array. Else create an array and push the object\r\n  //     (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n  //       currentValue\r\n  //     );\r\n  //     // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n  //     return result;\r\n  //   }, {}); // empty object is the initial value for result object\r\n  // };\r\n  useEffect(() => {\r\n    if (getuserRightListResponse.length > 0) {\r\n      setUserRightList(getuserRightListResponse);\r\n    }\r\n  }, [getuserRightListResponse]);\r\n  const handleMenuChange = (id) => {\r\n    var tempMenuIndex = userRightListArr.findIndex((x) => x.menu_id === id);\r\n    if (tempMenuIndex > -1) {\r\n      setSubMenuList(userRightListArr[tempMenuIndex].transaction_lst);\r\n    }\r\n    setFormData({\r\n      ...formData,\r\n      menu: userRightListArr[tempMenuIndex].menu_id,\r\n      menu_name: userRightListArr[tempMenuIndex].menu_name,\r\n    });\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    tran_id: \"\",\r\n    ticket_no: \"\",\r\n    date: \"\",\r\n    menu: \"\",\r\n    menu_name: \"\",\r\n    transaction: \"\",\r\n    type: \"\",\r\n    priority: \"\",\r\n    details: \"\",\r\n    attach_file: \"\",\r\n    attach_file1: \"\",\r\n    attach_file2: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n\r\n  const {\r\n    date,\r\n    ticket_no,\r\n    menu,\r\n    transaction,\r\n    details,\r\n\r\n    type,\r\n    priority,\r\n  } = formData;\r\n\r\n  useEffect(() => {\r\n    getSupportTicketData();\r\n  }, []);\r\n\r\n  const getSupportTicketData = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"Ticket/SupportTicketPreview\",\r\n        formData,\r\n        \"post\"\r\n      ).then((data) => {\r\n        setFormData({\r\n          ...formData,\r\n          date: data.date,\r\n          ticket_no: data.ticket_no,\r\n        });\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const handleFormData = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setAttachments({ ...attachments, [e.target.name]: e.target.files[0] });\r\n      setFormData({ ...formData, [e.target.name]: e.target.files[0].name });\r\n    } else {\r\n      setAttachments({ ...attachments, [e.target.name]: null });\r\n      setFormData({ ...formData, [e.target.name]: \"\" });\r\n    }\r\n  };\r\n\r\n  const generateTicket = async () => {\r\n    try {\r\n      if (validateForm()) {\r\n        let formdata = new FormData();\r\n        for (var key in attachments) {\r\n          if (attachments.hasOwnProperty(key) && attachments[key]) {\r\n            formdata.append(key, attachments[key]);\r\n          }\r\n        }\r\n        await CommonController.commonApiFile(\r\n          \"Ticket/TicketImageInsert\",\r\n          formdata\r\n        );\r\n        await CommonController.commonApiCallFilter(\r\n          \"Ticket/SupportTicketInsert\",\r\n          formData\r\n        ).then((data) => {\r\n          if (data.valid) {\r\n            showSuccessToast(\"Ticket Generated Successfully\");\r\n          } else {\r\n            showErrorToast(data.msg);\r\n          }\r\n        });\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (formData.menu === \"\") {\r\n      errors.menu = \"Menu required\";\r\n    } else {\r\n      delete errors.menu;\r\n    }\r\n\r\n    console.log(formData.type);\r\n    if (formData.type === \"\") {\r\n      errors.type = \"Type required\";\r\n    } else {\r\n      delete errors.type;\r\n    }\r\n\r\n    const valid = Object.keys(errors).length === 0 ? true : false;\r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            disabled\r\n            size=\"small\"\r\n            name=\"date\"\r\n            label=\"Date\"\r\n            variant=\"outlined\"\r\n            value={date}\r\n            onChange={handleFormData}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"ticket_no\"\r\n            label=\"Ticket No\"\r\n            disabled\r\n            variant=\"outlined\"\r\n            value={ticket_no}\r\n            onChange={handleFormData}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"generated_by\"\r\n            disabled\r\n            label=\"Generated By\"\r\n            value={localStorage.getItem(\"userName\")}\r\n            variant=\"outlined\"\r\n            onChange={handleFormData}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"menu\"\r\n            select\r\n            label=\"Menu*\"\r\n            value={menu}\r\n            variant=\"outlined\"\r\n            onChange={(e) => {\r\n              handleMenuChange(e.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value={\"\"}>None</MenuItem>\r\n            {userRightListArr.length > 0 &&\r\n              userRightListArr.map((menu, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={menu.menu_id}>\r\n                    {menu.menu_name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </TextField>\r\n          {errors.menu && <p className=\"text-danger mb-0\">{errors.menu}</p>}\r\n        </div>\r\n        <div className=\"col-md-3  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"transaction\"\r\n            select\r\n            label=\"Transaction\"\r\n            value={transaction}\r\n            variant=\"outlined\"\r\n            onChange={handleFormData}\r\n          >\r\n            {subMenuList.length > 0 &&\r\n              subMenuList.map((transaction, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={transaction.transaction_name}>\r\n                    {transaction.transaction_name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-md-3  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"type\"\r\n            select\r\n            label=\"Type*\"\r\n            value={type}\r\n            variant=\"outlined\"\r\n            onChange={handleFormData}\r\n          >\r\n            <MenuItem value={\"New Development\"}>New Development</MenuItem>\r\n            <MenuItem value={\"Modification\"}>Modification</MenuItem>\r\n            <MenuItem value={\"Problem\"}>Problem</MenuItem>\r\n            <MenuItem value={\"Other\"}>Other</MenuItem>\r\n          </TextField>\r\n          {errors.type && <p className=\"text-danger mb-0\">{errors.type}</p>}\r\n        </div>\r\n        <div className=\"col-md-3  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"priority\"\r\n            select\r\n            label=\"Priority\"\r\n            variant=\"outlined\"\r\n            value={priority}\r\n            onChange={handleFormData}\r\n          >\r\n            <MenuItem value={\"High\"}>High</MenuItem>\r\n            <MenuItem value={\"Medium\"}>Medium</MenuItem>\r\n            <MenuItem value={\"Low\"}>Low</MenuItem>\r\n          </TextField>\r\n        </div>\r\n        <div className=\"col-md-12  mb-5\">\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            name=\"details\"\r\n            multiline\r\n            label=\"Details\"\r\n            value={details}\r\n            onChange={handleFormData}\r\n            variant=\"outlined\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-1\">\r\n          <label className=\"font-weight-bold\">Attachment</label>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"attach_file\"\r\n            onChange={handleFileChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"attach_file1\"\r\n            onChange={handleFileChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <input\r\n            type=\"file\"\r\n            name=\"attach_file2\"\r\n            onChange={handleFileChange}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mt-5 text-right\">\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"mr-2\"\r\n            color=\"primary\"\r\n            disableElevation\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {buttonLoader(loading, \"Save\", generateTicket, \"primary\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSupportTicket;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\tcBrowse.js",["2124","2125"],[],"import { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst SupportTicketCommericialBrowse = ({ selectedPreviewId }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"DESC\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    menu: \"\",\r\n    transaction: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"TicketCommercial/TicketCommericialBrowse\",\r\n        params,\r\n        bodyParam,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* {loading && <Loader />} */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={getBrowseListData} />\r\n          <div className=\"col-md-2 \">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleBodyParam}\r\n              name=\"menu\"\r\n              label=\"Menu\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 \">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleBodyParam}\r\n              name=\"transaction\"\r\n              label=\"Transaction\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n              hide: true,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"ticket_date\",\r\n              headerName: \"Ticket Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ticket_no\",\r\n              headerName: \"Ticket No\",\r\n              width: 120,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => selectedPreviewId(param.row.tran_id)}\r\n                  >\r\n                    {param.row.ticket_no}\r\n                  </button>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              field: \"menu\",\r\n              headerName: \"Menu\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"transaction\",\r\n              headerName: \"Transaction\",\r\n              width: 170,\r\n            },\r\n\r\n            {\r\n              field: \"details\",\r\n              headerName: \"Details\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"charges\",\r\n              headerName: \"Charges\",\r\n              width: 130,\r\n            },\r\n\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 170,\r\n            },\r\n            {\r\n              field: \"approved_charges\",\r\n              headerName: \"Approved Charges\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"approved_remarks\",\r\n              headerName: \"Approved Remarks\",\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SupportTicketCommericialBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketCommercial\\addCommericial.js",["2126"],[],"import { Button } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  buttonLoader,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { TablePicker } from \"../../../components/table-picker\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nconst AddTicketCommercial = ({ changeTab, previewId, ...props }) => {\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const togglePicker = () => setShowPicker(!showPicker);\r\n  const [errors, setErrors] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    tran_id: previewId ? previewId : \"0\",\r\n    ticket_id: \"\",\r\n    date: moment().format(\"DD-MM-yyyy\"),\r\n    charges: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (formData.charges === \"\") {\r\n      errors.charges = \"Charges required\";\r\n    } else {\r\n      delete errors.charges;\r\n    }\r\n    if (formData.remarks ===\"\") {\r\n      errors.remarks = \"Remarks required\";\r\n    } else {\r\n      delete errors.remarks;\r\n    }\r\n\r\n    const valid = Object.keys(errors).length === 0 ? true : false;\r\n    setErrors(errors);\r\n    return valid;\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      setLoading(true);\r\n      if (validateForm()) {\r\n        await CommonController.commonApiCallFilter(\r\n          \"TicketCommercial/TicketCommericialInsert\",\r\n          formData,\r\n          \"post\"\r\n        ).then((data) => {\r\n          if (data.valid) {\r\n            showSuccessToast(\"Ticket Commercial Successfully\");\r\n            changeTab(0);\r\n          } else {\r\n            showErrorToast(data.msg);\r\n          }\r\n        });\r\n      }\r\n      setLoading(false);\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const getTicketById = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"TicketCommercial/TicketCommericialPreview\",\r\n        { tran_id: previewId },\r\n        \"post\"\r\n      ).then((data) => {\r\n        setSelectedTicket(data);\r\n        setFormData({\r\n          ...formData,\r\n          charges: data.charges,\r\n          remarks: data.remarks,\r\n          ticket_id: data.ticket_id,\r\n        });\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (previewId) {\r\n      getTicketById();\r\n    }\r\n  }, [previewId]);\r\n\r\n  const newColumns = [\r\n    {\r\n      id: \"id\",\r\n      label: \"Sr. no\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"date\",\r\n      label: \"Date\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"ticket_no\",\r\n      label: \"Ticket No\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"menu\",\r\n      label: \"Menu\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"transaction\",\r\n      label: \"Transaction\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"type\",\r\n      label: \"Type\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"priority\",\r\n      label: \"Priority\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"details\",\r\n      label: \"Details\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"generated_by\",\r\n      label: \"Generated By\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n    {\r\n      id: \"status\",\r\n      label: \"Status\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n    },\r\n  ];\r\n\r\n  const handlePickTicket = (ticket) => {\r\n    setFormData({ ...formData, ticket_id: String(ticket.id) });\r\n    setSelectedTicket(ticket);\r\n    setShowPicker(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12 text-right\">\r\n          {!showPicker && (\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={togglePicker}\r\n              disableElevation\r\n              color=\"primary\"\r\n            >\r\n              Pick Ticket\r\n            </Button>\r\n          )}\r\n          {showPicker && (\r\n            <TablePicker\r\n              selectedItems={selectedTicket}\r\n              columns={newColumns}\r\n              type=\"single\"\r\n              url={\"TicketCommercial/PickTicketInCommercial\"}\r\n              onSubmit={handlePickTicket}\r\n              onPickerClose={togglePicker}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Ticket Date</label>\r\n            <p>\r\n              {selectedTicket && selectedTicket.date !== \"\"\r\n                ? selectedTicket.date\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Ticket No.</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.ticket_no !== \"\"\r\n                ? selectedTicket.ticket_no\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Generated By</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.generated_by !== \"\"\r\n                ? selectedTicket.generated_by\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Menu</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.menu !== \"\"\r\n                ? selectedTicket.menu\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Transaction</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.transaction !== \"\"\r\n                ? selectedTicket.transaction\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Type</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.type !== \"\"\r\n                ? selectedTicket.type\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Priority</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.priority !==\"\"\r\n                ? selectedTicket.priority\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Details</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.details !== \"\"\r\n                ? selectedTicket.details\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Date</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-75\"\r\n              value={formData.date}\r\n              disabled\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Charges</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control w-75\"\r\n              name=\"charges\"\r\n              value={formData.charges}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.charges && <p className=\"text-danger\">{errors.charges}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Remarks</label>\r\n            <textarea\r\n              type=\"text\"\r\n              value={formData.remarks}\r\n              name=\"remarks\"\r\n              onChange={handleChange}\r\n              className=\"form-control w-75\"\r\n            ></textarea>\r\n            {errors.remarks && <p className=\"text-danger\">{errors.remarks}</p>}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Approved Date</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.approved_date !== \"\"\r\n                ? selectedTicket.approved_date\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Approved Charges</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.approved_charges !== \"\"\r\n                ? selectedTicket.approved_charges\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label className=\"font-weight-bold\">Approved Remarks</label>\r\n            <p>\r\n              {\" \"}\r\n              {selectedTicket && selectedTicket.approved_remarks !== \"\"\r\n                ? selectedTicket.approved_remarks\r\n                : \"N/A\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12 text-right\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => changeTab(0)}\r\n            className=\"mr-2\"\r\n            disableElevation\r\n          >\r\n            Cancel\r\n          </Button>\r\n          {buttonLoader(loading, \"Submit\", onSubmit, \"primary\")}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTicketCommercial;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\support\\ticketApproval\\browse.js",["2127","2128","2129","2130","2131","2132","2133","2134","2135"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\nconst SupportTicketApprovalBrowse = (props) => {\r\n  const history = useHistory();\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [empList, setEmpList] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const [bodyParam, setBodyParam] = useState({\r\n    menu: \"\",\r\n    transaction: \"\",\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"TicketCommercialApproval/TicketCommercialApprovalBrowse\",\r\n        params,\r\n        bodyParam,\r\n        user_id\r\n      ).then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleBodyParam}\r\n              name=\"menu\"\r\n              label=\"Menu\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 \">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleBodyParam}\r\n              name=\"transaction\"\r\n              label=\"Transaction\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n              hide: true,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"ticket_no\",\r\n              headerName: \"Ticket No\",\r\n              width: 120,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: \"/support/ticket-commercial\",\r\n                        state: {\r\n                          index: 1,\r\n                          id: param.row.tran_id,\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {param.row.ticket_no}\r\n                  </button>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              field: \"menu\",\r\n              headerName: \"Menu\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"transaction\",\r\n              headerName: \"Transaction\",\r\n              width: 170,\r\n            },\r\n\r\n            {\r\n              field: \"details\",\r\n              headerName: \"Details\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"charges\",\r\n              headerName: \"Charges\",\r\n              width: 130,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"approved_charges\",\r\n              headerName: \"Approved Charges\",\r\n              width: 170,\r\n            },\r\n            {\r\n              field: \"approved_remarks\",\r\n              headerName: \"Approved Remarks\",\r\n              width: 170,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SupportTicketApprovalBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\browse.js",["2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CourierInvoiceBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierinvoice\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"comp_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierInvoiceBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\returnable-gate-pass\\rrgp\\browse.js",["2147","2148","2149","2150","2151","2152","2153","2154","2155"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst RrgpBrowse = () => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_rgp\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n          setAmountFigures({\r\n            amount: data.amount,\r\n            mdc_amount: data.mdc_amount,\r\n            actual_amount: data.actual_amount,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n              {\r\n                field: \"rrgp_no\",\r\n                headerName: \"RRGP No.\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"rgp_no\",\r\n              headerName: \"RGP No.\",\r\n              width: 120,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"gate_no\",\r\n              headerName: \"Gate No\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"challan_no\",\r\n                headerName: \"Challan No\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"bill_no\",\r\n              headerName: \"Bill No\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"Status\",\r\n            //   headerName: \"Status\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"Attachement\",\r\n            //   headerName: \"Docket No.\",\r\n            //   width: 150,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default RrgpBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\browse.js",["2156","2157","2158","2159","2160","2161","2162","2163","2164","2165"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst MrnPoBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_mrn_po\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n             \r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.po_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.docket_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n\r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MrnPoBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\courier\\invoice\\add.js",["2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CourierInvoiceAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierInvoiceAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\material-receipt-note\\mrn-po\\add.js",["2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst MrnPoAdd = ({ challanType }) => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MrnPoAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\browse.js",["2194","2195","2196","2197","2198","2199","2200","2201","2202","2203"],[],"import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\n// import { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CcrOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_ccrout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n              field: \"ccrout_no\",\r\n              headerName: \"JWOUT No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ccrin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"cperson_name\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_no\",\r\n              headerName: \"Notification No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_date\",\r\n              headerName: \"Notification Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.notification_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"carrier\",\r\n                headerName: \"carrier\",\r\n                width: 120,\r\n              },\r\n              {\r\n                field: \"destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CcrOutBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\logistics\\ccr\\ccrOut\\add.js",["2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217"],[],"import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CcrOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CcrOutAdd;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPos\\browse.js",["2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../../components/loader\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesSlSoPosBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                      \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                      \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesSlSoPosBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slSoPosSummarise\\browse.js",["2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../../components/loader\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesSlSoPosSummariseBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesSlSoPosSummariseBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\slDI\\browse.js",["2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../../components/loader\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SalesSiDiBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesSiDiBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Sales\\salesOrder\\soDetail\\browse.js",["2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269"],[],"import {\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  List,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../../components/loader\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\n\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport moment from \"moment\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\r\nconst SoDetailBrowse = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [remarksModal, setRemarksModal] = useState(false);\r\n  const [remarksList, setRemarksList] = useState(null);\r\n  const [remarkLoading, setRemarkLoading] = useState(false);\r\n  const [markEng, setMarkEng] = useState(null);\r\n  const [remarks, setRemarks] = useState({\r\n    status_id: \"\",\r\n    remarks: \"\",\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"desc\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_All: \"1\",\r\n    company_name: \"\",\r\n    type: \"all\",\r\n    status: \"all\",\r\n    mark_engg: \"\",\r\n    fromDate: null,\r\n    toDate: null,\r\n  });\r\n\r\n  const toggleRemarks = () => {\r\n    setRemarksModal(!remarksModal);\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"Sales/SalesEnquiryBrowse\",\r\n      params,\r\n      bodyParam\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const getRemarkList = async (id) => {\r\n    setRemarks({ ...remarks, tran_id: id });\r\n    setRemarkLoading(true);\r\n    await CommonController.commonApiCallFilter(\r\n      \"Sales/CloseSalesEnquiry\",\r\n      {\r\n        enquiry_id: id,\r\n      },\r\n      \"get\"\r\n    )\r\n      .then((data) => {\r\n        setRemarksList(data);\r\n        setRemarksModal(true);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setRemarkLoading(false);\r\n  };\r\n\r\n  const getMarkEngList = () => {\r\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\r\n      (data) => setMarkEng(data.employeeList)\r\n    );\r\n  };\r\n\r\n  const onRemarkChange = (event) => {\r\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setBodyParam({ ...bodyParam, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    getMarkEngList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, getuserRightListResponse, bodyParam]);\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedEmployeeId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      employee_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        getBrowseListData();\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveRemarks = () => {\r\n    setLoading(true);\r\n    try {\r\n      CommonController.commonApiCallFilter(\r\n        \"Sales/UpdateSalesEnquiryRemarks\",\r\n        remarks\r\n      ).then((data) => {\r\n        if (data.valid) {\r\n          getBrowseListData();\r\n          showSuccessToast(\"Remarks Updated Successfully\");\r\n          setRemarksModal(false);\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(\"Something went wrong\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleParams(e);\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={bodyParam.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={bodyParam.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  handleBodyParam(e);\r\n                }\r\n              }}\r\n              name=\"party_name\"\r\n              label=\"Company Name\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              name=\"type\"\r\n              select\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\r\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\r\n              <MenuItem value={\"service\"}>Service</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"status\"\r\n              label=\"Status\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"all\"}>All</MenuItem>\r\n              <MenuItem value={\"spares\"}>Close</MenuItem>\r\n              <MenuItem value={\"spares\"}>Open</MenuItem>\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-2 mt-3\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onChange={(e) => {\r\n                handleBodyParam(e);\r\n              }}\r\n              select\r\n              name=\"mark_engg\"\r\n              label=\"Marketing Eng.\"\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value={\"\"}>None</MenuItem>\r\n              {markEng &&\r\n                markEng.map((eng, indx) => {\r\n                  return (\r\n                    <MenuItem value={eng.value} key={indx}>\r\n                      {eng.value}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </TextField>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Update remarks modal */}\r\n\r\n      <Dialog\r\n        open={remarksModal}\r\n        fullWidth\r\n        onClose={toggleRemarks}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className=\"mb-4\"\r\n            size=\"small\"\r\n            fullWidth\r\n            id=\"select-1\"\r\n            select\r\n            name=\"status_id\"\r\n            onChange={onRemarkChange}\r\n            label=\"Enquiry Status*\"\r\n          >\r\n            <MenuItem value={\"0\"}>Close</MenuItem>\r\n            <MenuItem value={\"1\"}>Open</MenuItem>\r\n          </TextField>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            multiline\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={onRemarkChange}\r\n            label=\"Remarks*\"\r\n            fullWidth\r\n          />\r\n          <List>\r\n            {remarksList &&\r\n              remarksList.length > 0 &&\r\n              remarksList.map((remark, index) => {\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemAvatar>\r\n                      <Avatar>\r\n                        <ImageIcon />\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={remark.user_name}\r\n                      secondary={\r\n                        <p className=\"mb-0\">\r\n                          {remark.remarks}{\" \"}\r\n                          <span className=\"float-right\">{remark.datetime}</span>\r\n                        </p>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </List>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={toggleRemarks} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button\r\n            onClick={saveRemarks}\r\n            disabled={\r\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\r\n            }\r\n            color=\"primary\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              width: 80,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\r\n              },\r\n            },\r\n            {\r\n              field: \"enquiry_no\",\r\n              headerName: \"Enquiry No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp Id\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"type\",\r\n              headerName: \"Type\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"priority_name\",\r\n              headerName: \"Priority Name\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"reference_name\",\r\n              headerName: \"Reference\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"employee_name\",\r\n              headerName: \"Employee Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"mark_engg\",\r\n              headerName: \"Marketing Eng.\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n              renderCell: (param) => {\r\n                return (\r\n                  <>\r\n                    {remarkLoading ? (\r\n                      <img src=\"/asset/images/circle.gif\" width={20} />\r\n                    ) : (\r\n                      <Button\r\n                        className=\"text-lowercase\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          getRemarkList(param.row.tran_id);\r\n                        }}\r\n                      >\r\n                        {param.row.remarks}\r\n                      </Button>\r\n                    )}\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onPreview={\r\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onEdit={\r\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\r\n                    \"True\"\r\n                      ? () => handleEdit(params.row.id)\r\n                      : null\r\n                  }\r\n                  onDelete={\r\n                    getBrowseUserRight(getuserRightListResponse)\r\n                      ?.delete_right == \"True\"\r\n                      ? () => handleDeleteRow(params.row.id)\r\n                      : null\r\n                  }\r\n                />\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          //components={{\r\n          //Pagination: CustomPagination,\r\n          //NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SoDetailBrowse;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\index.js",["2270","2271","2272","2273","2274","2275","2276","2277"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\index.js",["2278","2279","2280","2281"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\index.js",["2282","2283","2284","2285","2286","2287"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\index.js",["2288","2289","2290"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\index.js",["2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\dateFilter.js",["2305","2306"],[],"import { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CommonController } from \"../_redux/controller/common.controller\";\r\nimport { showErrorToast } from \"./common\";\r\n\r\nconst DateFilter = ({ onDateUpdate }) => {\r\n  const [dateUpdate, setDateUpdate] = useState(0)\r\n  const [dateParams, setDateParams] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    from_date: null,\r\n    to_date: null,\r\n  });\r\n\r\n  const { from_date, to_date } = dateParams;\r\n  const getDateFilter = async () => {\r\n    try {\r\n      let user_id=localStorage.getItem(\"userId\")\r\n      await CommonController.commonApiCallFilter(\r\n        \"user/date_filter\",\r\n        {user_id:user_id},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status===200) {\r\n         const [getDate]=data.data;\r\n         setDateParams({...dateParams,from_date:getDate.start_date,to_date:getDate.end_date\r\n         })\r\n          onDateUpdate();\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const updateDateFilter = async () => {\r\n    try {\r\n      let date = { ...dateParams };\r\n      date.from_date = moment(date.from_date).format(\"MM/DD/yyyy\");\r\n      date.to_date = moment(date.to_date).format(\"MM/DD/yyyy\");\r\n      await CommonController.commonApiCallFilter(\r\n        \"user/insert_date_filter\",\r\n        date,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status===200) {\r\n\r\n          getDateFilter()\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n \r\n\r\n  const handleDateChange = (name, date) => {\r\n    setDateParams({ ...dateParams, [name]: date });\r\n    setDateUpdate(dateUpdate+1);\r\n  };\r\n  useEffect(() => {\r\ngetDateFilter()\r\n  },[])\r\n  \r\n  useEffect(() => {\r\n    if (from_date && to_date) {\r\n      updateDateFilter();\r\n    }\r\n  }, [dateUpdate]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-md-2\">\r\n        <DatePicker\r\n          label=\"From Date\"\r\n          value={from_date}\r\n          format=\"dd/MM/yyyy\"\r\n          onChange={(date) => handleDateChange(\"from_date\", date)}\r\n          animateYearScrolling\r\n          inputVariant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <DatePicker\r\n          label=\"To Date\"\r\n          value={to_date}\r\n          onChange={(date) => handleDateChange(\"to_date\", date)}\r\n          animateYearScrolling\r\n          format=\"dd/MM/yyyy\"\r\n          minDate={from_date}\r\n          inputVariant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DateFilter;\r\n","E:\\reactProject\\diagnosticnew\\src\\components\\table-picker.js",["2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318"],[],"E:\\reactProject\\diagnosticnew\\src\\components\\basic-table.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\action-buttons.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\components\\loader.js",["2319","2320"],[],"import React from \"react\";\r\nimport loaderImg from \"../assets/image/loader.gif\";\r\n\r\nexport const Loader = () => {\r\n  return \"\";\r\n  // <div className=\"custom-loading\">\r\n  //   <div>\r\n  //     <img src={loaderImg} />\r\n  //     {/* <Cu */}\r\n  //     <p>Please wait...</p>\r\n  //   </div>\r\n  // </div>\r\n};\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\contact_person.js",["2321","2322","2323"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\generalInfo.js",["2324","2325","2326"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Accounts_Master\\tnc.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\general.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\employee\\other.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\other.js",["2327"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Product\\general.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\browse.js",["2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\menustructure\\form.js",["2340","2341","2342","2343","2344","2345","2346"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button, MenuItem, Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\n\r\n\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    transaction_id: 0,\r\n    transaction_name: \"\",\r\n    display_name: \"\",\r\n    sequence: null,\r\n    parent_id:null,\r\n    main_form:null,\r\n    level:null\r\n  });\r\n  const [listtransection, setlisttransection] = useState([])\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {...groupValues}\r\n        body.user_id= localStorage.getItem(\"userId\")\r\n  \r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_menu\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const listTransection = async () => {\r\n    try {\r\n\r\n      let body = {\r\n        transaction_id: groupValues.transaction_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/list_transection\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n            setlisttransection(result.data)\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n      listTransection()\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(event.target.value)\r\n    console.log(event.target.name)\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Transaction ID\"\r\n              name=\"transaction_id\"\r\n              disabled\r\n              value={groupValues.transaction_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Display Name\"\r\n              name=\"display_name\"\r\n              value={groupValues.display_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"sequence\"\r\n              value={groupValues.sequence}\r\n              onChange={handleOnChange}\r\n              name=\"sequence\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n            <TextField\r\n              multiline\r\n              label=\"Level\"\r\n              value={groupValues.level}\r\n              onChange={handleOnChange}\r\n              name=\"level\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n            <TextField\r\n            //  id=\"outlined-select-currency\"\r\n             select\r\n             label=\"Parent Id\"\r\n             onChange={handleOnChange}\r\n              name=\"parent_id\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              <option value={groupValues.parent_id}>{groupValues.parent_transaction}</option>\r\n                {listtransection.map(val=>(\r\n                    <option key={val.transaction_id} value={val.transaction_id}>{val.transaction_name}</option>\r\n                ))}\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n          {/* <FormControlLabel control={<Checkbox color=\"primary\" checked={groupValues.main_form ===true}/>} label=\"Main Form\" /> */}\r\n          <FormControlLabel control={<Checkbox color=\"primary\"checked={groupValues.main_form ===true} onChange={(e)=>setGroupValues({...groupValues,main_form:e.target.checked})}/>} label=\"Main Form\" />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\subIndex.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\subIndex.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\index.js",[],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\form.js",["2347","2348","2349","2350"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        status_id:0,\r\n        status_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                status_name: groupValues.status_name,\r\n                status_id: groupValues.status_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_quot\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status ID\" name=\"status_id\"disabled value={groupValues.status_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status Name\" name=\"status_name\" value={groupValues.status_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\quotation\\browse.js",["2351","2352","2353","2354","2355"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\form.js",["2356","2357","2358","2359"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        courier_id:0,\r\n        courier_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                courier_name: groupValues.courier_name,\r\n                courier_id: groupValues.courier_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_courier\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Courier ID\" name=\"courier_id\"disabled value={groupValues.courier_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Courier Name\" name=\"courier_name\" value={groupValues.courier_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\courier\\browse.js",["2360","2361","2362","2363","2364"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\form.js",["2365","2366","2367","2368"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        group_id:0,\r\n        group_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                group_name: groupValues.group_name,\r\n                group_id: groupValues.group_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_group\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"group_id\" disabled value={groupValues.group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"group_name\" value={groupValues.group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\group\\browse.js",["2369","2370","2371"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\browse.js",["2372","2373","2374","2375","2376","2377"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\pincode\\form.js",["2378","2379","2380","2381"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nconst AddOrEditPincode = (props) => {\r\n    const [formValues , setFormValues] = useState({\r\n        pin_code_id:0,\r\n        pin_code_no:\"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        district:\"\",\r\n        description:\"\",\r\n\r\n    });\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n    const insertForm=async()=>{\r\n        try{\r\n          let body={\r\n            user_name: localStorage.getItem(\"userName\"),\r\n            user_id: localStorage.getItem(\"userId\"),\r\n            description:formValues.description,\r\n            pin_code_id:formValues.pin_code_id,\r\n            pin_code_no:formValues.pin_code_no,\r\n            city:formValues.city,\r\n            state:formValues.state,\r\n            district:formValues.district,\r\n          }\r\n    \r\n    await CommonController.commonApiCallFilter(\r\n        \"master/insert_pincode\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n    \r\n    ).then(result=>{\r\n        if(result.status==200){\r\n            showSuccessToast(result.message)\r\n            props.onClose(0);\r\n        }})\r\n        }catch(err){\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n   useEffect(() => {\r\n    if(props.editData){\r\n            setFormValues(props.editData)\r\n    }\r\n        },[props.editData]);\r\n         const onSave = () => {\r\n            insertForm()\r\n        }\r\n    const handleOnChange = (event) => {\r\n        setFormValues({...formValues,\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n\r\n        props.onClose(0);\r\n    }\r\n  \r\n//     useEffect(() => {\r\n//         console.log(updatePincodeInfoResponse)\r\n//         if(updatePincodeInfoResponse){\r\n//              setMessage({...showMessage,\r\n//                 type:updatePincodeInfoResponse.valid ? \"success\" : \"error\",\r\n//                 msg:updatePincodeInfoResponse.valid ? getPincodeInfo ? \"Pincode updated successfully\" : \"Pincode Saved successfully\" : \"Something went wrong\"\r\n//             });\r\n//             setTimeout(() => {\r\n//                 setMessage({\r\n//                     type:\"\",\r\n//                     msg:\"\"\r\n//                 });\r\n//                 props.onClose(0);\r\n//             }, 2000);\r\n//             dispatch(clearPincodeInfoResponse());\r\n//         }\r\n//     },[updatePincodeInfoResponse]);\r\n// // \r\n\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-4 mb-3\">\r\n                    <TextField label=\"Pincode ID\" type=\"number\"disabled name=\"pin_code_id\" value={formValues.pin_code_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4 mb-3\">\r\n                    <TextField label=\"Pincode\" type=\"number\" name=\"pin_code_no\" value={formValues.pin_code_no} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"City\" name=\"city\" value={formValues.city} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"State\" name=\"state\" value={formValues.state} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"District\" name=\"district\" value={formValues.district} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" name=\"description\" value={formValues.description} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div> */}\r\n                 \r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                   {formValues.type==\"preview\"?\"\": <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AddOrEditPincode;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\browse.js",["2382","2383","2384","2385","2386"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\rating\\form.js",["2387","2388","2389","2390"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    rating_id: 0,\r\n    rating_name: \"\",\r\n    description: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_name: localStorage.getItem(\"userName\"),\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        description: groupValues.description,\r\n        rating_name: groupValues.rating_name,\r\n        rating_id: groupValues.rating_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_rating\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Rating ID\"\r\n              name=\"rating_id\"\r\n              disabled\r\n              value={groupValues.rating_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Rating Name\"\r\n              name=\"rating_name\"\r\n              value={groupValues.rating_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"Description\"\r\n              value={groupValues.description}\r\n              onChange={handleOnChange}\r\n              name=\"description\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\browse.js",["2391","2392","2393","2394","2395"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\form.js",["2396","2397","2398","2399"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        department_id:0,\r\n        department_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                department_name: groupValues.department_name,\r\n                department_id: groupValues.department_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_department\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Department ID\" name=\"department_id\" disabled value={groupValues.department_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Department Name\" name=\"department_name\" value={groupValues.department_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\designation\\form.js",["2400","2401","2402","2403"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        designation_id:0,\r\n        designation_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                designation_name: groupValues.designation_name,\r\n                designation_id: groupValues.designation_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_designation\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Designation ID\" name=\"designation_id\"disabled value={groupValues.designation_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Designation Name\" name=\"designation_name\" value={groupValues.designation_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\department\\browse.js",["2404","2405","2406","2407","2408"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\browse.js",["2409","2410","2411","2412","2413"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\form.js",["2414","2415","2416","2417"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        se_id:0,\r\n        engg_name: \"\",\r\n        roll_no: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                roll_no: groupValues.roll_no,\r\n                engg_name: groupValues.engg_name,\r\n                se_id: groupValues.se_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_siemens\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Siemens ID\" name=\"se_id\" disabled value={groupValues.se_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Roll No\" name=\"roll_no\" value={groupValues.roll_no} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Engg Name\" value={groupValues.engg_name} onChange={handleOnChange} name=\"engg_name\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\region\\form.js",["2418","2419","2420"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        region_id:0,\r\n        region_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                region_name: groupValues.region_name,\r\n                region_id: groupValues.region_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_region\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.editData) {\r\n            setGroupValues(props.editData);\r\n          }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Region ID\" name=\"region_id\" disabled value={groupValues.region_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Region Name\" name=\"region_name\" value={groupValues.region_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type === \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\siemens\\browse.js",["2421","2422","2423","2424","2425"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\browse.js",["2426","2427","2428","2429","2430"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\Account\\supply-item\\form.js",["2431","2432","2433","2434"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        item_id:0,\r\n        item_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                item_name: groupValues.item_name,\r\n                item_id: groupValues.item_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_supply\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.editData) {\r\n            setGroupValues(props.editData);\r\n          }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Supply Item ID\" name=\"item_id\" disabled value={groupValues.item_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Supply Item Name\" name=\"item_name\" value={groupValues.item_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\browse.js",["2435","2436","2437","2438","2439"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\browse.js",["2440","2441","2442","2443","2444"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\type\\form.js",["2445","2446","2447","2448"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_type_id:0,\r\n        enq_type: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_type: groupValues.enq_type,\r\n                enq_type_id: groupValues.enq_type_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_type\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Type ID\" name=\"enq_type_id\"disabled value={groupValues.enq_type_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Type Name\" name=\"enq_type\" value={groupValues.enq_type} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\form.js",["2449","2450","2451","2452"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        status_id:0,\r\n        status_name: \"\",\r\n        description: \"\"\r\n\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                status_name: groupValues.status_name,\r\n                status_id: groupValues.status_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_status\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status ID\" name=\"status_id\" value={groupValues.status_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status Name\" name=\"status_name\" value={groupValues.status_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\status\\browse.js",["2453","2454","2455","2456","2457"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\reference\\form.js",["2458","2459","2460","2461"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_ref_id:0,\r\n        enq_ref: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_ref: groupValues.enq_ref,\r\n                enq_ref_id: groupValues.enq_ref_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_reference\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Reference ID\" name=\"enq_ref_id\" value={groupValues.enq_ref_id} disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Reference Name\" name=\"enq_ref\" value={groupValues.enq_ref} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\browse.js",["2462","2463","2464","2465","2466"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\category\\form.js",["2467","2468","2469","2470"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    console.log(props.editData)\r\n    const [groupValues, setGroupValues] = useState({\r\n        p_category_id:0,\r\n        p_category_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                p_category_name: groupValues.p_category_name,\r\n                p_category_id: groupValues.p_category_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_category\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Category ID\" name=\"p_category_id\"disabled value={groupValues.p_category_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Category Name\" name=\"p_category_name\" value={groupValues.p_category_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\browse.js",["2471","2472","2473","2474","2475"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\form.js",["2476","2477","2478","2479"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_priority_id:0,\r\n        enq_priority: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_priority: groupValues.enq_priority,\r\n                enq_priority_id: groupValues.enq_priority_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_priority\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Priority ID\" name=\"enq_priority_id\"disabled value={groupValues.enq_priority_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Priority Name\" name=\"enq_priority\" value={groupValues.enq_priority} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\enquiry\\priority\\browse.js",["2480","2481","2482","2483","2484"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\browse.js",["2485","2486","2487","2488","2489"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\browse.js",["2490","2491","2492","2493","2494"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\group\\form.js",["2495","2496","2497","2498"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        p_group_id:0,\r\n        p_group_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                p_group_name: groupValues.p_group_name,\r\n                p_group_id: groupValues.p_group_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_pgroup\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"p_group_id\"disabled value={groupValues.p_group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"p_group_name\" value={groupValues.p_group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\unit\\form.js",["2499","2500","2501","2502"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        uom_id:0,\r\n        uom: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                uom: groupValues.uom,\r\n                uom_id: groupValues.uom_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_unit\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" ID\" name=\"uom_id\" value={groupValues.uom_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" Name\" name=\"uom\" value={groupValues.uom} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\item\\form.js",["2503","2504","2505","2506"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        item_id:0,\r\n        item_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                item_name: groupValues.item_name,\r\n                item_id: groupValues.item_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_item\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Item ID\" name=\"item_id\" value={groupValues.item_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Item Name\" name=\"item_name\" value={groupValues.item_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\browse.js",["2507","2508","2509","2510","2511"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\browse.js",["2512","2513","2514","2515","2516"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\ledger\\form.js",["2517","2518","2519","2520"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        ledger_id:0,\r\n        ledger_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                ledger_name: groupValues.ledger_name,\r\n                ledger_id: groupValues.ledger_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_cos_ledger\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Leader ID\" name=\"ledger_id\"disabled value={groupValues.ledger_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Leader Name\" name=\"ledger_name\" value={groupValues.ledger_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\browse.js",["2521","2522","2523","2524","2525"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\finance\\form.js",["2526","2527","2528","2529"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        finance_id:0,\r\n        finance_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                finance_name: groupValues.finance_name,\r\n                finance_id: groupValues.finance_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_cos_finance\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n       \r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Finance ID\" name=\"finance_id\"disabled value={groupValues.finance_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Finance Name\" name=\"finance_name\" value={groupValues.finance_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\product\\gg\\form.js",["2530","2531","2532","2533"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        gg_id:0,\r\n        gg_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                gg_name: groupValues.gg_name,\r\n                gg_id: groupValues.gg_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_gg\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" ID GG\" name=\"gg_id\" value={groupValues.gg_id} disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" Name GG\" name=\"gg_name\" value={groupValues.gg_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\form.js",["2534","2535","2536","2537"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nimport { SimpleTable } from \"../../../../../components/basic-table\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    tab_id: \"\",\r\n    tab_name: \"\",\r\n    mtab_id:0,\r\n    tabArray: [],\r\n  });\r\n  const [groupTab, setgroupTab] = useState({\r\n    tab_name: \"\",\r\n    sequence: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const tabArrayDelet = (e) => {\r\n    const deleteArraytab={...groupValues}\r\n    deleteArraytab.tabArray.splice(deleteArraytab.tabArray.indexOf(e),1)\r\n    setGroupValues(deleteArraytab)\r\n  };\r\n  const listColumn = [\r\n    {\r\n      id: \"tab_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Tab Name\",\r\n    },\r\n    {\r\n      id: \"sequence\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Sequence\",\r\n    },\r\n  ];\r\n  const submitAddBox = () => {\r\n        let arrayList={...groupValues};\r\n    arrayList.tabArray.push(groupTab);\r\n    setGroupValues(arrayList);\r\n  };\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        mtab_id: groupValues.mtab_id,\r\n        mtab_name: groupValues.tab_name,\r\n        tab_id: groupValues.tab_id,\r\n        tabArray:groupValues.tabArray\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_cos_tab\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Tab ID\"\r\n              name=\"tab_id\"\r\n              value={groupValues.tab_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Tab Name*\"\r\n              name=\"tab_name\"\r\n              value={groupValues.group_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {groupValues.tabArray?.length > 0 ? (\r\n          <SimpleTable\r\n            columns={listColumn}\r\n            rows={groupValues.tabArray}\r\n            onDelete={tabArrayDelet}\r\n          />\r\n        ) : null}\r\n        <hr />\r\n        <div className=\"container-fluid\">\r\n          {/* <h1>Add Box:</h1> */}\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-md-3 mb-3\">\r\n              <TextField\r\n                label=\"Tab Name\"\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setgroupTab({ ...groupTab, tab_name: e.target.value });\r\n                }}\r\n                value={groupTab.tab_name}\r\n                variant=\"outlined\"\r\n                name=\"tab_name\"\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <TextField\r\n                label=\"Sequence\"\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setgroupTab({ ...groupTab, sequence: e.target.value });\r\n                }}\r\n                value={groupTab.sequence}\r\n                variant=\"outlined\"\r\n                name=\"sequence\"\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-3 pl-5\">\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"mr-2\"\r\n                // disableElevation\r\n                variant=\"contained\"\r\n                onClick={submitAddBox}\r\n              >\r\n                Add New\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\browse.js",["2538","2539","2540","2541","2542"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\browse.js",["2543","2544","2545","2546","2547"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\p&f\\form.js",["2548","2549","2550","2551"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        pf_id:0,\r\n        pf_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                pf_name: groupValues.pf_name,\r\n                pf_id: groupValues.pf_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_pf\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Pf ID\" name=\"pf_id\"disabled value={groupValues.pf_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Pf Name\" name=\"pf_name\" value={groupValues.pf_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\costing\\tabs\\browse.js",["2552","2553","2554","2555","2556"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\fright\\form.js",["2557","2558","2559","2560"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\n\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        freight_id:0,\r\n        freight_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                freight_name: groupValues.freight_name,\r\n                freight_id: groupValues.freight_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_freight\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Freight ID\" name=\"freight_id\"disabled value={groupValues.freight_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Freight Name\" name=\"freight_name\" value={groupValues.freight_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\browse.js",["2561","2562","2563","2564","2565"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\boarding\\form.js",["2566","2567","2568","2569"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        boarding_id:0,\r\n        boarding_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                boarding_name: groupValues.boarding_name,\r\n                boarding_id: groupValues.boarding_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_boarding\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Boarding ID\" name=\"boarding_id\"disabled value={groupValues.boarding_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Boarding Name\" name=\"boarding_name\" value={groupValues.boarding_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\browse.js",["2570","2571","2572","2573","2574"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\insurance\\form.js",["2575","2576","2577","2578"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    insurance_id:0,\r\n    insurance_name: \"\",\r\n    description: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_name: localStorage.getItem(\"userName\"),\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        description: groupValues.description,\r\n        insurance_name: groupValues.insurance_name,\r\n        insurance_id: groupValues.insurance_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_sale_insurance\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Insurance ID\"\r\n              disabled\r\n              name=\"insurance_id\"\r\n              value={groupValues.insurance_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Insurance Name\"\r\n              name=\"insurance_name\"\r\n              value={groupValues.insurance_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"Description\"\r\n              value={groupValues.description}\r\n              onChange={handleOnChange}\r\n              name=\"description\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\form.js",["2579","2580","2581","2582"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        octroi_id:0,\r\n        octroi_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                octroi_name: groupValues.octroi_name,\r\n                octroi_id: groupValues.octroi_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_octroi\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Octroi ID\" name=\"octroi_id\"disabled value={groupValues.octroi_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Octroi Name\" name=\"octroi_name\" value={groupValues.octroi_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\octrol\\browse.js",["2583","2584","2585","2586","2587"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\browse.js",["2588","2589","2590"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\browse.js",["2591","2592","2593"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\ldClause\\form.js",["2594","2595","2596","2597"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        ld_id:0,\r\n        ld_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                ld_name: groupValues.ld_name,\r\n                ld_id: groupValues.ld_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_clasue\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Ld Clause ID\" name=\"ld_id\"disabled value={groupValues.ld_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Ld Clause Name\" name=\"ld_name\" value={groupValues.ld_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\conveyance\\form.js",["2598","2599","2600","2601"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        conveyance_id:0,\r\n        conveyance_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                conveyance_name: groupValues.conveyance_name,\r\n                conveyance_id: groupValues.conveyance_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_conveyance\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Conveyance ID\" name=\"conveyance_id\"disabled value={groupValues.conveyance_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Conveyance Name\" name=\"conveyance_name\" value={groupValues.conveyance_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\browse.js",["2602","2603","2604","2605","2606"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\form.js",["2607","2608","2609","2610"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        loading_id:0,\r\n        loading_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                loading_name: groupValues.loading_name,\r\n                loading_id: groupValues.loading_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_loading\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Loading ID\" name=\"loading_id\"disabled value={groupValues.loading_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Loading Name\" name=\"loading_name\" value={groupValues.loading_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\modeOfDispatch\\form.js",["2611","2612","2613","2614"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        mode_of_dispatch_id:0,\r\n        mode_of_dispatch_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                mode_of_dispatch_name: groupValues.mode_of_dispatch_name,\r\n                mode_of_dispatch_id: groupValues.mode_of_dispatch_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_mode\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Mode Of Dispatch ID\" name=\"mode_of_dispatch_id\"disabled value={groupValues.mode_of_dispatch_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Mode Of Dispatch Name\" name=\"mode_of_dispatch_name\" value={groupValues.mode_of_dispatch_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\browse.js",["2615","2616","2617","2618","2619"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\inspection\\form.js",["2620","2621","2622","2623"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        inspection_id: 0,\r\n        inspection_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                inspection_name: groupValues.inspection_name,\r\n                inspection_id: groupValues.inspection_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_inspection\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Inspection ID\" name=\"inspection_id\"disabled value={groupValues.inspection_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Inspection Name\" name=\"inspection_name\" value={groupValues.inspection_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\browse.js",["2624","2625","2626","2627","2628"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\loading\\browse.js",["2629","2630","2631","2632","2633"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\delivery\\form.js",["2634","2635","2636","2637"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        delivery_id:0,\r\n        delivery_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                delivery_name: groupValues.delivery_name,\r\n                delivery_id: groupValues.delivery_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_delivery\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Delivery ID\" name=\"delivery_id\"disabled value={groupValues.delivery_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Delivery Name\" name=\"delivery_name\" value={groupValues.delivery_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\browse.js",["2638","2639","2640","2641","2642"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\paymentTerms\\form.js",["2643","2644","2645","2646"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        payment_id:0,\r\n        payment_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                payment_name: groupValues.payment_name,\r\n                payment_id: groupValues.payment_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_payment\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Payment ID\"disabled name=\"payment_id\" value={groupValues.payment_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Payment Name\" name=\"payment_name\" value={groupValues.payment_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\browse.js",["2647","2648","2649","2650","2651"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\browse.js",["2652","2653","2654","2655","2656"],[],"E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\validity\\form.js",["2657","2658","2659","2660"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        validity_id:0,\r\n        validity_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                validity_name: groupValues.validity_name,\r\n                validity_id: groupValues.validity_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_validity\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Validity ID\" name=\"validity_id\"disabled value={groupValues.validity_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Validity Name\" name=\"validity_name\" value={groupValues.validity_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","E:\\reactProject\\diagnosticnew\\src\\pages\\Master\\Configuration\\salesOrder\\travelCharge\\form.js",["2661","2662","2663","2664"],[],"import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        travel_id:0,\r\n        travel_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                travel_name: groupValues.travel_name,\r\n                travel_id: groupValues.travel_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_travel\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Travel ID\" name=\"travel_id\"disabled value={groupValues.travel_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Travel Name\" name=\"travel_name\" value={groupValues.travel_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;",{"ruleId":"2665","severity":1,"message":"2666","line":3,"column":10,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":18},{"ruleId":"2665","severity":1,"message":"2669","line":4,"column":8,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2670","line":9,"column":3,"nodeType":"2667","messageId":"2668","endLine":9,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2671","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":19},{"ruleId":"2665","severity":1,"message":"2672","line":14,"column":9,"nodeType":"2667","messageId":"2668","endLine":14,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2673","line":16,"column":10,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2674","line":16,"column":22,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":35},{"ruleId":"2665","severity":1,"message":"2675","line":17,"column":10,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2676","line":17,"column":28,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":44},{"ruleId":"2665","severity":1,"message":"2677","line":18,"column":9,"nodeType":"2667","messageId":"2668","endLine":18,"endColumn":33},{"ruleId":"2665","severity":1,"message":"2678","line":6,"column":10,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2679","line":13,"column":21,"nodeType":"2667","messageId":"2668","endLine":13,"endColumn":33},{"ruleId":"2680","severity":1,"message":"2681","line":76,"column":4,"nodeType":"2682","endLine":76,"endColumn":27,"suggestions":"2683"},{"ruleId":"2680","severity":1,"message":"2681","line":98,"column":4,"nodeType":"2682","endLine":98,"endColumn":26,"suggestions":"2684"},{"ruleId":"2685","severity":1,"message":"2686","line":110,"column":8,"nodeType":"2687","endLine":110,"endColumn":50},{"ruleId":"2685","severity":1,"message":"2686","line":144,"column":11,"nodeType":"2687","endLine":144,"endColumn":86},{"ruleId":"2665","severity":1,"message":"2688","line":2,"column":8,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":18},{"ruleId":"2680","severity":1,"message":"2689","line":26,"column":3,"nodeType":"2682","endLine":26,"endColumn":22,"suggestions":"2690"},{"ruleId":"2680","severity":1,"message":"2689","line":35,"column":3,"nodeType":"2682","endLine":35,"endColumn":34,"suggestions":"2691"},{"ruleId":"2665","severity":1,"message":"2692","line":2,"column":117,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":132},{"ruleId":"2665","severity":1,"message":"2693","line":2,"column":134,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":156},{"ruleId":"2665","severity":1,"message":"2694","line":2,"column":145,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":157},{"ruleId":"2665","severity":1,"message":"2695","line":2,"column":159,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":178},{"ruleId":"2665","severity":1,"message":"2696","line":56,"column":15,"nodeType":"2667","messageId":"2668","endLine":56,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2696","line":67,"column":15,"nodeType":"2667","messageId":"2668","endLine":67,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2696","line":77,"column":15,"nodeType":"2667","messageId":"2668","endLine":77,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2697","line":33,"column":15,"nodeType":"2667","messageId":"2668","endLine":33,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2698","line":1,"column":17,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2699","line":1,"column":41,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":48},{"ruleId":"2665","severity":1,"message":"2700","line":7,"column":3,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2669","line":14,"column":8,"nodeType":"2667","messageId":"2668","endLine":14,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2701","line":20,"column":10,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":17},{"ruleId":"2680","severity":1,"message":"2702","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":8,"suggestions":"2703"},{"ruleId":"2680","severity":1,"message":"2704","line":118,"column":6,"nodeType":"2682","endLine":118,"endColumn":69,"suggestions":"2705"},{"ruleId":"2680","severity":1,"message":"2706","line":126,"column":6,"nodeType":"2682","endLine":126,"endColumn":25,"suggestions":"2707"},{"ruleId":"2708","severity":1,"message":"2709","line":17,"column":9,"nodeType":"2687","endLine":21,"endColumn":11},{"ruleId":"2708","severity":1,"message":"2709","line":22,"column":9,"nodeType":"2687","endLine":26,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2710","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2711","line":8,"column":8,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2712","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2713","line":8,"column":8,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":19},{"ruleId":"2665","severity":1,"message":"2714","line":9,"column":8,"nodeType":"2667","messageId":"2668","endLine":9,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2715","line":18,"column":7,"nodeType":"2667","messageId":"2668","endLine":18,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2716","line":20,"column":7,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2717","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2718","line":12,"column":8,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2719","line":17,"column":10,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2720","line":53,"column":9,"nodeType":"2667","messageId":"2668","endLine":53,"endColumn":13},{"ruleId":"2665","severity":1,"message":"2721","line":62,"column":9,"nodeType":"2667","messageId":"2668","endLine":62,"endColumn":19},{"ruleId":"2680","severity":1,"message":"2722","line":108,"column":6,"nodeType":"2682","endLine":108,"endColumn":8,"suggestions":"2723"},{"ruleId":"2680","severity":1,"message":"2724","line":225,"column":59,"nodeType":"2682","endLine":225,"endColumn":72,"suggestions":"2725"},{"ruleId":"2665","severity":1,"message":"2726","line":5,"column":10,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":19},{"ruleId":"2665","severity":1,"message":"2672","line":8,"column":11,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":19},{"ruleId":"2727","severity":1,"message":"2728","line":22,"column":40,"nodeType":"2729","messageId":"2730","endLine":22,"endColumn":42},{"ruleId":"2727","severity":1,"message":"2728","line":14,"column":40,"nodeType":"2729","messageId":"2730","endLine":14,"endColumn":42},{"ruleId":"2665","severity":1,"message":"2718","line":15,"column":8,"nodeType":"2667","messageId":"2668","endLine":15,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2731","line":16,"column":31,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":36},{"ruleId":"2680","severity":1,"message":"2732","line":72,"column":6,"nodeType":"2682","endLine":72,"endColumn":16,"suggestions":"2733"},{"ruleId":"2734","severity":1,"message":"2735","line":23,"column":26,"nodeType":"2736","messageId":"2737","endLine":23,"endColumn":28},{"ruleId":"2734","severity":1,"message":"2735","line":28,"column":26,"nodeType":"2736","messageId":"2737","endLine":28,"endColumn":28},{"ruleId":"2734","severity":1,"message":"2735","line":33,"column":27,"nodeType":"2736","messageId":"2737","endLine":33,"endColumn":29},{"ruleId":"2665","severity":1,"message":"2738","line":4,"column":10,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":22},{"ruleId":"2680","severity":1,"message":"2739","line":45,"column":6,"nodeType":"2682","endLine":45,"endColumn":8,"suggestions":"2740"},{"ruleId":"2680","severity":1,"message":"2739","line":49,"column":6,"nodeType":"2682","endLine":49,"endColumn":17,"suggestions":"2741"},{"ruleId":"2665","severity":1,"message":"2742","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2743","line":2,"column":18,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2744","line":5,"column":10,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2745","line":5,"column":28,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2746","line":5,"column":39,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":47},{"ruleId":"2680","severity":1,"message":"2739","line":60,"column":6,"nodeType":"2682","endLine":60,"endColumn":8,"suggestions":"2747"},{"ruleId":"2680","severity":1,"message":"2739","line":64,"column":6,"nodeType":"2682","endLine":64,"endColumn":17,"suggestions":"2748"},{"ruleId":"2680","severity":1,"message":"2739","line":65,"column":6,"nodeType":"2682","endLine":65,"endColumn":8,"suggestions":"2749"},{"ruleId":"2680","severity":1,"message":"2739","line":69,"column":6,"nodeType":"2682","endLine":69,"endColumn":17,"suggestions":"2750"},{"ruleId":"2680","severity":1,"message":"2739","line":89,"column":6,"nodeType":"2682","endLine":89,"endColumn":8,"suggestions":"2751"},{"ruleId":"2680","severity":1,"message":"2739","line":93,"column":6,"nodeType":"2682","endLine":93,"endColumn":14,"suggestions":"2752"},{"ruleId":"2665","severity":1,"message":"2743","line":12,"column":3,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":11},{"ruleId":"2680","severity":1,"message":"2753","line":105,"column":6,"nodeType":"2682","endLine":105,"endColumn":8,"suggestions":"2754"},{"ruleId":"2665","severity":1,"message":"2755","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":11,"nodeType":"2687","endLine":24,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":11,"nodeType":"2687","endLine":35,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2757","line":8,"column":10,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":28},{"ruleId":"2680","severity":1,"message":"2689","line":28,"column":5,"nodeType":"2682","endLine":28,"endColumn":7,"suggestions":"2758"},{"ruleId":"2685","severity":1,"message":"2756","line":38,"column":11,"nodeType":"2687","endLine":41,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":47,"column":7,"nodeType":"2687","endLine":50,"endColumn":8},{"ruleId":"2685","severity":1,"message":"2756","line":56,"column":11,"nodeType":"2687","endLine":59,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2672","line":7,"column":9,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":11,"nodeType":"2687","endLine":24,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":11,"nodeType":"2687","endLine":35,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":11,"nodeType":"2687","endLine":24,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":11,"nodeType":"2687","endLine":35,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":16,"column":21,"nodeType":"2687","endLine":22,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":27,"column":21,"nodeType":"2687","endLine":33,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2759","line":3,"column":8,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2760","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":19},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":21,"nodeType":"2687","endLine":24,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":21,"nodeType":"2687","endLine":35,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2759","line":3,"column":8,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2760","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":19},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":21,"nodeType":"2687","endLine":24,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":21,"nodeType":"2687","endLine":35,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2761","line":9,"column":11,"nodeType":"2667","messageId":"2668","endLine":9,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":21,"nodeType":"2687","endLine":31,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":36,"column":21,"nodeType":"2687","endLine":47,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":16,"column":21,"nodeType":"2687","endLine":22,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":27,"column":21,"nodeType":"2687","endLine":33,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":21,"column":11,"nodeType":"2687","endLine":27,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":32,"column":11,"nodeType":"2687","endLine":38,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":27,"column":11,"nodeType":"2687","endLine":33,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":41,"column":11,"nodeType":"2687","endLine":47,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2762","line":21,"column":9,"nodeType":"2667","messageId":"2668","endLine":21,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2755","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":16,"column":11,"nodeType":"2687","endLine":22,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":27,"column":11,"nodeType":"2687","endLine":33,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":25,"column":11,"nodeType":"2687","endLine":28,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":39,"column":13,"nodeType":"2687","endLine":42,"endColumn":14},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":21,"nodeType":"2687","endLine":23,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":21,"nodeType":"2687","endLine":34,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2755","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":11,"nodeType":"2687","endLine":23,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":11,"nodeType":"2687","endLine":34,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":16,"column":21,"nodeType":"2687","endLine":22,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":27,"column":21,"nodeType":"2687","endLine":33,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":15,"column":21,"nodeType":"2687","endLine":21,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":26,"column":21,"nodeType":"2687","endLine":32,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2763","line":2,"column":8,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2759","line":4,"column":8,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2764","line":6,"column":8,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":19},{"ruleId":"2665","severity":1,"message":"2760","line":7,"column":8,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":19},{"ruleId":"2685","severity":1,"message":"2756","line":20,"column":11,"nodeType":"2687","endLine":26,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":31,"column":11,"nodeType":"2687","endLine":37,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":21,"nodeType":"2687","endLine":23,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":21,"nodeType":"2687","endLine":34,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":23,"column":11,"nodeType":"2687","endLine":29,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":34,"column":11,"nodeType":"2687","endLine":40,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2765","line":2,"column":8,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2759","line":4,"column":8,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2766","line":6,"column":8,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2760","line":7,"column":8,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":19},{"ruleId":"2685","severity":1,"message":"2756","line":20,"column":21,"nodeType":"2687","endLine":26,"endColumn":22},{"ruleId":"2685","severity":1,"message":"2756","line":31,"column":21,"nodeType":"2687","endLine":37,"endColumn":22},{"ruleId":"2680","severity":1,"message":"2689","line":23,"column":6,"nodeType":"2682","endLine":23,"endColumn":8,"suggestions":"2767"},{"ruleId":"2685","severity":1,"message":"2756","line":34,"column":13,"nodeType":"2687","endLine":37,"endColumn":14},{"ruleId":"2685","severity":1,"message":"2756","line":47,"column":13,"nodeType":"2687","endLine":50,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2672","line":7,"column":9,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":11,"nodeType":"2687","endLine":24,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":11,"nodeType":"2687","endLine":35,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2672","line":7,"column":9,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":18,"column":11,"nodeType":"2687","endLine":24,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":29,"column":11,"nodeType":"2687","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2672","line":6,"column":9,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":11,"nodeType":"2687","endLine":23,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":11,"nodeType":"2687","endLine":34,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2672","line":8,"column":9,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":19,"column":11,"nodeType":"2687","endLine":25,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":30,"column":11,"nodeType":"2687","endLine":36,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2755","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":14,"column":11,"nodeType":"2687","endLine":20,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":25,"column":11,"nodeType":"2687","endLine":31,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2672","line":6,"column":9,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":11,"nodeType":"2687","endLine":23,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":11,"nodeType":"2687","endLine":34,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2768","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2672","line":8,"column":9,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":19,"column":11,"nodeType":"2687","endLine":25,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":30,"column":11,"nodeType":"2687","endLine":36,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2768","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2672","line":8,"column":9,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":19,"column":11,"nodeType":"2687","endLine":25,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":30,"column":11,"nodeType":"2687","endLine":36,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":13,"column":11,"nodeType":"2687","endLine":20,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":25,"column":11,"nodeType":"2687","endLine":32,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":11,"nodeType":"2687","endLine":23,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":11,"nodeType":"2687","endLine":34,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2755","line":2,"column":10,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":19,"column":11,"nodeType":"2687","endLine":25,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":31,"column":13,"nodeType":"2687","endLine":37,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2768","line":5,"column":8,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2672","line":8,"column":9,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":19,"column":11,"nodeType":"2687","endLine":25,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":30,"column":11,"nodeType":"2687","endLine":36,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2672","line":6,"column":9,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":17},{"ruleId":"2685","severity":1,"message":"2756","line":17,"column":11,"nodeType":"2687","endLine":23,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":28,"column":11,"nodeType":"2687","endLine":34,"endColumn":12},{"ruleId":"2734","severity":1,"message":"2769","line":47,"column":71,"nodeType":"2736","messageId":"2737","endLine":47,"endColumn":73},{"ruleId":"2734","severity":1,"message":"2735","line":50,"column":67,"nodeType":"2736","messageId":"2737","endLine":50,"endColumn":69},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2770","line":15,"column":9,"nodeType":"2667","messageId":"2668","endLine":15,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2771","line":39,"column":9,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":24},{"ruleId":"2680","severity":1,"message":"2739","line":79,"column":6,"nodeType":"2682","endLine":79,"endColumn":8,"suggestions":"2772"},{"ruleId":"2680","severity":1,"message":"2739","line":83,"column":6,"nodeType":"2682","endLine":83,"endColumn":25,"suggestions":"2773"},{"ruleId":"2680","severity":1,"message":"2774","line":37,"column":6,"nodeType":"2682","endLine":37,"endColumn":8,"suggestions":"2775"},{"ruleId":"2680","severity":1,"message":"2776","line":57,"column":6,"nodeType":"2682","endLine":57,"endColumn":15,"suggestions":"2777"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2778","line":6,"column":10,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2779","line":97,"column":6,"nodeType":"2682","endLine":97,"endColumn":14,"suggestions":"2780"},{"ruleId":"2680","severity":1,"message":"2739","line":101,"column":6,"nodeType":"2682","endLine":101,"endColumn":25,"suggestions":"2781"},{"ruleId":"2665","severity":1,"message":"2782","line":4,"column":10,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2757","line":22,"column":3,"nodeType":"2667","messageId":"2668","endLine":22,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2783","line":25,"column":3,"nodeType":"2667","messageId":"2668","endLine":25,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2784","line":53,"column":9,"nodeType":"2667","messageId":"2668","endLine":53,"endColumn":29},{"ruleId":"2665","severity":1,"message":"2785","line":314,"column":11,"nodeType":"2667","messageId":"2668","endLine":314,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2785","line":324,"column":11,"nodeType":"2667","messageId":"2668","endLine":324,"endColumn":16},{"ruleId":"2734","severity":1,"message":"2735","line":368,"column":59,"nodeType":"2736","messageId":"2737","endLine":368,"endColumn":61},{"ruleId":"2680","severity":1,"message":"2786","line":388,"column":6,"nodeType":"2682","endLine":388,"endColumn":22,"suggestions":"2787"},{"ruleId":"2680","severity":1,"message":"2788","line":393,"column":6,"nodeType":"2682","endLine":393,"endColumn":8,"suggestions":"2789"},{"ruleId":"2680","severity":1,"message":"2790","line":399,"column":6,"nodeType":"2682","endLine":399,"endColumn":43,"suggestions":"2791"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2800"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2802"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2807"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2808"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2809","line":126,"column":6,"nodeType":"2682","endLine":126,"endColumn":26,"suggestions":"2810"},{"ruleId":"2734","severity":1,"message":"2769","line":134,"column":21,"nodeType":"2736","messageId":"2737","endLine":134,"endColumn":23},{"ruleId":"2734","severity":1,"message":"2769","line":138,"column":21,"nodeType":"2736","messageId":"2737","endLine":138,"endColumn":23},{"ruleId":"2685","severity":1,"message":"2756","line":171,"column":11,"nodeType":"2687","endLine":174,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":179,"column":11,"nodeType":"2687","endLine":182,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":187,"column":11,"nodeType":"2687","endLine":190,"endColumn":12},{"ruleId":"2734","severity":1,"message":"2735","line":245,"column":31,"nodeType":"2736","messageId":"2737","endLine":245,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":245,"column":60,"nodeType":"2736","messageId":"2737","endLine":245,"endColumn":62},{"ruleId":"2680","severity":1,"message":"2739","line":71,"column":6,"nodeType":"2682","endLine":71,"endColumn":27,"suggestions":"2811"},{"ruleId":"2680","severity":1,"message":"2812","line":83,"column":6,"nodeType":"2682","endLine":83,"endColumn":8,"suggestions":"2813"},{"ruleId":"2734","severity":1,"message":"2769","line":93,"column":41,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":43},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":84,"column":9,"nodeType":"2667","messageId":"2668","endLine":84,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":95,"column":6,"nodeType":"2682","endLine":95,"endColumn":8,"suggestions":"2819"},{"ruleId":"2680","severity":1,"message":"2739","line":99,"column":6,"nodeType":"2682","endLine":99,"endColumn":25,"suggestions":"2820"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2821"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2822"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2823"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2824"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":84,"column":9,"nodeType":"2667","messageId":"2668","endLine":84,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":95,"column":6,"nodeType":"2682","endLine":95,"endColumn":8,"suggestions":"2825"},{"ruleId":"2680","severity":1,"message":"2739","line":99,"column":6,"nodeType":"2682","endLine":99,"endColumn":25,"suggestions":"2826"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2827"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2828"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2829"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2830"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2831"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2832"},{"ruleId":"2665","severity":1,"message":"2792","line":3,"column":3,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":11},{"ruleId":"2680","severity":1,"message":"2801","line":140,"column":6,"nodeType":"2682","endLine":140,"endColumn":8,"suggestions":"2833"},{"ruleId":"2734","severity":1,"message":"2735","line":275,"column":36,"nodeType":"2736","messageId":"2737","endLine":275,"endColumn":38},{"ruleId":"2734","severity":1,"message":"2735","line":283,"column":42,"nodeType":"2736","messageId":"2737","endLine":283,"endColumn":44},{"ruleId":"2734","severity":1,"message":"2735","line":288,"column":42,"nodeType":"2736","messageId":"2737","endLine":288,"endColumn":44},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2818","line":86,"column":9,"nodeType":"2667","messageId":"2668","endLine":86,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2779","line":97,"column":6,"nodeType":"2682","endLine":97,"endColumn":14,"suggestions":"2834"},{"ruleId":"2680","severity":1,"message":"2739","line":103,"column":6,"nodeType":"2682","endLine":103,"endColumn":25,"suggestions":"2835"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2836"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2837"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":61,"column":6,"nodeType":"2682","endLine":61,"endColumn":8,"suggestions":"2838"},{"ruleId":"2680","severity":1,"message":"2739","line":65,"column":6,"nodeType":"2682","endLine":65,"endColumn":14,"suggestions":"2839"},{"ruleId":"2665","severity":1,"message":"2679","line":17,"column":21,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":33},{"ruleId":"2680","severity":1,"message":"2840","line":39,"column":13,"nodeType":"2729","endLine":69,"endColumn":4},{"ruleId":"2680","severity":1,"message":"2841","line":69,"column":6,"nodeType":"2682","endLine":69,"endColumn":52,"suggestions":"2842"},{"ruleId":"2680","severity":1,"message":"2809","line":87,"column":6,"nodeType":"2682","endLine":87,"endColumn":26,"suggestions":"2843"},{"ruleId":"2734","severity":1,"message":"2769","line":95,"column":17,"nodeType":"2736","messageId":"2737","endLine":95,"endColumn":19},{"ruleId":"2734","severity":1,"message":"2769","line":98,"column":19,"nodeType":"2736","messageId":"2737","endLine":98,"endColumn":21},{"ruleId":"2685","severity":1,"message":"2756","line":169,"column":11,"nodeType":"2687","endLine":172,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":177,"column":11,"nodeType":"2687","endLine":180,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2844","line":6,"column":8,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":17,"column":7,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":14},{"ruleId":"2734","severity":1,"message":"2735","line":168,"column":59,"nodeType":"2736","messageId":"2737","endLine":168,"endColumn":61},{"ruleId":"2680","severity":1,"message":"2786","line":189,"column":6,"nodeType":"2682","endLine":189,"endColumn":22,"suggestions":"2846"},{"ruleId":"2680","severity":1,"message":"2847","line":193,"column":6,"nodeType":"2682","endLine":193,"endColumn":8,"suggestions":"2848"},{"ruleId":"2680","severity":1,"message":"2790","line":199,"column":6,"nodeType":"2682","endLine":199,"endColumn":26,"suggestions":"2849"},{"ruleId":"2665","severity":1,"message":"2850","line":51,"column":23,"nodeType":"2667","messageId":"2668","endLine":51,"endColumn":37},{"ruleId":"2680","severity":1,"message":"2851","line":108,"column":6,"nodeType":"2682","endLine":108,"endColumn":26,"suggestions":"2852"},{"ruleId":"2727","severity":1,"message":"2853","line":114,"column":52,"nodeType":"2729","messageId":"2730","endLine":114,"endColumn":54},{"ruleId":"2680","severity":1,"message":"2854","line":187,"column":6,"nodeType":"2682","endLine":187,"endColumn":8,"suggestions":"2855"},{"ruleId":"2856","severity":1,"message":"2857","line":328,"column":11,"nodeType":"2667","messageId":"2858","endLine":328,"endColumn":18},{"ruleId":"2856","severity":1,"message":"2857","line":349,"column":11,"nodeType":"2667","messageId":"2858","endLine":349,"endColumn":18},{"ruleId":"2680","severity":1,"message":"2739","line":63,"column":6,"nodeType":"2682","endLine":63,"endColumn":8,"suggestions":"2859"},{"ruleId":"2680","severity":1,"message":"2739","line":67,"column":6,"nodeType":"2682","endLine":67,"endColumn":14,"suggestions":"2860"},{"ruleId":"2665","severity":1,"message":"2861","line":3,"column":10,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":20},{"ruleId":"2734","severity":1,"message":"2735","line":80,"column":59,"nodeType":"2736","messageId":"2737","endLine":80,"endColumn":61},{"ruleId":"2680","severity":1,"message":"2788","line":164,"column":6,"nodeType":"2682","endLine":164,"endColumn":8,"suggestions":"2862"},{"ruleId":"2680","severity":1,"message":"2790","line":170,"column":6,"nodeType":"2682","endLine":170,"endColumn":25,"suggestions":"2863"},{"ruleId":"2680","severity":1,"message":"2786","line":182,"column":6,"nodeType":"2682","endLine":182,"endColumn":22,"suggestions":"2864"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2865"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2866"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2867"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2868"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2869"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2870"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":7,"column":3,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":14,"column":8,"nodeType":"2667","messageId":"2668","endLine":14,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":20,"column":10,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":20,"column":25,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":49,"column":9,"nodeType":"2667","messageId":"2668","endLine":49,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":83,"column":9,"nodeType":"2667","messageId":"2668","endLine":83,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":94,"column":6,"nodeType":"2682","endLine":94,"endColumn":8,"suggestions":"2871"},{"ruleId":"2680","severity":1,"message":"2739","line":98,"column":6,"nodeType":"2682","endLine":98,"endColumn":25,"suggestions":"2872"},{"ruleId":"2665","severity":1,"message":"2793","line":4,"column":3,"nodeType":"2667","messageId":"2668","endLine":4,"endColumn":6},{"ruleId":"2665","severity":1,"message":"2795","line":41,"column":9,"nodeType":"2667","messageId":"2668","endLine":41,"endColumn":21},{"ruleId":"2680","severity":1,"message":"2799","line":266,"column":6,"nodeType":"2682","endLine":266,"endColumn":19,"suggestions":"2873"},{"ruleId":"2680","severity":1,"message":"2801","line":270,"column":6,"nodeType":"2682","endLine":270,"endColumn":8,"suggestions":"2874"},{"ruleId":"2665","severity":1,"message":"2803","line":279,"column":5,"nodeType":"2667","messageId":"2668","endLine":279,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":84,"column":9,"nodeType":"2667","messageId":"2668","endLine":84,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":95,"column":6,"nodeType":"2682","endLine":95,"endColumn":8,"suggestions":"2875"},{"ruleId":"2680","severity":1,"message":"2739","line":99,"column":6,"nodeType":"2682","endLine":99,"endColumn":25,"suggestions":"2876"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2877"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2878"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":61,"column":6,"nodeType":"2682","endLine":61,"endColumn":8,"suggestions":"2879"},{"ruleId":"2680","severity":1,"message":"2739","line":65,"column":6,"nodeType":"2682","endLine":65,"endColumn":14,"suggestions":"2880"},{"ruleId":"2680","severity":1,"message":"2739","line":145,"column":6,"nodeType":"2682","endLine":145,"endColumn":8,"suggestions":"2881"},{"ruleId":"2680","severity":1,"message":"2739","line":149,"column":6,"nodeType":"2682","endLine":149,"endColumn":51,"suggestions":"2882"},{"ruleId":"2734","severity":1,"message":"2735","line":360,"column":31,"nodeType":"2736","messageId":"2737","endLine":360,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":360,"column":58,"nodeType":"2736","messageId":"2737","endLine":360,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":443,"column":23,"nodeType":"2687","endLine":443,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":466,"column":78,"nodeType":"2736","messageId":"2737","endLine":466,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":472,"column":79,"nodeType":"2736","messageId":"2737","endLine":472,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":479,"column":38,"nodeType":"2736","messageId":"2737","endLine":479,"endColumn":40},{"ruleId":"2734","severity":1,"message":"2735","line":66,"column":27,"nodeType":"2736","messageId":"2737","endLine":66,"endColumn":29},{"ruleId":"2680","severity":1,"message":"2809","line":116,"column":6,"nodeType":"2682","endLine":116,"endColumn":26,"suggestions":"2883"},{"ruleId":"2685","severity":1,"message":"2756","line":125,"column":11,"nodeType":"2687","endLine":131,"endColumn":12},{"ruleId":"2685","severity":1,"message":"2756","line":139,"column":11,"nodeType":"2687","endLine":145,"endColumn":12},{"ruleId":"2734","severity":1,"message":"2735","line":183,"column":36,"nodeType":"2736","messageId":"2737","endLine":183,"endColumn":38},{"ruleId":"2665","severity":1,"message":"2738","line":11,"column":10,"nodeType":"2667","messageId":"2668","endLine":11,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2844","line":26,"column":8,"nodeType":"2667","messageId":"2668","endLine":26,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2884","line":223,"column":23,"nodeType":"2667","messageId":"2668","endLine":223,"endColumn":38},{"ruleId":"2665","severity":1,"message":"2885","line":266,"column":9,"nodeType":"2667","messageId":"2668","endLine":266,"endColumn":23},{"ruleId":"2734","severity":1,"message":"2735","line":291,"column":59,"nodeType":"2736","messageId":"2737","endLine":291,"endColumn":61},{"ruleId":"2680","severity":1,"message":"2786","line":311,"column":6,"nodeType":"2682","endLine":311,"endColumn":22,"suggestions":"2886"},{"ruleId":"2680","severity":1,"message":"2887","line":318,"column":6,"nodeType":"2682","endLine":318,"endColumn":8,"suggestions":"2888"},{"ruleId":"2680","severity":1,"message":"2889","line":326,"column":6,"nodeType":"2682","endLine":326,"endColumn":46,"suggestions":"2890"},{"ruleId":"2680","severity":1,"message":"2739","line":142,"column":6,"nodeType":"2682","endLine":142,"endColumn":8,"suggestions":"2891"},{"ruleId":"2680","severity":1,"message":"2739","line":146,"column":6,"nodeType":"2682","endLine":146,"endColumn":51,"suggestions":"2892"},{"ruleId":"2734","severity":1,"message":"2735","line":378,"column":31,"nodeType":"2736","messageId":"2737","endLine":378,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":378,"column":58,"nodeType":"2736","messageId":"2737","endLine":378,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":461,"column":23,"nodeType":"2687","endLine":461,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":484,"column":78,"nodeType":"2736","messageId":"2737","endLine":484,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":490,"column":79,"nodeType":"2736","messageId":"2737","endLine":490,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":38,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2895"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2896"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2897","line":81,"column":9,"nodeType":"2667","messageId":"2668","endLine":81,"endColumn":25},{"ruleId":"2680","severity":1,"message":"2739","line":89,"column":6,"nodeType":"2682","endLine":89,"endColumn":8,"suggestions":"2898"},{"ruleId":"2680","severity":1,"message":"2739","line":93,"column":6,"nodeType":"2682","endLine":93,"endColumn":51,"suggestions":"2899"},{"ruleId":"2734","severity":1,"message":"2735","line":282,"column":78,"nodeType":"2736","messageId":"2737","endLine":282,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":288,"column":79,"nodeType":"2736","messageId":"2737","endLine":288,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":295,"column":38,"nodeType":"2736","messageId":"2737","endLine":295,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2845","line":30,"column":7,"nodeType":"2667","messageId":"2668","endLine":30,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":33,"column":7,"nodeType":"2667","messageId":"2668","endLine":33,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":147,"column":6,"nodeType":"2682","endLine":147,"endColumn":8,"suggestions":"2900"},{"ruleId":"2680","severity":1,"message":"2739","line":151,"column":6,"nodeType":"2682","endLine":151,"endColumn":51,"suggestions":"2901"},{"ruleId":"2734","severity":1,"message":"2735","line":383,"column":31,"nodeType":"2736","messageId":"2737","endLine":383,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":383,"column":58,"nodeType":"2736","messageId":"2737","endLine":383,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":466,"column":23,"nodeType":"2687","endLine":466,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":489,"column":78,"nodeType":"2736","messageId":"2737","endLine":489,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":495,"column":79,"nodeType":"2736","messageId":"2737","endLine":495,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":502,"column":38,"nodeType":"2736","messageId":"2737","endLine":502,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2679","line":17,"column":21,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":33},{"ruleId":"2680","severity":1,"message":"2902","line":45,"column":6,"nodeType":"2682","endLine":45,"endColumn":26,"suggestions":"2903"},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2904"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2905"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2680","severity":1,"message":"2739","line":116,"column":6,"nodeType":"2682","endLine":116,"endColumn":8,"suggestions":"2906"},{"ruleId":"2680","severity":1,"message":"2739","line":119,"column":6,"nodeType":"2682","endLine":119,"endColumn":25,"suggestions":"2907"},{"ruleId":"2708","severity":1,"message":"2709","line":294,"column":25,"nodeType":"2687","endLine":299,"endColumn":27},{"ruleId":"2708","severity":1,"message":"2709","line":408,"column":23,"nodeType":"2687","endLine":408,"endColumn":72},{"ruleId":"2665","severity":1,"message":"2908","line":16,"column":19,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":29},{"ruleId":"2680","severity":1,"message":"2689","line":31,"column":6,"nodeType":"2682","endLine":31,"endColumn":8,"suggestions":"2909"},{"ruleId":"2680","severity":1,"message":"2910","line":89,"column":6,"nodeType":"2682","endLine":89,"endColumn":8,"suggestions":"2911"},{"ruleId":"2680","severity":1,"message":"2739","line":70,"column":6,"nodeType":"2682","endLine":70,"endColumn":8,"suggestions":"2912"},{"ruleId":"2680","severity":1,"message":"2739","line":74,"column":6,"nodeType":"2682","endLine":74,"endColumn":25,"suggestions":"2913"},{"ruleId":"2680","severity":1,"message":"2914","line":93,"column":6,"nodeType":"2682","endLine":93,"endColumn":17,"suggestions":"2915"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2861","line":3,"column":10,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2916","line":5,"column":26,"nodeType":"2667","messageId":"2668","endLine":5,"endColumn":42},{"ruleId":"2665","severity":1,"message":"2917","line":8,"column":10,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2918","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2919","line":23,"column":19,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":29},{"ruleId":"2680","severity":1,"message":"2739","line":75,"column":6,"nodeType":"2682","endLine":75,"endColumn":8,"suggestions":"2920"},{"ruleId":"2680","severity":1,"message":"2739","line":79,"column":6,"nodeType":"2682","endLine":79,"endColumn":25,"suggestions":"2921"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2922","line":16,"column":8,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":23,"column":25,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2923"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2924"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":23,"column":10,"nodeType":"2667","messageId":"2668","endLine":23,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2771","line":52,"column":9,"nodeType":"2667","messageId":"2668","endLine":52,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":89,"column":9,"nodeType":"2667","messageId":"2668","endLine":89,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":8,"suggestions":"2925"},{"ruleId":"2680","severity":1,"message":"2739","line":104,"column":6,"nodeType":"2682","endLine":104,"endColumn":25,"suggestions":"2926"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":17,"column":8,"nodeType":"2667","messageId":"2668","endLine":17,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":24,"column":10,"nodeType":"2667","messageId":"2668","endLine":24,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":24,"column":25,"nodeType":"2667","messageId":"2668","endLine":24,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":53,"column":9,"nodeType":"2667","messageId":"2668","endLine":53,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2927"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2928"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2929"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2930"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2931"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2932"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":10,"column":3,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2815","line":18,"column":8,"nodeType":"2667","messageId":"2668","endLine":18,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2816","line":24,"column":10,"nodeType":"2667","messageId":"2668","endLine":24,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2817","line":24,"column":25,"nodeType":"2667","messageId":"2668","endLine":24,"endColumn":41},{"ruleId":"2665","severity":1,"message":"2771","line":53,"column":9,"nodeType":"2667","messageId":"2668","endLine":53,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2818","line":85,"column":9,"nodeType":"2667","messageId":"2668","endLine":85,"endColumn":20},{"ruleId":"2680","severity":1,"message":"2739","line":96,"column":6,"nodeType":"2682","endLine":96,"endColumn":8,"suggestions":"2933"},{"ruleId":"2680","severity":1,"message":"2739","line":100,"column":6,"nodeType":"2682","endLine":100,"endColumn":25,"suggestions":"2934"},{"ruleId":"2665","severity":1,"message":"2792","line":1,"column":18,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":26},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":28,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":36},{"ruleId":"2665","severity":1,"message":"2793","line":1,"column":49,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":52},{"ruleId":"2665","severity":1,"message":"2794","line":7,"column":10,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2795","line":38,"column":11,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2796","line":39,"column":11,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":23},{"ruleId":"2665","severity":1,"message":"2797","line":66,"column":11,"nodeType":"2667","messageId":"2668","endLine":66,"endColumn":28},{"ruleId":"2665","severity":1,"message":"2798","line":71,"column":11,"nodeType":"2667","messageId":"2668","endLine":71,"endColumn":23},{"ruleId":"2680","severity":1,"message":"2799","line":260,"column":8,"nodeType":"2682","endLine":260,"endColumn":21,"suggestions":"2935"},{"ruleId":"2680","severity":1,"message":"2801","line":264,"column":8,"nodeType":"2682","endLine":264,"endColumn":10,"suggestions":"2936"},{"ruleId":"2665","severity":1,"message":"2803","line":270,"column":9,"nodeType":"2667","messageId":"2668","endLine":270,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2804","line":276,"column":9,"nodeType":"2667","messageId":"2668","endLine":276,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2805","line":277,"column":9,"nodeType":"2667","messageId":"2668","endLine":277,"endColumn":20},{"ruleId":"2665","severity":1,"message":"2806","line":278,"column":9,"nodeType":"2667","messageId":"2668","endLine":278,"endColumn":12},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2937"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2938"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2939"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2940"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2941"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2942"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2665","severity":1,"message":"2746","line":2,"column":3,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2893","line":19,"column":8,"nodeType":"2667","messageId":"2668","endLine":19,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":20,"column":8,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2845","line":35,"column":7,"nodeType":"2667","messageId":"2668","endLine":35,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2894","line":39,"column":7,"nodeType":"2667","messageId":"2668","endLine":39,"endColumn":12},{"ruleId":"2680","severity":1,"message":"2739","line":155,"column":6,"nodeType":"2682","endLine":155,"endColumn":8,"suggestions":"2943"},{"ruleId":"2680","severity":1,"message":"2739","line":159,"column":6,"nodeType":"2682","endLine":159,"endColumn":51,"suggestions":"2944"},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":31,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":391,"column":58,"nodeType":"2736","messageId":"2737","endLine":391,"endColumn":60},{"ruleId":"2708","severity":1,"message":"2709","line":474,"column":23,"nodeType":"2687","endLine":474,"endColumn":72},{"ruleId":"2734","severity":1,"message":"2735","line":497,"column":78,"nodeType":"2736","messageId":"2737","endLine":497,"endColumn":80},{"ruleId":"2734","severity":1,"message":"2735","line":503,"column":79,"nodeType":"2736","messageId":"2737","endLine":503,"endColumn":81},{"ruleId":"2734","severity":1,"message":"2735","line":510,"column":38,"nodeType":"2736","messageId":"2737","endLine":510,"endColumn":40},{"ruleId":"2945","severity":1,"message":"2946","line":23,"column":9,"nodeType":"2947","messageId":"2948","endLine":23,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":26,"column":9,"nodeType":"2947","messageId":"2948","endLine":26,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":29,"column":9,"nodeType":"2947","messageId":"2948","endLine":29,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":32,"column":9,"nodeType":"2947","messageId":"2948","endLine":32,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":35,"column":9,"nodeType":"2947","messageId":"2948","endLine":35,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":38,"column":9,"nodeType":"2947","messageId":"2948","endLine":38,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":41,"column":9,"nodeType":"2947","messageId":"2948","endLine":41,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":44,"column":9,"nodeType":"2947","messageId":"2948","endLine":44,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":39,"column":9,"nodeType":"2947","messageId":"2948","endLine":39,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":42,"column":9,"nodeType":"2947","messageId":"2948","endLine":42,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":45,"column":9,"nodeType":"2947","messageId":"2948","endLine":45,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":48,"column":9,"nodeType":"2947","messageId":"2948","endLine":48,"endColumn":15},{"ruleId":"2665","severity":1,"message":"2949","line":10,"column":10,"nodeType":"2667","messageId":"2668","endLine":10,"endColumn":22},{"ruleId":"2945","severity":1,"message":"2946","line":46,"column":9,"nodeType":"2947","messageId":"2948","endLine":46,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":49,"column":9,"nodeType":"2947","messageId":"2948","endLine":49,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":52,"column":9,"nodeType":"2947","messageId":"2948","endLine":52,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":55,"column":9,"nodeType":"2947","messageId":"2948","endLine":55,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":58,"column":9,"nodeType":"2947","messageId":"2948","endLine":58,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":35,"column":9,"nodeType":"2947","messageId":"2948","endLine":35,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":38,"column":9,"nodeType":"2947","messageId":"2948","endLine":38,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":41,"column":9,"nodeType":"2947","messageId":"2948","endLine":41,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":32,"column":9,"nodeType":"2947","messageId":"2948","endLine":32,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":35,"column":9,"nodeType":"2947","messageId":"2948","endLine":35,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":38,"column":9,"nodeType":"2947","messageId":"2948","endLine":38,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":41,"column":9,"nodeType":"2947","messageId":"2948","endLine":41,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":44,"column":9,"nodeType":"2947","messageId":"2948","endLine":44,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":47,"column":9,"nodeType":"2947","messageId":"2948","endLine":47,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":50,"column":9,"nodeType":"2947","messageId":"2948","endLine":50,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":53,"column":9,"nodeType":"2947","messageId":"2948","endLine":53,"endColumn":15},{"ruleId":"2945","severity":1,"message":"2946","line":56,"column":11,"nodeType":"2947","messageId":"2948","endLine":56,"endColumn":17},{"ruleId":"2945","severity":1,"message":"2946","line":59,"column":13,"nodeType":"2947","messageId":"2948","endLine":59,"endColumn":19},{"ruleId":"2945","severity":1,"message":"2946","line":62,"column":15,"nodeType":"2947","messageId":"2948","endLine":62,"endColumn":21},{"ruleId":"2945","severity":1,"message":"2946","line":65,"column":17,"nodeType":"2947","messageId":"2948","endLine":65,"endColumn":23},{"ruleId":"2945","severity":1,"message":"2946","line":68,"column":19,"nodeType":"2947","messageId":"2948","endLine":68,"endColumn":25},{"ruleId":"2945","severity":1,"message":"2946","line":71,"column":21,"nodeType":"2947","messageId":"2948","endLine":71,"endColumn":27},{"ruleId":"2680","severity":1,"message":"2950","line":69,"column":5,"nodeType":"2682","endLine":69,"endColumn":7,"suggestions":"2951"},{"ruleId":"2680","severity":1,"message":"2952","line":75,"column":6,"nodeType":"2682","endLine":75,"endColumn":18,"suggestions":"2953"},{"ruleId":"2665","severity":1,"message":"2954","line":20,"column":7,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":22},{"ruleId":"2665","severity":1,"message":"2955","line":34,"column":5,"nodeType":"2667","messageId":"2668","endLine":34,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2956","line":37,"column":5,"nodeType":"2667","messageId":"2668","endLine":37,"endColumn":16},{"ruleId":"2665","severity":1,"message":"2957","line":38,"column":5,"nodeType":"2667","messageId":"2668","endLine":38,"endColumn":13},{"ruleId":"2727","severity":1,"message":"2728","line":51,"column":35,"nodeType":"2729","messageId":"2730","endLine":51,"endColumn":37},{"ruleId":"2680","severity":1,"message":"2840","line":143,"column":13,"nodeType":"2729","endLine":162,"endColumn":4},{"ruleId":"2680","severity":1,"message":"2958","line":162,"column":6,"nodeType":"2682","endLine":162,"endColumn":8,"suggestions":"2959"},{"ruleId":"2680","severity":1,"message":"2840","line":164,"column":13,"nodeType":"2729","endLine":182,"endColumn":4},{"ruleId":"2680","severity":1,"message":"2960","line":182,"column":6,"nodeType":"2682","endLine":182,"endColumn":14,"suggestions":"2961"},{"ruleId":"2727","severity":1,"message":"2728","line":268,"column":42,"nodeType":"2729","messageId":"2730","endLine":268,"endColumn":44},{"ruleId":"2734","severity":1,"message":"2735","line":276,"column":41,"nodeType":"2736","messageId":"2737","endLine":276,"endColumn":43},{"ruleId":"2727","severity":1,"message":"2728","line":292,"column":54,"nodeType":"2729","messageId":"2730","endLine":292,"endColumn":56},{"ruleId":"2665","severity":1,"message":"2962","line":1,"column":8,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":13},{"ruleId":"2665","severity":1,"message":"2963","line":2,"column":8,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":17},{"ruleId":"2665","severity":1,"message":"2964","line":3,"column":3,"nodeType":"2667","messageId":"2668","endLine":3,"endColumn":14},{"ruleId":"2665","severity":1,"message":"2743","line":6,"column":3,"nodeType":"2667","messageId":"2668","endLine":6,"endColumn":11},{"ruleId":"2665","severity":1,"message":"2965","line":7,"column":3,"nodeType":"2667","messageId":"2668","endLine":7,"endColumn":9},{"ruleId":"2734","severity":1,"message":"2769","line":132,"column":38,"nodeType":"2736","messageId":"2737","endLine":132,"endColumn":40},{"ruleId":"2734","severity":1,"message":"2769","line":325,"column":29,"nodeType":"2736","messageId":"2737","endLine":325,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2769","line":348,"column":35,"nodeType":"2736","messageId":"2737","endLine":348,"endColumn":37},{"ruleId":"2680","severity":1,"message":"2689","line":19,"column":4,"nodeType":"2682","endLine":19,"endColumn":6,"suggestions":"2966"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2893","line":11,"column":8,"nodeType":"2667","messageId":"2668","endLine":11,"endColumn":24},{"ruleId":"2665","severity":1,"message":"2844","line":12,"column":8,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2967","line":20,"column":10,"nodeType":"2667","messageId":"2668","endLine":20,"endColumn":21},{"ruleId":"2665","severity":1,"message":"2968","line":59,"column":9,"nodeType":"2667","messageId":"2668","endLine":59,"endColumn":29},{"ruleId":"2665","severity":1,"message":"2969","line":62,"column":9,"nodeType":"2667","messageId":"2668","endLine":62,"endColumn":25},{"ruleId":"2665","severity":1,"message":"2970","line":67,"column":9,"nodeType":"2667","messageId":"2668","endLine":67,"endColumn":17},{"ruleId":"2734","severity":1,"message":"2735","line":76,"column":29,"nodeType":"2736","messageId":"2737","endLine":76,"endColumn":31},{"ruleId":"2665","severity":1,"message":"2971","line":88,"column":9,"nodeType":"2667","messageId":"2668","endLine":88,"endColumn":18},{"ruleId":"2734","severity":1,"message":"2735","line":97,"column":29,"nodeType":"2736","messageId":"2737","endLine":97,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":110,"column":6,"nodeType":"2682","endLine":110,"endColumn":14,"suggestions":"2972"},{"ruleId":"2665","severity":1,"message":"2743","line":2,"column":29,"nodeType":"2667","messageId":"2668","endLine":2,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":22,"column":23,"nodeType":"2667","messageId":"2668","endLine":22,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":37,"column":27,"nodeType":"2736","messageId":"2737","endLine":37,"endColumn":29},{"ruleId":"2734","severity":1,"message":"2735","line":58,"column":27,"nodeType":"2736","messageId":"2737","endLine":58,"endColumn":29},{"ruleId":"2680","severity":1,"message":"2974","line":71,"column":6,"nodeType":"2682","endLine":71,"endColumn":22,"suggestions":"2975"},{"ruleId":"2734","severity":1,"message":"2735","line":172,"column":31,"nodeType":"2736","messageId":"2737","endLine":172,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2769","line":185,"column":29,"nodeType":"2736","messageId":"2737","endLine":185,"endColumn":31},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2976"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2977"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":29,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":92,"column":29,"nodeType":"2736","messageId":"2737","endLine":92,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":105,"column":6,"nodeType":"2682","endLine":105,"endColumn":14,"suggestions":"2978"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2814","line":8,"column":3,"nodeType":"2667","messageId":"2668","endLine":8,"endColumn":17},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2979"},{"ruleId":"2665","severity":1,"message":"2973","line":16,"column":26,"nodeType":"2667","messageId":"2668","endLine":16,"endColumn":36},{"ruleId":"2734","severity":1,"message":"2735","line":40,"column":25,"nodeType":"2736","messageId":"2737","endLine":40,"endColumn":27},{"ruleId":"2734","severity":1,"message":"2735","line":110,"column":36,"nodeType":"2736","messageId":"2737","endLine":110,"endColumn":38},{"ruleId":"2734","severity":1,"message":"2769","line":112,"column":35,"nodeType":"2736","messageId":"2737","endLine":112,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2980"},{"ruleId":"2665","severity":1,"message":"2973","line":15,"column":23,"nodeType":"2667","messageId":"2668","endLine":15,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":34,"column":27,"nodeType":"2736","messageId":"2737","endLine":34,"endColumn":29},{"ruleId":"2734","severity":1,"message":"2735","line":108,"column":31,"nodeType":"2736","messageId":"2737","endLine":108,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2769","line":121,"column":29,"nodeType":"2736","messageId":"2737","endLine":121,"endColumn":31},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2981"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2982"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2983"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2984"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2985"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2986"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2987"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":13,"column":25,"nodeType":"2667","messageId":"2668","endLine":13,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":32,"column":35,"nodeType":"2736","messageId":"2737","endLine":32,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":39,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":74,"column":35,"nodeType":"2736","messageId":"2737","endLine":74,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2988"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":30,"column":35,"nodeType":"2736","messageId":"2737","endLine":30,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":70,"column":39,"nodeType":"2736","messageId":"2737","endLine":70,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":72,"column":35,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2989"},{"ruleId":"2665","severity":1,"message":"2973","line":13,"column":25,"nodeType":"2667","messageId":"2668","endLine":13,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":32,"column":35,"nodeType":"2736","messageId":"2737","endLine":32,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":39,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":74,"column":35,"nodeType":"2736","messageId":"2737","endLine":74,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2990"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2991"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2992"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2993"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2994"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2995"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2996"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":39,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":74,"column":35,"nodeType":"2736","messageId":"2737","endLine":74,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":21,"column":23,"nodeType":"2667","messageId":"2668","endLine":21,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":64,"column":27,"nodeType":"2736","messageId":"2737","endLine":64,"endColumn":29},{"ruleId":"2734","severity":1,"message":"2735","line":175,"column":31,"nodeType":"2736","messageId":"2737","endLine":175,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2769","line":188,"column":29,"nodeType":"2736","messageId":"2737","endLine":188,"endColumn":31},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2997"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2998"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"2999"},{"ruleId":"2665","severity":1,"message":"2973","line":13,"column":25,"nodeType":"2667","messageId":"2668","endLine":13,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":32,"column":35,"nodeType":"2736","messageId":"2737","endLine":32,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":39,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":74,"column":35,"nodeType":"2736","messageId":"2737","endLine":74,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3000"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3001"},{"ruleId":"2665","severity":1,"message":"2973","line":15,"column":23,"nodeType":"2667","messageId":"2668","endLine":15,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2735","line":34,"column":27,"nodeType":"2736","messageId":"2737","endLine":34,"endColumn":29},{"ruleId":"2734","severity":1,"message":"2735","line":108,"column":31,"nodeType":"2736","messageId":"2737","endLine":108,"endColumn":33},{"ruleId":"2734","severity":1,"message":"2769","line":121,"column":29,"nodeType":"2736","messageId":"2737","endLine":121,"endColumn":31},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3002"},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3003"},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3004"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3005"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3006"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3007"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3008"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3009"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3010"},{"ruleId":"2665","severity":1,"message":"2742","line":1,"column":21,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":27},{"ruleId":"2665","severity":1,"message":"2743","line":1,"column":29,"nodeType":"2667","messageId":"2668","endLine":1,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":72,"column":29,"nodeType":"2736","messageId":"2737","endLine":72,"endColumn":31},{"ruleId":"2734","severity":1,"message":"2735","line":93,"column":29,"nodeType":"2736","messageId":"2737","endLine":93,"endColumn":31},{"ruleId":"2680","severity":1,"message":"2739","line":106,"column":6,"nodeType":"2682","endLine":106,"endColumn":14,"suggestions":"3011"},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},{"ruleId":"2665","severity":1,"message":"2973","line":12,"column":25,"nodeType":"2667","messageId":"2668","endLine":12,"endColumn":35},{"ruleId":"2734","severity":1,"message":"2735","line":31,"column":35,"nodeType":"2736","messageId":"2737","endLine":31,"endColumn":37},{"ruleId":"2734","severity":1,"message":"2735","line":71,"column":39,"nodeType":"2736","messageId":"2737","endLine":71,"endColumn":41},{"ruleId":"2734","severity":1,"message":"2769","line":73,"column":35,"nodeType":"2736","messageId":"2737","endLine":73,"endColumn":37},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CustomBreadcrumb' is defined but never used.","'getUserFilterList' is defined but never used.","'getUserRightList' is defined but never used.","'dispatch' is assigned a value but never used.","'pinSidebar' is assigned a value but never used.","'setPinSidebar' is assigned a value but never used.","'userRightListArr' is assigned a value but never used.","'setUserRightList' is assigned a value but never used.","'getuserRightListResponse' is assigned a value but never used.","'connect' is defined but never used.","'setValidator' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageAlert'. Either include it or remove the dependency array. You can also do a functional update 'setMessageAlert(m => ...)' if you only need 'messageAlert' in the 'setMessageAlert' call.","ArrayExpression",["3012"],["3013"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MainLayout' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["3014"],["3015"],"'getCategoryList' is defined but never used.","'getCategoryListSuccess' is defined but never used.","'getLPRefList' is defined but never used.","'getLPRefListSuccess' is defined but never used.","'response' is assigned a value but never used.","'accountEdit' is assigned a value but never used.","'useCallback' is defined but never used.","'useMemo' is defined but never used.","'redirectMenu' is defined but never used.","'firstId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'urlLocation'. Either include them or remove the dependency array.",["3016"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["3017"],"React Hook useEffect has missing dependencies: 'dispatch' and 'firstLevelBit'. Either include them or remove the dependency array.",["3018"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CcrIndex' is defined but never used.","'CourierIndex' is defined but never used.","'ComboMLFBIndex' is defined but never used.","'GodownIndex' is defined but never used.","'ItemGroupIndex' is defined but never used.","'menuLength' is assigned a value but never used.","'getredirectMenu' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'user' is defined but never used.","'id' is defined but never used.","'open' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calculateTime'. Either include it or remove the dependency array.",["3019"],"React Hook useCallback has an unnecessary dependency: 'profileList'. Either exclude it or remove the dependency array.",["3020"],"'userRight' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Stack' is defined but never used.","React Hook React.useEffect has missing dependencies: 'state.right' and 'toggleDrawer'. Either include them or remove the dependency array.",["3021"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Autocomplete' is defined but never used.","React Hook useEffect has a missing dependency: 'getBrowseListData'. Either include it or remove the dependency array.",["3022"],["3023"],"'Button' is defined but never used.","'MenuItem' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'Checkbox' is defined but never used.",["3024"],["3025"],["3026"],["3027"],["3028"],["3029"],"React Hook useEffect has a missing dependency: 'getMenuList'. Either include it or remove the dependency array.",["3030"],"'useDispatch' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'getBrowseUserRight' is defined but never used.",["3031"],"'MrnAddDc' is defined but never used.","'MrnBrowseDc' is defined but never used.","'challanType' is assigned a value but never used.","'classes' is assigned a value but never used.","'RgpAdd' is defined but never used.","'RgpBrowseDc' is defined but never used.","'CcrAdd' is defined but never used.","'CcrBrowse' is defined but never used.",["3032"],"'SalesEnquiryBrowse' is defined but never used.","Expected '!==' and instead saw '!='.","'history' is assigned a value but never used.","'handleBodyParam' is assigned a value but never used.",["3033"],["3034"],"React Hook useEffect has a missing dependency: 'getEntryNo'. Either include it or remove the dependency array.",["3035"],"React Hook useEffect has a missing dependency: 'selectedPackingList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setItemListBody' needs the current value of 'selectedPackingList'.",["3036"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'handleBodyParam'. Either include it or remove the dependency array.",["3037"],["3038"],"'getAccountMasterFiltersList' is defined but never used.","'UserRight' is defined but never used.","'updatefilterjsonData' is assigned a value but never used.","'param' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gridColumn'. Either include it or remove the dependency array.",["3039"],"React Hook useEffect has missing dependencies: 'browse_id', 'dispatch', and 'getBrowseListData'. Either include them or remove the dependency array.",["3040"],"React Hook useEffect has missing dependencies: 'getBrowseListData' and 'handleUpdateFilterData'. Either include them or remove the dependency array.",["3041"],"'formatMs' is defined but never used.","'Fab' is defined but never used.","'SimpleTable' is defined but never used.","'toggleDIList' is assigned a value but never used.","'submitAddBox' is assigned a value but never used.","'handleDeleteTable' is assigned a value but never used.","'diListColumn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAccountContactList'. Either include it or remove the dependency array.",["3042"],"React Hook useEffect has a missing dependency: 'getDCNo'. Either include it or remove the dependency array.",["3043"],"'po_date' is assigned a value but never used.","'box_no' is assigned a value but never used.","'description' is assigned a value but never used.","'qty' is assigned a value but never used.",["3044"],["3045"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array.",["3046"],["3047"],"React Hook useEffect has a missing dependency: 'accountType'. Either include it or remove the dependency array. If 'setCompanyList' needs the current value of 'accountType', you can also switch to useReducer instead of useState and read 'accountType' in the reducer.",["3048"],"'currenyMasking' is defined but never used.","'ActionButtons' is defined but never used.","'amountFigures' is assigned a value but never used.","'setAmountFigures' is assigned a value but never used.","'handleRowId' is assigned a value but never used.",["3049"],["3050"],["3051"],["3052"],["3053"],["3054"],["3055"],["3056"],["3057"],["3058"],["3059"],["3060"],["3061"],["3062"],["3063"],["3064"],["3065"],["3066"],["3067"],["3068"],["3069"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'insertParams' and 'selectedParams'. Either include them or remove the dependency array. You can also do a functional update 'setSelectedParams(s => ...)' if you only need 'selectedParams' in the 'setSelectedParams' call.",["3070"],["3071"],"'CustomNoRowsOverlay' is defined but never used.","'user_id' is assigned a value but never used.",["3072"],"React Hook useEffect has missing dependencies: 'dispatch' and 'getBrowseListData'. Either include them or remove the dependency array.",["3073"],["3074"],"'setDataLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addDropDownList' and 'dropdownList'. Either include them or remove the dependency array. You can also do a functional update 'setDropDownList(d => ...)' if you only need 'dropdownList' in the 'setDropDownList' call.",["3075"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","React Hook useEffect has missing dependencies: 'dispatch' and 'type'. Either include them or remove the dependency array.",["3076"],"no-redeclare","'element' is already defined.","redeclared",["3077"],["3078"],"'DatePicker' is defined but never used.",["3079"],["3080"],["3081"],["3082"],["3083"],["3084"],["3085"],["3086"],["3087"],["3088"],["3089"],["3090"],["3091"],["3092"],["3093"],["3094"],["3095"],["3096"],["3097"],["3098"],["3099"],["3100"],"'setTempVerified' is assigned a value but never used.","'handleCategory' is assigned a value but never used.",["3101"],"React Hook useEffect has missing dependencies: 'browse_id', 'dispatch', 'params', and 'productMasterFilter'. Either include them or remove the dependency array.",["3102"],"React Hook useEffect has missing dependencies: 'dispatch' and 'handleUpdateFilterData'. Either include them or remove the dependency array.",["3103"],["3104"],["3105"],"'CustomPagination' is defined but never used.","'label' is assigned a value but never used.",["3106"],["3107"],"'handleDateChange' is assigned a value but never used.",["3108"],["3109"],["3110"],["3111"],"React Hook useEffect has a missing dependency: 'insertParams'. Either include it or remove the dependency array. You can also do a functional update 'setInsertParams(i => ...)' if you only need 'insertParams' in the 'setInsertParams' call.",["3112"],["3113"],["3114"],["3115"],["3116"],"'setLoading' is assigned a value but never used.",["3117"],"React Hook useEffect has a missing dependency: 'getSupportTicketData'. Either include it or remove the dependency array.",["3118"],["3119"],["3120"],"React Hook useEffect has a missing dependency: 'getTicketById'. Either include it or remove the dependency array.",["3121"],"'showSuccessToast' is defined but never used.","'Loader' is defined but never used.","'empList' is assigned a value but never used.","'setEmpList' is assigned a value but never used.",["3122"],["3123"],"'moment' is defined but never used.",["3124"],["3125"],["3126"],["3127"],["3128"],["3129"],["3130"],["3131"],["3132"],["3133"],["3134"],["3135"],["3136"],["3137"],["3138"],["3139"],["3140"],["3141"],["3142"],["3143"],["3144"],["3145"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'buttonLoader' is defined but never used.","React Hook useEffect has a missing dependency: 'getDateFilter'. Either include it or remove the dependency array.",["3146"],"React Hook useEffect has missing dependencies: 'from_date', 'to_date', and 'updateDateFilter'. Either include them or remove the dependency array.",["3147"],"'StyledTableCell' is assigned a value but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apiBody', 'isNode', 'params', and 'url'. Either include them or remove the dependency array.",["3148"],"React Hook useEffect has missing dependencies: 'apiBody', 'isNode', and 'url'. Either include them or remove the dependency array.",["3149"],"'React' is defined but never used.","'loaderImg' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.",["3150"],"'totalRecord' is assigned a value but never used.","'handlePageSizeChange' is assigned a value but never used.","'handlePageChange' is assigned a value but never used.","'onDelete' is assigned a value but never used.","'onPreview' is assigned a value but never used.",["3151"],"'setMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listTransection'. Either include it or remove the dependency array.",["3152"],["3153"],["3154"],["3155"],["3156"],["3157"],["3158"],["3159"],["3160"],["3161"],["3162"],["3163"],["3164"],["3165"],["3166"],["3167"],["3168"],["3169"],["3170"],["3171"],["3172"],["3173"],["3174"],["3175"],["3176"],["3177"],["3178"],["3179"],["3180"],["3181"],["3182"],["3183"],["3184"],["3185"],["3186"],["3187"],["3188"],{"desc":"3189","fix":"3190"},{"desc":"3191","fix":"3192"},{"desc":"3193","fix":"3194"},{"desc":"3195","fix":"3196"},{"desc":"3197","fix":"3198"},{"desc":"3199","fix":"3200"},{"desc":"3201","fix":"3202"},{"desc":"3203","fix":"3204"},{"desc":"3205","fix":"3206"},{"desc":"3207","fix":"3208"},{"desc":"3209","fix":"3210"},{"desc":"3211","fix":"3212"},{"desc":"3209","fix":"3213"},{"desc":"3211","fix":"3214"},{"desc":"3209","fix":"3215"},{"desc":"3211","fix":"3216"},{"desc":"3209","fix":"3217"},{"desc":"3218","fix":"3219"},{"desc":"3220","fix":"3221"},{"desc":"3222","fix":"3223"},{"desc":"3222","fix":"3224"},{"desc":"3209","fix":"3225"},{"desc":"3226","fix":"3227"},{"desc":"3228","fix":"3229"},{"desc":"3230","fix":"3231"},{"desc":"3232","fix":"3233"},{"desc":"3226","fix":"3234"},{"desc":"3235","fix":"3236"},{"desc":"3237","fix":"3238"},{"desc":"3239","fix":"3240"},{"desc":"3241","fix":"3242"},{"desc":"3243","fix":"3244"},{"desc":"3241","fix":"3245"},{"desc":"3243","fix":"3246"},{"desc":"3247","fix":"3248"},{"desc":"3249","fix":"3250"},{"desc":"3251","fix":"3252"},{"desc":"3209","fix":"3253"},{"desc":"3226","fix":"3254"},{"desc":"3209","fix":"3255"},{"desc":"3226","fix":"3256"},{"desc":"3241","fix":"3257"},{"desc":"3243","fix":"3258"},{"desc":"3209","fix":"3259"},{"desc":"3226","fix":"3260"},{"desc":"3209","fix":"3261"},{"desc":"3226","fix":"3262"},{"desc":"3241","fix":"3263"},{"desc":"3243","fix":"3264"},{"desc":"3209","fix":"3265"},{"desc":"3226","fix":"3266"},{"desc":"3243","fix":"3267"},{"desc":"3232","fix":"3268"},{"desc":"3226","fix":"3269"},{"desc":"3241","fix":"3270"},{"desc":"3243","fix":"3271"},{"desc":"3209","fix":"3272"},{"desc":"3218","fix":"3273"},{"desc":"3274","fix":"3275"},{"desc":"3247","fix":"3276"},{"desc":"3235","fix":"3277"},{"desc":"3278","fix":"3279"},{"desc":"3280","fix":"3281"},{"desc":"3282","fix":"3283"},{"desc":"3284","fix":"3285"},{"desc":"3209","fix":"3286"},{"desc":"3218","fix":"3287"},{"desc":"3237","fix":"3288"},{"desc":"3280","fix":"3289"},{"desc":"3235","fix":"3290"},{"desc":"3241","fix":"3291"},{"desc":"3243","fix":"3292"},{"desc":"3241","fix":"3293"},{"desc":"3243","fix":"3294"},{"desc":"3209","fix":"3295"},{"desc":"3226","fix":"3296"},{"desc":"3209","fix":"3297"},{"desc":"3226","fix":"3298"},{"desc":"3241","fix":"3299"},{"desc":"3243","fix":"3300"},{"desc":"3209","fix":"3301"},{"desc":"3226","fix":"3302"},{"desc":"3241","fix":"3303"},{"desc":"3243","fix":"3304"},{"desc":"3209","fix":"3305"},{"desc":"3218","fix":"3306"},{"desc":"3209","fix":"3307"},{"desc":"3308","fix":"3309"},{"desc":"3247","fix":"3310"},{"desc":"3235","fix":"3311"},{"desc":"3312","fix":"3313"},{"desc":"3314","fix":"3315"},{"desc":"3209","fix":"3316"},{"desc":"3308","fix":"3317"},{"desc":"3209","fix":"3318"},{"desc":"3308","fix":"3319"},{"desc":"3209","fix":"3320"},{"desc":"3308","fix":"3321"},{"desc":"3209","fix":"3322"},{"desc":"3308","fix":"3323"},{"desc":"3324","fix":"3325"},{"desc":"3209","fix":"3326"},{"desc":"3308","fix":"3327"},{"desc":"3209","fix":"3328"},{"desc":"3226","fix":"3329"},{"desc":"3222","fix":"3330"},{"desc":"3331","fix":"3332"},{"desc":"3209","fix":"3333"},{"desc":"3226","fix":"3334"},{"desc":"3335","fix":"3336"},{"desc":"3209","fix":"3337"},{"desc":"3226","fix":"3338"},{"desc":"3209","fix":"3339"},{"desc":"3226","fix":"3340"},{"desc":"3209","fix":"3341"},{"desc":"3226","fix":"3342"},{"desc":"3209","fix":"3343"},{"desc":"3226","fix":"3344"},{"desc":"3241","fix":"3345"},{"desc":"3243","fix":"3346"},{"desc":"3241","fix":"3347"},{"desc":"3243","fix":"3348"},{"desc":"3209","fix":"3349"},{"desc":"3226","fix":"3350"},{"desc":"3241","fix":"3351"},{"desc":"3243","fix":"3352"},{"desc":"3209","fix":"3353"},{"desc":"3308","fix":"3354"},{"desc":"3209","fix":"3355"},{"desc":"3308","fix":"3356"},{"desc":"3209","fix":"3357"},{"desc":"3308","fix":"3358"},{"desc":"3209","fix":"3359"},{"desc":"3308","fix":"3360"},{"desc":"3361","fix":"3362"},{"desc":"3363","fix":"3364"},{"desc":"3365","fix":"3366"},{"desc":"3365","fix":"3367"},{"desc":"3222","fix":"3368"},{"desc":"3218","fix":"3369"},{"desc":"3370","fix":"3371"},{"desc":"3218","fix":"3372"},{"desc":"3218","fix":"3373"},{"desc":"3218","fix":"3374"},{"desc":"3218","fix":"3375"},{"desc":"3218","fix":"3376"},{"desc":"3218","fix":"3377"},{"desc":"3218","fix":"3378"},{"desc":"3218","fix":"3379"},{"desc":"3218","fix":"3380"},{"desc":"3218","fix":"3381"},{"desc":"3218","fix":"3382"},{"desc":"3218","fix":"3383"},{"desc":"3218","fix":"3384"},{"desc":"3218","fix":"3385"},{"desc":"3218","fix":"3386"},{"desc":"3218","fix":"3387"},{"desc":"3218","fix":"3388"},{"desc":"3218","fix":"3389"},{"desc":"3218","fix":"3390"},{"desc":"3218","fix":"3391"},{"desc":"3218","fix":"3392"},{"desc":"3218","fix":"3393"},{"desc":"3218","fix":"3394"},{"desc":"3218","fix":"3395"},{"desc":"3218","fix":"3396"},{"desc":"3218","fix":"3397"},{"desc":"3218","fix":"3398"},{"desc":"3218","fix":"3399"},{"desc":"3218","fix":"3400"},{"desc":"3218","fix":"3401"},{"desc":"3218","fix":"3402"},{"desc":"3218","fix":"3403"},{"desc":"3218","fix":"3404"},{"desc":"3218","fix":"3405"},{"desc":"3218","fix":"3406"},{"desc":"3218","fix":"3407"},"Update the dependencies array to be: [checkAuthCredResponse, messageAlert]",{"range":"3408","text":"3409"},"Update the dependencies array to be: [checkAuthOtpResponse, messageAlert]",{"range":"3410","text":"3411"},"Update the dependencies array to be: [dispatch, isAuthorisedByUrl]",{"range":"3412","text":"3413"},"Update the dependencies array to be: [dispatch, getDecryptUserDetailsResponse]",{"range":"3414","text":"3415"},"Update the dependencies array to be: [dispatch, urlLocation]",{"range":"3416","text":"3417"},"Update the dependencies array to be: [getuserRightListResponse, getuserLIstSecond, getuserLIstThird, redirect]",{"range":"3418","text":"3419"},"Update the dependencies array to be: [dispatch, firstLevelBit, getuserLIstSecond]",{"range":"3420","text":"3421"},"Update the dependencies array to be: [calculateTime]",{"range":"3422","text":"3423"},"Update the dependencies array to be: []",{"range":"3424","text":"3425"},"Update the dependencies array to be: [leftTrue, state.right, toggleDrawer]",{"range":"3426","text":"3427"},"Update the dependencies array to be: [getBrowseListData]",{"range":"3428","text":"3429"},"Update the dependencies array to be: [bodyParam, getBrowseListData]",{"range":"3430","text":"3431"},{"range":"3432","text":"3429"},{"range":"3433","text":"3431"},{"range":"3434","text":"3429"},{"range":"3435","text":"3431"},{"range":"3436","text":"3429"},"Update the dependencies array to be: [getBrowseListData, params]",{"range":"3437","text":"3438"},"Update the dependencies array to be: [getMenuList]",{"range":"3439","text":"3440"},"Update the dependencies array to be: [dispatch]",{"range":"3441","text":"3442"},{"range":"3443","text":"3442"},{"range":"3444","text":"3429"},"Update the dependencies array to be: [params, bodyParam, getBrowseListData]",{"range":"3445","text":"3446"},"Update the dependencies array to be: [getEntryNo]",{"range":"3447","text":"3448"},"Update the dependencies array to be: [boxList, selectedPackingList]",{"range":"3449","text":"3450"},"Update the dependencies array to be: [handleBodyParam, slType]",{"range":"3451","text":"3452"},{"range":"3453","text":"3446"},"Update the dependencies array to be: [filterjsonData, gridColumn]",{"range":"3454","text":"3455"},"Update the dependencies array to be: [browse_id, dispatch, getBrowseListData]",{"range":"3456","text":"3457"},"Update the dependencies array to be: [params, accountMasterFilter, filter, getBrowseListData, handleUpdateFilterData]",{"range":"3458","text":"3459"},"Update the dependencies array to be: [contactlist, getAccountContactList]",{"range":"3460","text":"3461"},"Update the dependencies array to be: [getDCNo]",{"range":"3462","text":"3463"},{"range":"3464","text":"3461"},{"range":"3465","text":"3463"},"Update the dependencies array to be: [formData, selectedIdResponse]",{"range":"3466","text":"3467"},"Update the dependencies array to be: [accountType, getBrowseListData, params]",{"range":"3468","text":"3469"},"Update the dependencies array to be: [accountType]",{"range":"3470","text":"3471"},{"range":"3472","text":"3429"},{"range":"3473","text":"3446"},{"range":"3474","text":"3429"},{"range":"3475","text":"3446"},{"range":"3476","text":"3461"},{"range":"3477","text":"3463"},{"range":"3478","text":"3429"},{"range":"3479","text":"3446"},{"range":"3480","text":"3429"},{"range":"3481","text":"3446"},{"range":"3482","text":"3461"},{"range":"3483","text":"3463"},{"range":"3484","text":"3429"},{"range":"3485","text":"3446"},{"range":"3486","text":"3463"},{"range":"3487","text":"3452"},{"range":"3488","text":"3446"},{"range":"3489","text":"3461"},{"range":"3490","text":"3463"},{"range":"3491","text":"3429"},{"range":"3492","text":"3438"},"Update the dependencies array to be: [selectedComboMLFBIdResponse, mlfbProductList, selectedParams, insertParams]",{"range":"3493","text":"3494"},{"range":"3495","text":"3467"},{"range":"3496","text":"3455"},"Update the dependencies array to be: [dispatch, getBrowseListData]",{"range":"3497","text":"3498"},"Update the dependencies array to be: [params, jsonfilter, getBrowseListData, handleUpdateFilterData]",{"range":"3499","text":"3500"},"Update the dependencies array to be: [addDropDownList, dropdownList, selectedIdResponse]",{"range":"3501","text":"3502"},"Update the dependencies array to be: [dispatch, type]",{"range":"3503","text":"3504"},{"range":"3505","text":"3429"},{"range":"3506","text":"3438"},{"range":"3507","text":"3457"},{"range":"3508","text":"3500"},{"range":"3509","text":"3455"},{"range":"3510","text":"3461"},{"range":"3511","text":"3463"},{"range":"3512","text":"3461"},{"range":"3513","text":"3463"},{"range":"3514","text":"3429"},{"range":"3515","text":"3446"},{"range":"3516","text":"3429"},{"range":"3517","text":"3446"},{"range":"3518","text":"3461"},{"range":"3519","text":"3463"},{"range":"3520","text":"3429"},{"range":"3521","text":"3446"},{"range":"3522","text":"3461"},{"range":"3523","text":"3463"},{"range":"3524","text":"3429"},{"range":"3525","text":"3438"},{"range":"3526","text":"3429"},"Update the dependencies array to be: [params, getuserRightListResponse, bodyParam, getBrowseListData]",{"range":"3527","text":"3528"},{"range":"3529","text":"3467"},{"range":"3530","text":"3455"},"Update the dependencies array to be: [browse_id, dispatch, params, productMasterFilter]",{"range":"3531","text":"3532"},"Update the dependencies array to be: [productMasterFilter, params, jsonfilter, dispatch, handleUpdateFilterData]",{"range":"3533","text":"3534"},{"range":"3535","text":"3429"},{"range":"3536","text":"3528"},{"range":"3537","text":"3429"},{"range":"3538","text":"3528"},{"range":"3539","text":"3429"},{"range":"3540","text":"3528"},{"range":"3541","text":"3429"},{"range":"3542","text":"3528"},"Update the dependencies array to be: [insertParams, selectedIdResponse]",{"range":"3543","text":"3544"},{"range":"3545","text":"3429"},{"range":"3546","text":"3528"},{"range":"3547","text":"3429"},{"range":"3548","text":"3446"},{"range":"3549","text":"3442"},"Update the dependencies array to be: [getSupportTicketData]",{"range":"3550","text":"3551"},{"range":"3552","text":"3429"},{"range":"3553","text":"3446"},"Update the dependencies array to be: [getTicketById, previewId]",{"range":"3554","text":"3555"},{"range":"3556","text":"3429"},{"range":"3557","text":"3446"},{"range":"3558","text":"3429"},{"range":"3559","text":"3446"},{"range":"3560","text":"3429"},{"range":"3561","text":"3446"},{"range":"3562","text":"3429"},{"range":"3563","text":"3446"},{"range":"3564","text":"3461"},{"range":"3565","text":"3463"},{"range":"3566","text":"3461"},{"range":"3567","text":"3463"},{"range":"3568","text":"3429"},{"range":"3569","text":"3446"},{"range":"3570","text":"3461"},{"range":"3571","text":"3463"},{"range":"3572","text":"3429"},{"range":"3573","text":"3528"},{"range":"3574","text":"3429"},{"range":"3575","text":"3528"},{"range":"3576","text":"3429"},{"range":"3577","text":"3528"},{"range":"3578","text":"3429"},{"range":"3579","text":"3528"},"Update the dependencies array to be: [getDateFilter]",{"range":"3580","text":"3581"},"Update the dependencies array to be: [dateUpdate, from_date, to_date, updateDateFilter]",{"range":"3582","text":"3583"},"Update the dependencies array to be: [apiBody, isNode, params, url]",{"range":"3584","text":"3585"},{"range":"3586","text":"3585"},{"range":"3587","text":"3442"},{"range":"3588","text":"3438"},"Update the dependencies array to be: [listTransection, props.editData]",{"range":"3589","text":"3590"},{"range":"3591","text":"3438"},{"range":"3592","text":"3438"},{"range":"3593","text":"3438"},{"range":"3594","text":"3438"},{"range":"3595","text":"3438"},{"range":"3596","text":"3438"},{"range":"3597","text":"3438"},{"range":"3598","text":"3438"},{"range":"3599","text":"3438"},{"range":"3600","text":"3438"},{"range":"3601","text":"3438"},{"range":"3602","text":"3438"},{"range":"3603","text":"3438"},{"range":"3604","text":"3438"},{"range":"3605","text":"3438"},{"range":"3606","text":"3438"},{"range":"3607","text":"3438"},{"range":"3608","text":"3438"},{"range":"3609","text":"3438"},{"range":"3610","text":"3438"},{"range":"3611","text":"3438"},{"range":"3612","text":"3438"},{"range":"3613","text":"3438"},{"range":"3614","text":"3438"},{"range":"3615","text":"3438"},{"range":"3616","text":"3438"},{"range":"3617","text":"3438"},{"range":"3618","text":"3438"},{"range":"3619","text":"3438"},{"range":"3620","text":"3438"},{"range":"3621","text":"3438"},{"range":"3622","text":"3438"},{"range":"3623","text":"3438"},{"range":"3624","text":"3438"},{"range":"3625","text":"3438"},{"range":"3626","text":"3438"},[2227,2250],"[checkAuthCredResponse, messageAlert]",[3106,3128],"[checkAuthOtpResponse, messageAlert]",[861,880],"[dispatch, isAuthorisedByUrl]",[1196,1227],"[dispatch, getDecryptUserDetailsResponse]",[3418,3420],"[dispatch, urlLocation]",[3909,3972],"[getuserRightListResponse, getuserLIstSecond, getuserLIstThird, redirect]",[4237,4256],"[dispatch, firstLevelBit, getuserLIstSecond]",[3262,3264],"[calculateTime]",[8304,8317],"[]",[2545,2555],"[leftTrue, state.right, toggleDrawer]",[1392,1394],"[getBrowseListData]",[1452,1463],"[bodyParam, getBrowseListData]",[1906,1908],[1966,1977],[1906,1908],[1966,1977],[2619,2621],[2679,2687],"[getBrowseListData, params]",[2807,2809],"[getMenuList]",[1053,1055],"[dispatch]",[914,916],[2213,2215],[2273,2292],"[params, bodyParam, getBrowseListData]",[1228,1230],"[getEntryNo]",[1727,1736],"[boxList, selectedPackingList]",[2613,2621],"[handleBodyParam, slType]",[2679,2698],[10712,10728],"[filterjsonData, gridColumn]",[10861,10863],"[browse_id, dispatch, getBrowseListData]",[10978,11015],"[params, accountMasterFilter, filter, getBrowseListData, handleUpdateFilterData]",[9354,9367],"[contactlist, getAccountContactList]",[9423,9425],"[getDCNo]",[9354,9367],[9423,9425],[3678,3698],"[formData, selectedIdResponse]",[2240,2261],"[accountType, getBrowseListData, params]",[2535,2537],"[accountType]",[2489,2491],[2549,2568],[2503,2505],[2563,2582],[9350,9363],[9419,9421],[2484,2486],[2544,2563],[2487,2489],[2547,2566],[9367,9380],[9436,9438],[2497,2499],[2557,2576],[3162,3164],[2475,2483],[2550,2569],[9361,9374],[9430,9432],[1984,1986],[2044,2052],[2458,2504],"[selectedComboMLFBIdResponse, mlfbProductList, selectedParams, insertParams]",[2333,2353],[5283,5299],[5388,5390],"[dispatch, getBrowseListData]",[5509,5529],"[params, jsonfilter, getBrowseListData, handleUpdateFilterData]",[2864,2884],"[addDropDownList, dropdownList, selectedIdResponse]",[5611,5613],"[dispatch, type]",[1995,1997],[2055,2063],[5106,5108],[5227,5246],[5679,5695],[9360,9373],[9429,9431],[9366,9379],[9435,9437],[2554,2556],[2614,2633],[2580,2582],[2640,2659],[7682,7695],[7743,7745],[2511,2513],[2571,2590],[9366,9379],[9435,9437],[1978,1980],[2038,2046],[4141,4143],[4201,4246],"[params, getuserRightListResponse, bodyParam, getBrowseListData]",[3273,3293],[8919,8935],[9216,9218],"[browse_id, dispatch, params, productMasterFilter]",[9485,9525],"[productMasterFilter, params, jsonfilter, dispatch, handleUpdateFilterData]",[4118,4120],[4178,4223],[4420,4422],[4480,4525],[2719,2721],[2779,2824],[4252,4254],[4312,4357],[1419,1439],"[insertParams, selectedIdResponse]",[4416,4418],[4476,4521],[3326,3328],[3384,3403],[1057,1059],[2724,2726],"[getSupportTicketData]",[2096,2098],[2156,2175],[2669,2680],"[getTicketById, previewId]",[2350,2352],[2410,2429],[2561,2563],[2621,2640],[2664,2666],[2724,2743],[2508,2510],[2568,2587],[9370,9383],[9439,9441],[9376,9389],[9445,9447],[2584,2586],[2644,2663],[9362,9375],[9431,9433],[4439,4441],[4499,4544],[4448,4450],[4508,4553],[4436,4438],[4496,4541],[4435,4437],[4495,4540],[1929,1931],"[getDateFilter]",[2031,2043],"[dateUpdate, from_date, to_date, updateDateFilter]",[4367,4369],"[apiBody, isNode, params, url]",[4898,4906],[842,844],[2987,2995],[1847,1863],"[listTransection, props.editData]",[2852,2860],[2863,2871],[2844,2852],[2874,2882],[2870,2878],[2895,2903],[2890,2898],[2870,2878],[2865,2873],[2866,2874],[2880,2888],[2893,2901],[2882,2890],[2884,2892],[2860,2868],[2900,2908],[2858,2866],[2872,2880],[2882,2890],[2850,2858],[2887,2895],[2865,2873],[2890,2898],[2869,2877],[2895,2903],[2900,2908],[2885,2893],[2886,2894],[2858,2866],[2899,2907],[2905,2913],[2895,2903],[2890,2898],[2890,2898],[2895,2903],[2885,2893]]