{"version":3,"sources":["assets/image/bg-5.jpg","_redux/actions/auth.action.js","components/GlobalAlert.js","pages/Auth/Login.js","components/breadcrumbs.js","_redux/actions/common.action.js","components/common.js","components/leftModal.js","services.js","_redux/controller/common.controller.js","components/appbar.js","components/main_menu.js","components/sub_menu.js","components/third_menu.js","components/header.js","components/RouteWithSubRoutes.js","layouts/Dashboard.js","components/CustomPagination.js","components/customRowComponent.js","components/dateFilter.js","pages/DC/browse.js","components/basic-table.js","components/table-picker.js","pages/DC/form.js","pages/DC/index.js","pages/logistics/ccr/add.js","components/action-buttons.js","pages/logistics/ccr/browse.js","pages/logistics/ccr/index.js","pages/logistics/ccr/ccrOut/add.js","pages/logistics/ccr/ccrOut/browse.js","pages/logistics/ccr/ccrOut/index.js","pages/logistics/courier/add.js","pages/logistics/courier/browse.js","pages/logistics/courier/index.js","pages/logistics/courier/courierOut/browse.js","pages/logistics/courier/courierOut/add.js","pages/logistics/courier/courierOut/index.js","pages/logistics/courier/invoice/browse.js","pages/logistics/courier/invoice/add.js","pages/logistics/courier/invoice/index.js","pages/logistics/delivery-challan/mdc/browse.js","pages/logistics/delivery-challan/mdc/mdc-add.js","pages/logistics/delivery-challan/mdc/index.js","pages/logistics/delivery-challan/slwip/add.js","pages/logistics/delivery-challan/slwip/browse.js","pages/logistics/delivery-challan/slwip/index.js","pages/logistics/delivery-challan/browse.js","pages/logistics/delivery-challan/dc-add.js","pages/logistics/delivery-challan/index.js","pages/logistics/job-work/add.js","pages/logistics/job-work/browse.js","pages/logistics/job-work/index.js","pages/logistics/job-work/jobWorkOut/add.js","pages/logistics/job-work/jobWorkOut/browse.js","pages/logistics/job-work/jobWorkOut/index.js","pages/logistics/material-receipt-note/add.js","pages/logistics/material-receipt-note/browse.js","pages/logistics/material-receipt-note/index.js","pages/logistics/material-receipt-note/mrn-po/add.js","pages/logistics/material-receipt-note/mrn-po/browse.js","pages/logistics/material-receipt-note/mrn-po/index.js","pages/logistics/returnable-gate-pass/browse.js","pages/logistics/returnable-gate-pass/rrgp/add.js","pages/logistics/returnable-gate-pass/index.js","pages/logistics/returnable-gate-pass/rrgp/browse.js","pages/logistics/returnable-gate-pass/rrgp/index.js","layouts/Logistics.js","_redux/actions/masters/account.action.js","_redux/actions/masters/all.action.js","pages/Master/Accounts_Master/browse.js","pages/Master/Accounts_Master/contact_person.js","pages/Master/Accounts_Master/generalInfo.js","pages/Master/Accounts_Master/tnc.js","pages/Master/Accounts_Master/form.js","pages/Master/Accounts_Master/tcs.js","pages/Master/Accounts_Master/index.js","components/loader.js","assets/image/loader.gif","pages/Master/combomlfb/addCombo.js","pages/Master/combomlfb/browse.js","pages/Master/combomlfb/index.js","pages/Master/Configuration/Account/group/browse.js","pages/Master/Configuration/Account/group/form.js","pages/Master/Configuration/Account/group/index.js","pages/Master/Configuration/Account/pincode/browse.js","pages/Master/Configuration/Account/pincode/form.js","pages/Master/Configuration/Account/pincode/index.js","pages/Master/Configuration/Account/region/browse.js","pages/Master/Configuration/Account/region/form.js","pages/Master/Configuration/Account/region/index.js","pages/Master/Configuration/Account/rating/browse.js","pages/Master/Configuration/Account/rating/form.js","pages/Master/Configuration/Account/rating/index.js","pages/Master/Configuration/Account/department/browse.js","pages/Master/Configuration/Account/department/form.js","pages/Master/Configuration/Account/department/index.js","pages/Master/Configuration/Account/designation/browse.js","pages/Master/Configuration/Account/designation/form.js","pages/Master/Configuration/Account/designation/index.js","pages/Master/Configuration/Account/siemens/browse.js","pages/Master/Configuration/Account/siemens/form.js","pages/Master/Configuration/Account/siemens/index.js","pages/Master/Configuration/Account/supply-item/browse.js","pages/Master/Configuration/Account/supply-item/form.js","pages/Master/Configuration/Account/supply-item/index.js","pages/Master/Configuration/Account/index.js","pages/Master/Configuration/product/category/browse.js","pages/Master/Configuration/product/category/form.js","pages/Master/Configuration/product/category/index.js","pages/Master/Configuration/product/group/browse.js","pages/Master/Configuration/product/group/form.js","pages/Master/Configuration/product/group/index.js","pages/Master/Configuration/product/item/browse.js","pages/Master/Configuration/product/item/form.js","pages/Master/Configuration/product/item/index.js","pages/Master/Configuration/product/unit/browse.js","pages/Master/Configuration/product/unit/form.js","pages/Master/Configuration/product/unit/index.js","pages/Master/Configuration/product/gg/browse.js","pages/Master/Configuration/product/gg/form.js","pages/Master/Configuration/product/gg/index.js","pages/Master/Configuration/product/index.js","pages/Master/Configuration/enquiry/type/browse.js","pages/Master/Configuration/enquiry/type/form.js","pages/Master/Configuration/enquiry/type/index.js","pages/Master/Configuration/enquiry/priority/browse.js","pages/Master/Configuration/enquiry/priority/form.js","pages/Master/Configuration/enquiry/priority/index.js","pages/Master/Configuration/enquiry/reference/browse.js","pages/Master/Configuration/enquiry/reference/form.js","pages/Master/Configuration/enquiry/reference/index.js","pages/Master/Configuration/enquiry/status/browse.js","pages/Master/Configuration/enquiry/status/form.js","pages/Master/Configuration/enquiry/status/index.js","pages/Master/Configuration/enquiry/index.js","pages/Master/Configuration/costing/ledger/browse.js","pages/Master/Configuration/costing/ledger/form.js","pages/Master/Configuration/costing/ledger/index.js","pages/Master/Configuration/costing/finance/browse.js","pages/Master/Configuration/costing/finance/form.js","pages/Master/Configuration/costing/finance/index.js","pages/Master/Configuration/costing/tabs/browse.js","pages/Master/Configuration/costing/tabs/form.js","pages/Master/Configuration/costing/tabs/index.js","pages/Master/Configuration/costing/index.js","pages/Master/Configuration/salesOrder/ldClause/browse.js","pages/Master/Configuration/salesOrder/ldClause/form.js","pages/Master/Configuration/salesOrder/ldClause/index.js","pages/Master/Configuration/salesOrder/fright/browse.js","pages/Master/Configuration/salesOrder/fright/form.js","pages/Master/Configuration/salesOrder/fright/index.js","pages/Master/Configuration/salesOrder/insurance/browse.js","pages/Master/Configuration/salesOrder/insurance/form.js","pages/Master/Configuration/salesOrder/insurance/index.js","pages/Master/Configuration/salesOrder/octrol/browse.js","pages/Master/Configuration/salesOrder/octrol/form.js","pages/Master/Configuration/salesOrder/octrol/index.js","pages/Master/Configuration/salesOrder/p&f/browse.js","pages/Master/Configuration/salesOrder/p&f/form.js","pages/Master/Configuration/salesOrder/p&f/index.js","pages/Master/Configuration/salesOrder/loading/browse.js","pages/Master/Configuration/salesOrder/loading/form.js","pages/Master/Configuration/salesOrder/loading/index.js","pages/Master/Configuration/salesOrder/boarding/browse.js","pages/Master/Configuration/salesOrder/boarding/form.js","pages/Master/Configuration/salesOrder/boarding/index.js","pages/Master/Configuration/salesOrder/travelCharge/browse.js","pages/Master/Configuration/salesOrder/travelCharge/form.js","pages/Master/Configuration/salesOrder/travelCharge/index.js","pages/Master/Configuration/salesOrder/conveyance/browse.js","pages/Master/Configuration/salesOrder/conveyance/form.js","pages/Master/Configuration/salesOrder/conveyance/index.js","pages/Master/Configuration/salesOrder/paymentTerms/browse.js","pages/Master/Configuration/salesOrder/paymentTerms/form.js","pages/Master/Configuration/salesOrder/paymentTerms/index.js","pages/Master/Configuration/salesOrder/delivery/browse.js","pages/Master/Configuration/salesOrder/delivery/form.js","pages/Master/Configuration/salesOrder/delivery/index.js","pages/Master/Configuration/salesOrder/validity/browse.js","pages/Master/Configuration/salesOrder/validity/form.js","pages/Master/Configuration/salesOrder/validity/index.js","pages/Master/Configuration/salesOrder/modeOfDispatch/browse.js","pages/Master/Configuration/salesOrder/modeOfDispatch/form.js","pages/Master/Configuration/salesOrder/modeOfDispatch/index.js","pages/Master/Configuration/salesOrder/inspection/browse.js","pages/Master/Configuration/salesOrder/inspection/form.js","pages/Master/Configuration/salesOrder/inspection/index.js","pages/Master/Configuration/salesOrder/index.js","pages/Master/Configuration/quotation/browse.js","pages/Master/Configuration/quotation/form.js","pages/Master/Configuration/quotation/subIndex.js","pages/Master/Configuration/quotation/index.js","pages/Master/Configuration/courier/browse.js","pages/Master/Configuration/courier/form.js","pages/Master/Configuration/courier/subIndex.js","pages/Master/Configuration/courier/index.js","pages/Master/Configuration/menustructure/browse.js","pages/Master/Configuration/menustructure/form.js","pages/Master/Configuration/menustructure/index.js","pages/Master/Configuration/index.js","pages/Master/employee/general.js","pages/Master/employee/other.js","pages/Master/employee/addEntry.js","pages/Master/employee/browse.js","pages/Master/employee/index.js","pages/Master/godown/addEntry.js","pages/Master/godown/browse.js","pages/Master/godown/index.js","pages/Master/item Group/addItem.js","pages/Master/item Group/browse.js","pages/Master/item Group/index.js","_redux/actions/masters/materialcode.action.js","_redux/controller/Masters/materialcode.controller.js","pages/Master/Material Code/addMaterialCode.js","pages/Master/Material Code/browse.js","pages/Master/Material Code/index.js","pages/Master/Product/general.js","pages/Master/Product/other.js","pages/Master/Product/addProduct.js","_redux/actions/masters/product.action.js","pages/Master/Product/browse.js","pages/Master/Product/index.js","pages/Master/user rights/browse.js","layouts/Masters.js","pages/Profile/attendance.js","pages/Profile/changePassword.js","pages/Profile/profile.js","layouts/Profile.js","pages/Sales/issues/browse.js","pages/Sales/issues/index.js","pages/Sales/marketingVisit/browse.js","pages/Sales/marketingVisit/index.js","pages/Sales/quotation/browse.js","pages/Sales/quotation/index.js","pages/Sales/Sales Costing/browse.js","pages/Sales/Sales Costing/index.js","pages/Sales/Sales Enquiry/browse.js","pages/Sales/Sales Enquiry/index.js","pages/Sales/salesOrder/slDI/browse.js","pages/Sales/salesOrder/slDI/index.js","pages/Sales/salesOrder/slSoPos/browse.js","pages/Sales/salesOrder/slSoPos/index.js","pages/Sales/salesOrder/slSoPosSummarise/browse.js","pages/Sales/salesOrder/slSoPosSummarise/index.js","pages/Sales/salesOrder/soDetail/browse.js","pages/Sales/salesOrder/soDetail/index.js","pages/Sales/soAmedment/browse.js","pages/Sales/soAmedment/index.js","layouts/Sales.js","pages/Stock/itemLedgerBrowse.js","pages/Stock/serialLedgerBrowse.js","pages/Stock/stockBrowse.js","layouts/Stock.js","pages/support/ticket/addTicket.js","pages/support/ticket/browse.js","pages/support/ticket/index.js","pages/support/ticketApproval/browse.js","pages/support/ticketApproval/index.js","pages/support/ticketCommercial/addCommericial.js","pages/support/ticketCommercial/tcBrowse.js","pages/support/ticketCommercial/index.js","pages/index.js","routes.js","layouts/Support.js","layouts/layout.js","App.js","reportWebVitals.js","_redux/reducers/auth.reducer.js","_redux/reducers/common.reducer.js","_redux/reducers/Masters/account.reducer.js","_redux/actions/masters/configuration.action.js","_redux/reducers/Masters/configuration.reducer.js","_redux/reducers/Masters/product.reducer.js","_redux/reducers/Masters/materialcode.reducer.js","_redux/reducers/Masters/all.reducer.js","_redux/reducers/index.js","_redux/controller/auth.controller.js","_redux/middleware/auth.saga.js","_redux/middleware/common.saga.js","_redux/controller/Masters/account.controller.js","_redux/middleware/Masters/account.saga.js","_redux/controller/Masters/configuration.controller.js","_redux/middleware/Masters/configuration.saga.js","_redux/controller/Masters/product.controller.js","_redux/middleware/Masters/product.saga.js","_redux/middleware/Masters/materialcode.saga.js","_redux/middleware/index.js","index.js","config.js"],"names":["requestStatus","createAction","data","payload","checkAuthCred","checkAuthCredResponse","checkAuthOTP","checkAuthOTPResponse","getDecryptUserId","getDecryptUserIdResponse","GlobalAlert","type","message","onClose","show","className","role","class","aria-hidden","Login","dispatch","useDispatch","forceUpdate","useForceUpdate","useState","SimpleReactValidator","validator","user_name","password","userDetails","setUserDetails","messageAlert","setMessageAlert","isLoading","setIsLoading","useSelector","state","auth","checkAuthOtpResponse","getOtpResponse","otp","setOtp","showOtp","setShowOtp","handleChange","event","target","name","value","useEffect","loadingStatus","responseMessage","isValidCred","Object","keys","length","constructor","valid","localStorage","setItem","access_token","userName","userId","code","encrypt_userId","window","location","reload","id","href","src","alt","noValidate","onSubmit","e","preventDefault","fieldValid","login","showMessages","checkOTP","onChange","placeholder","FormHelperText","Fragment","autoComplete","disabled","style","backgroundImage","bg","CustomBreadcrumb","title","pathname","split","replace","to","getUserRightList","getFilterData","getFilterDataResponse","updateFilterData","updateFilterDataResponse","getUserRightListSecondResponse","getUserRightListThirdResponse","getUserRightListSecond","getUserRightListThird","getUserFilterList","getUserRightListResponse","setSelectedMenu","selectedMenuResponse","setSelectedSubMenu","selectedSubMenuResponse","getUserFilterListSuccess","toast","configure","showSuccessToast","msg","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","showErrorToast","error","buttonLoader","loading","label","onClick","color","Button","variant","disableElevation","getBrowseUserRight","response","pathArr","filter","x","transaction_name","toLowerCase","getAutoValue","key","arr","val","debounce","func","delay","debounceTimer","context","this","args","arguments","clearTimeout","setTimeout","apply","getUserId","getItem","SwipeableTemporaryDrawer","leftTrue","profileList","updateImage","React","right","setState","modalPassword","setmodalPassword","modal","setmodal","toggleDrawer","anchor","open","console","log","handelUpdateImage","files","formData","FormData","append","axios","method","url","nodeUrl","headers","then","status","handleLogOut","clear","SwipeableDrawer","onOpen","sx","width","onKeyDown","Divider","image_path","height","htmlFor","cursor","for","fontSize","Input","display","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","ListItemIcon","ListItemText","primary","Modal","size","centered","Body","Grid","container","rowSpacing","columnSpacing","xs","sm","md","item","TextField","first_name","last_name","mobile","email","moment","dob","format","gender","department_name","m_status","Father_husband_name","mother_name","Footer","flexDirection","alignItems","m","Typography","mt","margin","required","fullWidth","autoFocus","spacing","mb","memo","userService","post","apiEndpoint","domain","config","apiUrl","getOptions","catch","err","undefined","baseUrl","getOptionsLogin","get","localpost","localget","jsonpost","jsonUrl","image","getOptionImage","uploadImage","CommonController","getUserRightsList","getUserRightsListSecond","getUserRightsListThird","currenyMasking","tablePickerController","commonApiCall","commonApiCallFilter","commonJsonUpdate","commonApiFile","imageUpoad","a","alert","user_id","browse_id","body","Intl","NumberFormat","currency","minimumFractionDigits","parseFloat","toFixed","params","filter_value","pageNo","pageSize","sort_column","sort_order","queryString","map","join","_url","CircularProgressWithLabel","props","Box","CircularProgress","disableShrink","top","left","bottom","justifyContent","Math","round","time","MainBar","onMenuClick","anchorEl","setAnchorEl","profilePrev","setprofilePrev","setprofileList","Boolean","hrs","minutes","seconds","hrsValue","ceil","parseInt","minValue","secValue","setTime","profilePrevlist","result","setInterval","AppBar","elevation","Toolbar","disableGutters","isoWeek","IconButton","aria-label","aria-controls","aria-haspopup","Avatar","useCallback","MainMenu","list","onMenuChange","selectedMenu","index","transaction_id","display_name","Submenu","onSubMenuChange","selectedSubMenu","selectedSubMenusec","level","ThirdMenu","id1","id2","thirdMenu","Header","onHeaderClick","userRightListArr","setUserRightList","subMenuList","setSubMenuList","thirdMenuList","setThirdMenuList","urlLocation","getuserRightListResponse","common","userRightList","getuserLIstSecond","userRightListSecond","getuserLIstThird","userRightListThird","tempMenuIndex","findIndex","list2","RouteWithSubRoutes","route","path","render","routes","Dashboard","CustomPagination","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","defaultValue","current","setPage","Pagination","count","defaultTheme","createMuiTheme","useStyles","makeStyles","root","fill","palette","fillOpacity","marginTop","CustomNoRowsOverlay","classes","viewBox","focusable","fillRule","transform","cx","cy","rx","ry","d","DateFilter","onDateUpdate","dateUpdate","setDateUpdate","from_date","to_date","dateParams","setDateParams","getDateFilter","getDate","start_date","end_date","updateDateFilter","date","handleDateChange","DatePicker","animateYearScrolling","inputVariant","minDate","DCBrowseList","useHistory","browseListData","setBrowseListData","totalRecord","setTotalRecords","setLoading","setParams","bodyParam","getBrowseListData","recordsFiltered","onKeyUp","columns","field","headerName","flex","pagination","disableColumnFilter","rowsPerPageOptions","rowCount","paginationMode","onPageSizeChange","param","onPageChange","rowHeight","components","NoRowsOverlay","onSortModelChange","sort","rows","StyledTableCell","withStyles","head","backgroundColor","white","TableCell","SimpleTable","onDelete","onPreview","onEdit","TableContainer","Paper","Table","minWidth","TableHead","TableRow","whiteSpace","col","TableBody","row","border","scope","dateFormat","colSpan","EnhancedTableHead","column","order","onSelectAllClick","orderBy","onRequestSort","numSelected","padding","headCell","j","align","numeric","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","paper","marginBottom","table","clip","overflow","TablePicker","onPickerClose","selectedItems","isNode","apiType","apiBody","Array","isArray","selected","setSelected","records","setRecords","setRowCount","checked","newSelecteds","n","isAsc","isItemSelected","labelId","Radio","inputProps","handleRadioClick","Checkbox","tempselected","selectedIndex","push","splice","handleClick","colIndex","TablePagination","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","NewDCPackaging","selectedPackingList","setSelectedPackingList","showPackagingList","setShowPackagingList","itemListBody","setItemListBody","showItemList","setShowItemList","companyList","setCompanyList","selectedCompany","setSelectedCompany","entry_no","remarks","initialValues","setInitialValues","items","boxList","setBoxList","getEntryNo","dcList","tran_id","itemList","iList","forEach","togglePackagingList","toggleItemList","itemListColumn","disablePadding","packagingListColumn","getCompanyList","search","submitDC","company_id","Autocomplete","options","getOptionLabel","option","company_name","renderInput","onInput","box","_","removeBox","tempBox","handleIemList","tempBoxList","deletePickItem","Fab","DCIndex","setSeletedIndex","handleIndex","CcrAdd","tableList","settableList","dc_no","po_no","po_date","courier","vehicle_no","contact_person","cperson_id","no_of_box","box_no","description","qty","setFormData","contactlist","setcontactlist","saleslist","setsaleslist","accountList","setaccountList","salesOrderList","setsalesOrderList","getDCNo","getSalesOrder","getAccountContactList","cperson_name","submitMdc","so_id","carrier","vehicle","noofbox","manuDcDetail","id_no","autoOk","so_no","multiline","ActionButtons","onSearch","onAdd","CcrBrowse","amount","mdc_amount","actual_amount","chk_all","approval","totalRecords","renderCell","notification_date","getRowId","CcrInIndex","CcrOutAdd","CcrOutBrowse","CcrOutIndex","CourierAdd","CourierBrowse","ID","CourierInIndex","CourierOutBrowse","CourierOutAdd","CourierOutIndex","CourierInvoiceBrowse","CourierInvoiceAdd","CourierInvoiceIndex","DeliveryChallanMdcBrowse","totalrecord","AddDeliveryChallanMdc","challanType","indexOf","ChallanIndexMdc","SlWipAdd","SlWipBrowse","slType","sl_type","setBodyParam","totaldata","sl","so_date","ref_date","SlWipIndex","DeliveryChallanBrowse","amountFigures","setAmountFigures","AddDeliveryChallan","pickItemList","setPickItemList","showDITable","setDITable","di_no","di_id","di_date","ref_no","dis_doc_no","dis_doc_date","dis_through","destination","scan_using","dcDetail","showDIList","setShowDIList","selectedDI","setSelectedDI","toggleDIList","getItemDIList","submitMain","temp","getPreviewDC","dc_main","dc_detail","updateItemById","obj","request","mlfb_no","material_code","serial_no","handleItemChange","tempList","switchToInput","currentElemRow","currentElemInp","elem","input","nextElem","document","getElementById","getNextElem","focus","select","MenuItem","serial","onKeyPress","rate","ChallanIndex","JobWorkAdd","JobWorkBrowse","JobWorkIndex","JobWorkOutAdd","JobWorkOutBrowse","JobWorkOutIndex","MrnAddDc","MrnBrowseDc","docket_date","MrnDcIndex","MrnPoAdd","MrnPoBrowse","MrnPoIndex","RgpBrowseDc","RrgpAdd","ReturnableIndex","URLSearchParams","setindex","RrgpBrowse","RrgpIndex","Logistics","menuLength","exact","from","searchAccountMasterData","filters","searchAccountMasterDataSuccess","getAccountMasterFiltersList","getAccountMasterFiltersListSuccess","previewSelectedAccount","previewSelectedAccountSuccess","clearSelectedAccount","setAccountHide","setAccountVerified","selectedComboMLFBId","clearSelectedComboId","selectedGodownId","clearSelectedGodownId","selectedItemGroupId","clearSelectedItemGroupId","selectedEmployeeId","clearSelectedEmployeeId","selectedProductId","clearSelectedProductId","selectedAccountId","clearSelectedAccountId","LightTooltip","tooltip","boxShadow","shadows","Tooltip","BrowseAccount","accountType","filterList","AccountMaster","accountFilterList","filterjsonData","setfilter","region_name","group_name","verified","mark_engg","account_type","accountMasterFilter","setAccountMasterFilter","tempVerifed","setTempVerified","regionList","setRegionList","groupList","setGroupList","enggList","setEnggList","hide","short_name","Company","Address","Mobile","Email","FormControlLabel","control","defaultChecked","edit","updateVerifiedStatus","updateHideStatus","handleFilters","listregion","listGroup","listengg","tempIndex","filterpage","filterData","handleUpdateFilterData","FormControl","InputLabel","Select","region","group","engg","keyCode","getRowClassName","sr_no","ContactPerson","removeIndex","handleCPersonList","department_id","designation_name","designation_id","phone","extn","vcard_path","formContact","setformContact","file_name","filename","departmentList","designationList","dropDownValues","setDropDownValues","handleOnChange","values","department","designation","contact_id","contact_name","cpersonList","personList","itemIndex","GeneralInfo","handleAutoChange","pincodeList","ratingList","employeeList","seimenggList","pincode","rating","siemensEngg","group_id","address1","address2","pin_code_no","pin_code_id","city","district","pan_no","tin_no","phone1","phone2","fax","website","rating_name","rating_id","distance","credit_period","credit_limit","Engg_name","se_id","region_id","AccountTNC","pfList","exciseDutyList","salesTaxList","freightList","insuranceList","inspectionList","modList","deliveryList","octroiList","servicetaxList","travelChgrList","conveyanceList","loadingList","boardingList","validityList","paymentList","financeList","ldList","pf_id","pf_name","servicetax_id","servicetax_name","exciseduty_id","exciseduty_name","travel_id","travel_name","salestax_id","salestax_name","conveyance_id","conveyance_name","freight_id","freight_name","loading_id","loading_name","insurance_id","insurance_name","boarding_id","boarding_name","inspection_id","inspection_name","ld_id","ld_name","mode_of_dispatch_id","mode_of_dispatch_name","validity_id","validity_name","delivery_id","delivery_name","payment_id","payment_name","octroi_id","octroi_name","finance_id","finance_name","AddAccountMaster","handleAddAccount","selectedIdResponse","AllReducersMaster","accountId","dropdownList","setdropdownList","pin_id","pin_code","range","division","comm","ecc_no","ser_tax_no","cst_no","lst_no","pla_no","partyList","pf","exciseDuty","saleTax","freight","insurance","inspection","modeOfDispatch","delivery","octroi","serviceTax","travel","conveyance","boarding","validity","payment","finance","ld","key1","key2","tempFormData","trim","cperson","_formData","TCSAccount","tcs_per","setformData","saveForm","AccountsMaster","onActionClick","Loader","AddComboMLFB","dataLoading","setDataLoading","selectedComboMLFBIdResponse","comboMLFBId","mlfbProductList","setProductList","product_id","mlfbItems","insertParams","setInsertParams","selectedProduct","selectedMlfb","selectedParams","setSelectedParams","Date","onProductChoose","insertCombo","allValid","getProductList","disablePortal","newValue","indx","ComboMLFBBrowse","handleEdit","ComboMLFBIndex","ConfigGroupBrowse","onPreviewData","AddOrEditGroup","groupValues","setGroupValues","showMessage","insertForm","editData","Alert","severity","GroupIndex","editdata","seteditdata","Tabs","indicatorColor","Tab","preview","previewData","BrowsePincode","deleteData","AddOrEditPincode","formValues","setFormValues","PincodeIndex","RegionIndex","RatingIndex","DepartmentIndex","DesignationIndex","engg_name","roll_no","SiemensIndex","item_id","item_name","SupplyItemIndex","ConfigAccountIndex","scrollButtons","tab","getSelectedComponent","p_category_id","p_category_name","CategoryIndex","p_group_id","p_group_name","ItemIndex","uom_id","uom","UnitIndex","gg_id","gg_name","GGIndex","ConfigProductIndex","enq_type_id","enq_type","TypeIndex","enq_priority_id","enq_priority","PriorityIndex","enq_ref_id","enq_ref","ReferenceIndex","status_id","status_name","EnqStatusIndex","panel","ConfigEnquiryIndex","ledger_id","ledger_name","LedgerIndex","FinanceIndex","mtab_id","tab_id","tab_name","tabArray","sequence","groupTab","setgroupTab","mtab_name","deleteArraytab","arrayList","CostingTabsIndex","ConfigCostingIndex","IdClauseIndex","FrightIndex","InsuranceIndex","OctrolIndex","Pfindex","LoadingIndex","BoardingIndex","TravelChargeIndex","ConveyanceIndex","PaymentTermsIndex","DeliveryIndex","ValidityIndex","ModeOfDispatchIndex","InspectionIndex","ConfigSalesOrder","QuotationIndex","ConfigQuotation","courier_id","courier_name","CourierIndex","ConfigCourier","parent_id","main_form","listtransection","setlisttransection","listTransection","SelectProps","native","parent_transaction","MenuStructureIndex","tabs","borderRight","divider","ConfigurationMaster","transectionId","settransectionId","MenuList","setMenuList","SubMenuList","setloading","loadingsubMenu","setloadingsubMenu","101","102","103","104","105","106","107","144","getThirdMenu","menu_id","getfourthMenu","orientation","handleTransectionID","GeneralInfoEmp","listValues","onCheckChange","attendance_emp_code","user_code","card_no","f_h_name","pt_add1","pt_mobile","pt_phone","pr_check","pr_add1","pr_phone","pr_mobile","empList","desgnList","joining_date","leaving_date","leaving_reason","dispensary","depInchrList","department_incharge","OtherDetails","pf_code","esi_code","salary_p_mode","ctc_per_day","account_no","bank_name","nominee","AddEmployee","employeeId","selectedTab","setSelectedTab","setListValues","edit_button","disable","login_user_id","login_user_name","sign_path","tempData","hasOwnProperty","handleTabChange","EmployeeBrowse","employee_id","EmployeeIndex","AddGodown","godownId","godown_id","godown_name","address","GodownBrowse","GodownIndex","selectedValues","editIndex","category_id","lp_ref","list_price","black","AddItemGroupMaster","itemGroupId","addedItemList","setAddedItemList","productQtyItem","categoryNameList","uomList","groupNameList","itemNameList","descriptionList","setDropDownList","addDropDownList","setAddDropDownList","selectedDropDown","setSelectedDropDown","categoryList","handleFormData","handleFormDataList","getItemById","onItemRemove","Card","CardContent","disableClearable","objList","descList","mList","element","ItemGroupBrowse","ItemGroupIndex","searchMaterialCodeData","searchMaterialCodeDataSuccess","searchPartyName","searchPartyNameSuccess","materialCodeEditId","clearMaterialCodeEditId","MaterialCodeMasterController","getMaterialCodeBrowse","getPartyNameList","insertMaterialCode","getMaterialDetailById","deleteMaterialCode","AddMaterialCode","onCancel","partyNameListResponse","MaterialCodeMaster","partyNameList","selectedMaterialCodeId","selectedMaterialId","setPartyNameList","selectedParty","setSelectedParty","selectedCustomerList","setSelectedCustomerList","showPickCustomer","setPickCustomer","showPickItems","setPickItems","selectedItemsList","setSelectedItemsList","customer_id","renameKeyObj","codeCustomerItem","codeProductItem","newArr","filterProductList","newList","dis_per","unit_price","filterCustomerList","togglePickCustomer","togglePickItems","tempNewList","tempIndx","handleProductChange","isNaN","calculateDisPer","handleAddedItems","validateList","MaterialCodeBrowse","onEditMaterial","fromDate","toDate","setFilter","deleteMaterialData","MaterialCodeIndex","GeneralProduct","handleCheckChange","setCategoryList","setItemList","ggList","setGGList","setUomList","FormGroup","deactivate","siemens_product","product_code","category_name","grade","tax_rate","package","pur_rate","reorder_level","OtherInformation","diList","setDiList","doList","setDoList","aiList","setAiList","aoList","setAoList","fcList","setFcList","fmList","setFmList","di","di_value","Do","_do","do_value","ai","ai_value","ao","ao_value","fc","fc_value","fm","fm_value","AddNewProduct","productId","do","getProductListBrowse","getProductListBrowseSuccess","getCategoryList","getCategoryListSuccess","getLPRefList","getLPRefListSuccess","getGGNameList","getGGNameListSuccess","updateProductVerifiedStatus","updateProductVerifiedStatusSuccess","updateProductListPrice","updateProductLPRef","updateProductMovingNonMoving","BrowseProductMaster","setIsloading","stateLoading","ProductMaster","getProductListResponse","productList","getCategoryListResponse","getLpRefListResponse","lpRefList","getGGNameListResponse","ggNameList","setLpRefList","setGGNameList","selectedCategory","setSelectedCategory","moving_non_moving","category","productMasterFilter","setProductMasterFilter","handleDeleteRow","ref","gg","initialState","onBlur","updateListPriceValue","updateProductLPRefValue","updateProductMovingNonValue","ProductMasterIndex","setSelectedIndex","UserRightList","first_menu","second_menu","third_menu","menuList","selectedUserRight","setSelectedUserRight","filteredArray","setFilteredArray","getMenuList","menu","onUserRightChange","filteredIndex","employee","maxHeight","stickyHeader","view_right","insert_right","delete_right","print_right","approve_right","special_column","userRight","Masters","firstMenu","secondMenu","strict","AttendanceBrowse","setDate","emp_id","srno","ChangePassword","oldpass","newpass","confpass","errors","validateForm","Profile","ProfileLayout","SalesIssueBrowse","remarksModal","setRemarksModal","remarksList","setRemarksList","remarkLoading","setRemarkLoading","markEng","setMarkEng","setRemarks","chk_All","toggleRemarks","handleBodyParam","getRemarkList","enquiry_id","onRemarkChange","eng","Dialog","DialogTitle","DialogContent","List","remark","ListItem","ListItemAvatar","secondary","datetime","DialogActions","SalesIssueIndex","SalesMarketingBrowse","SalesMarketingIndex","SalesQuotationBrowse","SalesQuotationIndex","SalesCostingBrowse","SalesCostingIndex","SalesEnquiryBrowse","SalesIndex","SalesSiDiBrowse","SalesSiDiIndex","SalesSlSoPosBrowse","SalesSlSoPosIndex","SalesSlSoPosSummariseBrowse","SalesSlSoPosSummariseIndex","SoDetailBrowse","SoDetail","SalesSoAmdBrowse","SalesSoAmdIndex","Sales","ItemLedgerBrowse","sdate","getTime","edate","mlfbList","setMLFBList","selectedValue","setSelectedValue","SerialLedgerBrowse","mlfb","getMLFBList","StockBrowse","zero","Stock","AddSupportTicket","setErrors","attach_file","attach_file1","attach_file2","attachments","setAttachments","ticket_no","menu_name","transaction","priority","details","getSupportTicketData","handleFileChange","generateTicket","formdata","transaction_lst","handleMenuChange","SupportTicketBrowse","attachedFile","setAttachedFile","mtran_id","comments","rit_user","setEmpList","generated_by","getEmployeeList","saveRemarks","emp","emp_name","SupportTicketIndex","SupportTicketApprovalBrowse","history","SupportTicketApprovalIndex","AddTicketCommercial","changeTab","previewId","selectedTicket","setSelectedTicket","showPicker","setShowPicker","togglePicker","ticket_id","charges","getTicketById","ticket","String","approved_date","approved_charges","approved_remarks","SupportTicketCommericialBrowse","selectedPreviewId","SupportTicketCommercialIndex","approvalObj","selectedId","setSelectedId","SwitchApp","isAuthorisedByUrl","getDecryptUserDetailsResponse","decryptUserDetails","encrypt_user_id","MainLayout","showSideBar","setShowSidebar","main","subMenu","reduce","currentValue","i","light","contrastText","custom","contrastThreshold","tonalOffset","typography","fontFamily","App","isAuthorised","utils","DateFnsUtils","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","createReducer","isAuthenticated","token","actions","toString","action","produce","draft","expires_in","commonReducer","menuId","subMenuId","AccountMasterReducer","selectedAccountDetails","getAccountGroupBrowse","getAccountGroupBrowseSuccess","selectedConfigGroup","clearSelectedConfigGroup","updateAccountGroupInfo","updateAccountGroupInfoSuccess","clearAccountGroupInfoResponse","getPincodeBrowseList","getPincodeBrowseListSuccess","selectedPincodeInfo","clearSelectedPincode","updatePincodeInfo","clearPincodeInfoResponse","deleteSelectedPincode","deleteSelectedPincodeSuccess","ConfigurationMasterReducer","groupInfo","groupResponse","pincodeInfo","pincodeResponse","ProductMasterReducer","MaterialCodeMasterReducer","AllReducers","createRootReducer","combineReducers","AuthController","checkUserCred","getDecryptUserDetails","CheckUserCredSaga","CheckUserCredOTP","getDecryptUserIdSaga","AuthSaga","put","_checkUserCred","_checkUserOtp","takeLatest","updateFilterDataSaga","getfilterDataSaga","fetchUserRightListSecond","fetchUserRightListThird","fetchUserRightListSaga","setSelectedMenuSaga","setSelectedSubMenuSaga","getCurrentUserFiltersSaga","CommonSaga","second","third","AccountMasterController","browseAccountData","getAccountMasterFilters","getSelectedAccountDetails","accountHideUpdate","updateAccountVerified","searchAccountMasterSaga","getAccountFilterSaga","previewSelectedAccountSaga","setAccountHideSaga","setAccountVerifiedSaga","AccountMasterSaga","browseAccountMaster","accountDetails","ConfigurationMasterController","searchAccountGroupBrowse","searchPincodeBrowse","getAccountGroupBrowseSaga","updateAccountGroupInfoSaga","getPincodeBrowseSaga","updatePincodeInfoSaga","deletePincodeInfoSaga","ConfigurationMasterSaga","accountGroupList","updateAccountInfo","ProductMasterController","getProductBrowse","updateProductVerifyStatus","updateProductLpRef","getProductBrowseSaga","getCategoryListSaga","getLPRefListSaga","getGGNameListSaga","updateProductVerifiedStatusSaga","updateProductListPriceSaga","updateProductLPRefSaga","updateProductMovingSaga","ProductMasterSaga","listValue","getMaterialCodeBrowseSaga","getPartyNameListSaga","MaterialCodeMasterSaga","rootSaga","sagaMiddleware","createSagaMiddleware","all","reducer","store","createStore","applyMiddleware","run","ReactDOM","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.16d9a982.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg-5.6799cd8b.jpg\";","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const requestStatus = createAction(\r\n    \"REQUEST_STATUS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthCred = createAction(\r\n    \"CHECK_AUTH_CRED\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthCredResponse = createAction(\r\n    \"CHECK_AUTH_CRED_RESPONSE\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthOTP = createAction(\r\n    \"CHECK_LOGIN_OTP\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const checkAuthOTPResponse = createAction(\r\n    \"CHECK_AUTH_OTP_RESPONSE\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const getDecryptUserId = createAction(\r\n    \"GET_DECRYPT_USER_ID\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const getDecryptUserIdResponse = createAction(\r\n    \"GET_DECRYPT_USER_ID_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst GlobalAlert = ({ type , message, onClose, show }) => {\r\n    return show ? <div className={`alert alert-custom alert-light-${type} fade show mb-5`} role=\"alert\">\r\n    <div className=\"alert-icon\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n    </div>\r\n    <div className=\"alert-text\">{message}</div>\r\n    <div className=\"alert-close\">\r\n        <button type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\">\r\n                <i class=\"far fa-times-circle\"></i>\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div> : null\r\n}\r\n\r\nGlobalAlert.propTypes  = {\r\n    type:PropTypes.string,\r\n    message:PropTypes.string,\r\n    onClose:PropTypes.func,\r\n    show:PropTypes.bool.isRequired\r\n}\r\n\r\n\r\nexport default GlobalAlert;","import React, { useEffect, useState } from 'react';\r\nimport bg from '../../assets/image/bg-5.jpg';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport useForceUpdate from 'use-force-update';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { checkAuthCred, checkAuthOTP } from '../../_redux/actions/auth.action';\r\nimport GlobalAlert from '../../components/GlobalAlert';\r\n\r\nconst Login = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst forceUpdate = useForceUpdate();\r\n\tconst [validator , setValidator] = useState(new SimpleReactValidator())\r\n\tconst [userDetails , setUserDetails] = useState({\r\n\t\tuser_name:'',\r\n\t\tpassword:''\r\n\t});\r\n\r\n\tconst [messageAlert , setMessageAlert] = useState({\r\n\t\tshow:false,\r\n\t\tmessage:\"\",\r\n\t\ttype:\"\"\r\n\t});\r\n\r\n\tconst [isLoading , setIsLoading] = useState(false);\r\n\r\n\tconst checkAuthCredResponse = useSelector((state) => state.auth);\r\n\tconst checkAuthOtpResponse = useSelector((state) => state.auth.getOtpResponse);\r\n\r\n\tconst [otp , setOtp] = useState('');\r\n\r\n\tconst handleOtp = (event) => {\t\r\n\t\tsetOtp(event.target.value);\r\n\t}\r\n\r\n\tconst [showOtp , setShowOtp] = useState(false);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetUserDetails({...userDetails, \r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tconst checkLogin = () => {\r\n\t\tif(validator.fieldValid('Username') && validator.fieldValid('Password')){\r\n\t\t\tdispatch(checkAuthCred(userDetails))\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvalidator.showMessages();\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkOTP = () => {\r\n\t\tif(validator.fieldValid('OTP')){\r\n\t\t\tvar login = `grant_type=password&username=${userDetails.user_name}&password=${otp}`;\r\n\t\t\tdispatch(checkAuthOTP(login));\r\n\t\t\tsetIsLoading(true);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvalidator.showMessages();\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(checkAuthCredResponse){\r\n\t\t\tsetIsLoading(checkAuthCredResponse.loadingStatus);\r\n\t\t\tsetMessageAlert({...messageAlert,\r\n\t\t\t\tshow:checkAuthCredResponse.responseMessage !== \"\",\r\n\t\t    \tmessage:checkAuthCredResponse.responseMessage,\r\n\t\t\t\ttype:checkAuthCredResponse.isValidCred ? \"success\" : \"danger\"\r\n\t\t\t});\r\n\t\t\tsetShowOtp(checkAuthCredResponse.isValidCred);\r\n\t\t}\r\n\t},[checkAuthCredResponse]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!(Object.keys(checkAuthOtpResponse).length === 0 && checkAuthOtpResponse.constructor === Object)){\r\n\t\t\tif(checkAuthOtpResponse.valid){\r\n\t\t\t\tlocalStorage.setItem(\"token\",checkAuthOtpResponse.access_token);\r\n\t\t\t\tlocalStorage.setItem(\"login\",checkAuthOtpResponse.valid);\r\n\t\t\t\tlocalStorage.setItem(\"userName\",checkAuthOtpResponse.userName);\r\n\t\t\t\tlocalStorage.setItem(\"userId\",checkAuthOtpResponse.userId);\r\n\t\t\t\tlocalStorage.setItem(\"code\",checkAuthOtpResponse.code);\r\n\t\t\t\tlocalStorage.setItem(\"encrypt_userId\",checkAuthOtpResponse.encrypt_userId);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tsetMessageAlert({...messageAlert,\r\n\t\t\t\t\tshow:!checkAuthOtpResponse.valid,\r\n\t\t\t\t\tmessage:checkAuthOtpResponse.message,\r\n\t\t\t\t\ttype:checkAuthOtpResponse.valid ? \"success\" : \"danger\"\r\n\t\t\t\t});\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t},[checkAuthOtpResponse])\r\n\r\n    return(\r\n        <div className=\"d-flex flex-column flex-root h-100\">\r\n\t\t \r\n\t\t\t<div className=\"login login-2 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\r\n\t\t\t\t \r\n\t\t\t\t<div className=\"login-aside order-2 order-lg-1 d-flex flex-column-fluid flex-lg-row-auto bgi-size-cover bgi-no-repeat p-7 p-lg-10\">\r\n\t\t\t\t\t \r\n\t\t\t\t\t<div className=\"d-flex flex-row-fluid flex-column justify-content-between\">\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<div className=\"d-flex flex-column-fluid flex-column flex-center mt-5 mt-lg-0\">\r\n\t\t\t\t\t\t\t<a href=\"#\" className=\"mb-15 text-center\">\r\n\t\t\t\t\t\t\t\t<img src=\"assets/media/logos/logo-letter-1.png\" className=\"max-h-75px\" alt=\"\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t<div className=\"login-form login-signin\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t\t\t\t\t\t\t<h2 className=\"font-weight-bold\">Sign In</h2>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted font-weight-bold\">{showOtp ? \"OTP sent on email and whatsapp\" : \"Enter your username and password\"}</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t \t<GlobalAlert show={messageAlert.show} type={messageAlert.type} message={messageAlert.message} />\r\n\t\t\t\t\t\t\t\t<form className=\"form\" noValidate=\"novalidate\" onSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\tif(showOtp){\r\n\t\t\t\t\t\t\t\t\t\tcheckOTP();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse{\r\n\t\t\t\t\t\t\t\t\t\tcheckLogin();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{!showOtp ? <React.Fragment> <div className=\"form-group py-3 m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Email\" placeholder=\"Username\" name=\"user_name\" onChange={handleChange} autoComplete=\"off\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('Username', userDetails.user_name , 'required')}</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group py-3 border-top m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Password\" onChange={handleChange} placeholder=\"Password\" name=\"password\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('Password', userDetails.password , 'required')}</FormHelperText>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex flex-wrap justify-content-between align-items-center mt-3\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"checkbox-inline\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label className=\"checkbox checkbox-outline m-0 text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"remember\" />\r\n\t\t\t\t\t\t\t\t\t\t\t<span></span>Remember me</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\" id=\"kt_login_forgot\" className=\"text-muted text-hover-primary\">Forgot Password ?</a>\r\n\t\t\t\t\t\t\t\t\t</div> </React.Fragment> : <div className=\"form-group py-3 border-top m-0\">\r\n\t\t\t\t\t\t\t\t\t\t<input className=\"form-control h-auto border-0 px-0 placeholder-dark-75\" type=\"Password\" onChange={handleOtp} placeholder=\"OTP\"  name=\"otp\" />\r\n\t\t\t\t\t\t\t\t\t\t<FormHelperText className=\"text-danger\">{validator.message('OTP', otp , 'required|min:4|max:4')}</FormHelperText>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t<div className=\"form-group d-flex flex-wrap justify-content-between align-items-center mt-2\">\r\n\t\t\t\t\t\t\t\t\t\t<button id=\"kt_login_signin_submit\" className=\"btn btn-primary font-weight-bold w-100 px-9 py-4 my-3\" disabled={isLoading}>{isLoading ? <i class=\"fas fa-spinner fa-spin\"></i> : showOtp ? \"Submit\" : \"Sign In\"}</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<div className=\"d-flex flex-column-auto justify-content-between mt-15\">\r\n\t\t\t\t\t\t\t<div className=\"text-dark-50 font-weight-bold order-2 order-sm-1 my-2\">Developed and maintained by Rohin Infotech</div>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t \r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t\t<div className=\"order-1 order-lg-2 flex-column-auto flex-lg-row-fluid d-flex flex-column p-7\" style={{backgroundImage:`url(${bg})`}}>\r\n\t\t\t\t\t \r\n\t\t\t\t\t<div className=\"d-flex flex-column-fluid flex-lg-center\">\r\n\t\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\">\r\n\t\t\t\t\t\t\t<h1 className=\"display-2 font-weight-bold my-7 text-white\">ΔIAΓNO∑TIX</h1>\r\n\t\t\t\t\t\t\t{/* <p className=\"font-weight-bold font-size-lg text-white opacity-80\">The ultimate Bootstrap, Angular 8, React &amp; VueJS admin theme\r\n\t\t\t\t\t\t\t<br />framework for next generation web apps.</p> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t \r\n\t\t\t\t</div>\r\n\t\t\t\t \r\n\t\t\t</div>\r\n\t\t\t \r\n\t\t</div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport  default Login;"," \r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CustomBreadcrumb = () => {\r\n\r\n    const title = window.location.pathname.split(\"/\");\r\n \r\n\r\n    return(\r\n        <div className=\"subheader pb-2 subheader-transparent\">\r\n        <div className=\"container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">\r\n            <div className=\"d-flex align-items-center flex-wrap mr-1\">\r\n                <div className=\"d-flex align-items-baseline flex-wrap mr-5\">\r\n                    <h5 className=\"text-dark font-weight-bold my-1 mr-5 text-capitalize\">{title[1]?.replace(/-/g,\" \")}</h5>\r\n                    <ul className=\"breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm\">\r\n                        <li className=\"breadcrumb-item text-muted\">\r\n                            <Link to={`${title[1]}/${title[2]}/${title[3]}/${title[4]}`} className=\"text-muted text-capitalize\">{title[3]?.replace(/-/g,\" \")}</Link>\r\n                        </li>\r\n                       {title[3] ?  <li className=\"breadcrumb-item text-muted\">\r\n                            <Link to={`${title[1]}/${title[2]}/${title[3]}/${title[4]}/${title[5]}/${title[6]}`} className=\"text-muted text-capitalize\">{title[5]?.replace(/-/g,\" \")}</Link>\r\n                        </li> : null}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CustomBreadcrumb;","import { createAction } from \"@reduxjs/toolkit\";\r\nexport const getUserRightList = createAction(\"USER_RIGHTS_LIST\");\r\nexport const getFilterData = createAction(\"GET_FILTER_DATA\",(data)=>({\r\n  payload:data\r\n}));\r\nexport const getFilterDataResponse = createAction(\"GET_FILTER_DATA_RESPOPNSE\",(data)=>({\r\n  payload:data\r\n}));\r\nexport const updateFilterData = createAction(\"UPDATE_FILTER_DATA\",(data)=>({\r\n  payload:data\r\n}));\r\nexport const updateFilterDataResponse = createAction(\"Update_FILTER_DATA_RESPOPNSE\",(data)=>({\r\n  payload:data\r\n}));\r\nexport const getUserRightListSecondResponse = createAction(\r\n    \"USER_RIGHTS_LIST_SECOND_RESPONSE\",\r\n    (data) => ({ payload: data })\r\n  );\r\n  export const getUserRightListThirdResponse = createAction(\r\n    \"USER_RIGHTS_LIST_THIRD_RESPONSE\",\r\n    (data) => \r\n      ({ payload: data })\r\n  );\r\nexport const getUserRightListSecond = createAction(\r\n  \"USER_RIGHTS_LIST_SECOND\",\r\n  (data) => ({ payload: data })\r\n);\r\nexport const getUserRightListThird = createAction(\r\n  \"USER_RIGHTS_LIST_THIRD\",\r\n  (data) => ({ payload: data })\r\n);\r\nexport const getUserFilterList = createAction(\"USER_FILTER_LIST\");\r\nexport const getUserRightListResponse = createAction(\r\n  \"USER_RIGHTS_LIST_RESPONSE\",\r\n  (data) => ({\r\n      payload: data,\r\n    })\r\n);\r\nexport const setSelectedMenu = createAction(\"SELECTED_MENU\", (data) => ({\r\n  payload: data,\r\n}));\r\n\r\nexport const selectedMenuResponse = createAction(\r\n  \"SELECTED_MENU_RESPONSE\",\r\n  (data) => ({\r\n    payload: data,\r\n  })\r\n);\r\n\r\nexport const setSelectedSubMenu = createAction(\"SELECTED_SUB_MENU\", (data) => ({\r\n  payload: data,\r\n}));\r\n\r\nexport const selectedSubMenuResponse = createAction(\r\n  \"SELECTED_SUB_MENU_RESPONSE\",\r\n  (data) => ({\r\n    payload: data,\r\n  })\r\n);\r\n\r\nexport const getUserFilterListSuccess = createAction(\r\n  \"USER_FILTER_LIST_SUCCESS\",\r\n  (data) => ({\r\n    payload: data,\r\n  })\r\n);\r\n","import { Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nexport const showSuccessToast = (msg) => {\n  toast.success(msg, {\n    position: \"bottom-right\",\n    autoClose: 10000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\nexport const showErrorToast = (msg) => {\n  toast.error(msg, {\n    position: \"bottom-right\",\n    autoClose: 10000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"colored\",\n  });\n};\nexport const UserRight=()=>{\n  const thirdmenu=useSelector((state)=>state.common.userRightListThird)\n  console.log(thirdmenu)\n}\nexport const buttonLoader = (loading, label, onClick, color) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color={color}\n      disabled={loading}\n      onClick={onClick}\n      disableElevation\n    >\n      {loading ? <i class=\"fas fa-circle-notch fa-spin\"></i> : label}\n    </Button>\n  );\n};\nexport const getBrowseUserRight = (response) => {\n  const pathArr = window.location.pathname.split(\"/\").filter((x) => x != \"\");\n  // console.log(pathArr);\n  // console.log(response?.filter((x) => x.transaction_name.toLowerCase() == pathArr[2]));\n  return response?.filter((x) => x.transaction_name.toLowerCase() == pathArr[2])[0]\n};\n\nexport const getAutoValue = (key, arr, val) => {\n  const value = arr.filter((x) => x[key] === val);\n  return value && value.length > 0 ? value[0] : null;\n};\nexport const debounce = (func, delay) => {\n  let debounceTimer;\n  return function () {\n    const context = this;\n    const args = arguments;\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(() => func.apply(context, args), delay);\n  };\n};\nexport const getUserId = () => {\n  return localStorage.getItem(\"userId\");\n};\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport CameraAltIcon from \"@mui/icons-material/CameraAlt\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport LockResetIcon from \"@mui/icons-material/LockReset\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport KeyIcon from '@mui/icons-material/Key';\r\nimport user from \"../assets/image/user.jpg\";\r\nimport { Avatar, Grid, Input, Stack, TextField } from \"@mui/material\";\r\nimport { memo } from \"react\";\r\nimport moment from \"moment/moment\";\r\nimport { nodeUrl } from \"../config\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { showSuccessToast } from \"./common\";\r\nimport {Typography } from \"@material-ui/core\";\r\nfunction SwipeableTemporaryDrawer({ leftTrue, profileList, updateImage }) {\r\n  const id = localStorage.getItem(\"userId\");\r\n  const [state, setState] = React.useState({\r\n    right: false,\r\n  });\r\nconst [ modalPassword, setmodalPassword] = React.useState(false)\r\n  const [modal, setmodal] = React.useState(false);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log();\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const handleSubmitPassword=()=>{\r\n    console.log(\"cvbnm,\")\r\n  }\r\n  const handelUpdateImage = async (e) => {\r\n    let value = e.target.files[0];\r\n    let formData = new FormData();\r\n    formData.append(\"file_path\", value);\r\n    formData.append(\"user_id\", id);\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${nodeUrl}user/user_image_upload`,\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    }).then((data) => {\r\n      if (data.status === 200) {\r\n        showSuccessToast(data.message);\r\n        updateImage();\r\n      }\r\n    });\r\n  };\r\n  const handleLogOut = () => {\r\n    localStorage.clear();\r\n    window.location = \"/login\";\r\n  };\r\n  const handleModalClose = () => {\r\n    setmodal(false);\r\n  };\r\n  React.useEffect(() => {\r\n    setState(leftTrue);\r\n    toggleDrawer(\"right\", state.right);\r\n  }, [leftTrue]);\r\n  const list = (anchor) => (\r\n    <Box\r\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\r\n      role=\"presentation\"\r\n      // onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <h4 className=\"py-5 ml-3\">Profile</h4>\r\n      <Divider />\r\n      {/* <img src={user} class=\"rounded mx-auto d-block py-5\" alt=\"...\"></img> */}\r\n      <div>\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          className=\"mx-auto d-block m-3\"\r\n          src={`${nodeUrl + profileList.image_path}`}\r\n          sx={{ width: 120, height: 120 }}\r\n        />\r\n        <div className=\"custom_edit\">\r\n          <label htmlFor=\"file-upload\" style={{ cursor: \"pointer\" }}>\r\n            <CameraAltIcon for=\"file-upload\" fontSize=\"large\" />\r\n          </label>\r\n          <Input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            sx={{ display: \"none\" }}\r\n            onChange={handelUpdateImage}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* {profileList.map(value=>{})} */}\r\n      {/* <Typography>xcvbnm</Typography> */}\r\n      <list\r\n        sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"background.paper\" }}\r\n        component=\"nav\"\r\n        // onClose={toggleDrawer(\"right\", false)}\r\n        aria-labelledby=\"nested-list-subheader\"\r\n      >\r\n        {/* <ListItemButton onClick={() =>{ setmodal(true);toggleDrawer(\"right\", false)}}> */}\r\n        <ListItemButton\r\n          onClick={() => {\r\n            setmodal(true);\r\n          }}\r\n        >\r\n          <ListItemIcon>\r\n            <PersonIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Profile\"\r\n            onClick={toggleDrawer(\"right\", false)}\r\n          />\r\n        </ListItemButton>\r\n        <ListItemButton onClick={()=>setmodalPassword(true)}>\r\n          <ListItemIcon>\r\n            <LockResetIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Reset Password\"\r\n          onClick={toggleDrawer(\"right\", false)}\r\n          />\r\n        </ListItemButton>\r\n        <ListItemButton>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Setting\" />\r\n        </ListItemButton>\r\n        <ListItemButton onClick={handleLogOut}>\r\n          <ListItemIcon>\r\n            <LogoutIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"LogOut\" />\r\n        </ListItemButton>\r\n      </list>\r\n    </Box>\r\n  );\r\n  return (\r\n    <div>\r\n      <SwipeableDrawer\r\n        anchor={\"right\"}\r\n        open={state.right}\r\n        onClose={toggleDrawer(\"right\", false)}\r\n        onOpen={toggleDrawer(\"right\", true)}\r\n      >\r\n        {list(\"right\")}\r\n      </SwipeableDrawer>\r\n      <Modal\r\n        show={modal}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        {/* <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Modal heading\r\n        </Modal.Title>\r\n      </Modal.Header> */}\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          className=\"mx-auto d-block m-3\"\r\n          src={`${nodeUrl + profileList.image_path}`}\r\n          sx={{ width: 150, height: 150 }}\r\n        />\r\n        <Modal.Body>\r\n          <Grid\r\n            container\r\n            rowSpacing={2}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n          >\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Name\"\r\n                value={profileList.first_name + \" \" + profileList.last_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mobile No\"\r\n                value={profileList.mobile}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Email\"\r\n                value={profileList.email}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"D.O.B\"\r\n                value={moment(profileList.dob).format(\"DD/MM/YYYY\")}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Gender\"\r\n                value={profileList.gender}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Department Name\"\r\n                value={profileList.department_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Relationship\"\r\n                value={profileList.m_status}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Father Or Husband Name\"\r\n                value={profileList.Father_husband_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mother Name\"\r\n                value={profileList.mother_name}\r\n                variant=\"standard\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button onClick={handleModalClose}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal\r\n        show={modalPassword}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Body>\r\n          {/* <Stack\r\n            spacing={2}\r\n            direction=\"column\"\r\n            justifyContent=\"flex-end\"\r\n            alignItems=\"center\"\r\n          >\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <stack spacing={2}>\r\n              <Button onClick={handleModalClose}>Close</Button>\r\n              <Button onClick={handleModalClose}>Close</Button>\r\n            </stack>\r\n          </Stack> */}\r\n\r\n<Box\r\n          sx={{\r\n            // marginTop: ,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 2, bgcolor: '#3949ac' }}>\r\n            {/* <LockOutlinedIcon /> */}\r\n            <KeyIcon/>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h2\">\r\n            Reset Password\r\n          </Typography>\r\n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n              label=\"New Password\"\r\n              name=\"password\"\r\n              // autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              label=\"Confirm Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <Grid container spacing={2}>\r\n              <Grid item >\r\n              <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={handleSubmitPassword}\r\n              >\r\n                Continue\r\n               </Button>\r\n              </Grid>\r\n              <Grid item>\r\n               <Button\r\n              variant=\"text\"\r\n              color=\"error\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n              onClick={()=>{setmodalPassword(false)}}>\r\n                Cancel\r\n               </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button onClick={handleModalClose}>Close</Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default memo(SwipeableTemporaryDrawer);\r\n","import config from \"./config\";\r\nimport axios from \"axios\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nexport const userService = {\r\n  post,\r\n  login,\r\n  get,\r\n  localpost,\r\n  localget,\r\n  jsonpost,\r\n  image,\r\n  uploadImage\r\n  // getStatus\r\n};\r\n\r\nfunction post(apiEndpoint, payload, domain) {\r\n  return axios\r\n    .post(\r\n      `${domain === \"node\" ? config.nodeUrl : config.apiUrl}` + apiEndpoint,\r\n      payload,\r\n      getOptions()\r\n    )\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction uploadImage(apiEndpoint, payload) {\r\n  return axios\r\n    .post(config.nodeUrl + apiEndpoint, payload, getOptionImage())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction image(apiEndpoint, payload) {\r\n  return axios\r\n    .post(config.apiUrl + apiEndpoint, payload, getOptionImage())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction jsonpost(apiEndpoint, payload) {\r\n  return axios\r\n    .post(config.jsonUrl + apiEndpoint, payload, getOptions())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction localpost(apiEndpoint, payload) {\r\n  return axios\r\n    .post(config.nodeUrl + apiEndpoint, payload, getOptions())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction localget(apiEndpoint) {\r\n  return axios\r\n    .get(config.nodeUrl + apiEndpoint, getOptions())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction get(apiEndpoint, domain) {\r\n  return axios\r\n    .get(\r\n      `${domain === \"node\" ? config.nodeUrl : config.apiUrl}` + apiEndpoint,\r\n      getOptions()\r\n    )\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction login(apiEndpoint, payload) {\r\n  return axios\r\n    .post(config.baseUrl + apiEndpoint, payload, getOptionsLogin())\r\n    .then((response) => {\r\n      return response;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      if (err.response !== undefined && err.response.status === 401) {\r\n        // window.open('/','_self');\r\n      } else {\r\n        //alert('operation not able to perform');\r\n      }\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction getOptions() {\r\n  var options = {};\r\n  options.headers = {\r\n    Authorization: \"Bearer \" + token, //the token is a variable which holds the token\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  };\r\n}\r\n\r\nfunction getOptionsLogin() {\r\n  var options = {};\r\n  options.headers = {\r\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  };\r\n}\r\n\r\nfunction getOptionImage() {\r\n  var options = {};\r\n  options.headers = {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  };\r\n}\r\n","import { userService } from \"../../services\";\r\nexport const CommonController = {\r\n  getUserRightsList,\r\n  getUserRightsListSecond,\r\n  getUserRightsListThird,\r\n  currenyMasking,\r\n  getUserFilterList,\r\n  tablePickerController, \r\n  commonApiCall,\r\n  commonApiCallFilter,\r\n  commonJsonUpdate,\r\n  commonApiFile,\r\n  updateFilterData,\r\n  getFilterData,\r\n  imageUpoad\r\n};\r\nasync function getUserRightsList() {\r\n  try {\r\n    let apiEndpoint = `menu/menu_list_level1?user_id=${localStorage.getItem(\r\n      \"userId\"\r\n    )}`;\r\n\r\n    let response = await userService.get(apiEndpoint,\"node\");\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\nasync function getUserRightsListSecond(id) {\r\n  try {\r\n    let apiEndpoint = `menu/menu_list_level2?menu_id=${id}`;\r\n    let response = await userService.post(apiEndpoint,{user_id:localStorage.getItem(\r\n      \"userId\"\r\n    )},\"node\");\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\nasync function getUserRightsListThird(id) {\r\n  try {\r\n    let apiEndpoint = `menu/menu_list_level3?menu_id=${id}`;\r\n\r\n    let response = await userService.post(apiEndpoint,{user_id:localStorage.getItem(\r\n      \"userId\"\r\n    )},\"node\");\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\nasync function getFilterData(browse_id) {\r\n  try {\r\n    let apiEndpoint = `json/read_json?user_id=${localStorage.getItem(\r\n      \"userId\")}&browse_id=${browse_id}`;\r\n    let response = await userService.post(apiEndpoint,{},\"node\");\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\nasync function updateFilterData(body) {\r\n  try {\r\n    let apiEndpoint = `json/write_json`\r\n    let response = await userService.post(apiEndpoint,body,\"node\");\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\nasync function getUserFilterList() {\r\n  try {\r\n    let apiEndpoint = `user/get_user_filter?user_id=${localStorage.getItem(\r\n      \"userId\"\r\n    )}`;\r\n\r\n    let response = await userService.localget(apiEndpoint);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) { \r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function currenyMasking(val) {\r\n  var format = new Intl.NumberFormat(\"en-IN\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n    minimumFractionDigits: 2,\r\n  });\r\n  // var x = val.toString();\r\n  // var lastThree = x.substring(x.length-3);\r\n  // var otherNumbers = x.substring(0,x.length-3);\r\n  // if(otherNumbers != '')\r\n  //     lastThree = ',' + lastThree;\r\n  // var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n  return format.format(parseFloat(val).toFixed(2));\r\n}\r\n\r\nasync function tablePickerController(url, params, domain = \"\") {\r\n  try {\r\n    let apiEndpoint = `${url}?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n    let response = await userService.post(apiEndpoint, {}, domain);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function commonApiCall(url, params, body, domain) {\r\n  try {\r\n    let apiEndpoint = `${url}?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n    let response = await userService.post(apiEndpoint, body, domain);\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function commonApiFile(url, body) {\r\n  try {\r\n    let apiEndpoint = url;\r\n    let response = await userService.image(apiEndpoint, body);\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function imageUpoad(url,body){\r\n  try{\r\n   let  response=await userService.uploadImage(url, body);\r\n   if (response) {\r\n    return response.data;\r\n  } else {\r\n    if (response.data.status !== 500) {\r\n      alert(response.data);\r\n    }\r\n  }\r\n  }catch(err){\r\n    console.log(\"error\", err);\r\n    return null;\r\n  }\r\n}\r\nasync function commonApiCallFilter(url, body, type = \"post\", domain = \"\") {\r\n  \r\n  try {\r\n    let apiEndpoint = `${url}`;\r\n    let response;\r\n    if (type === \"post\") {\r\n      response = await userService.post(apiEndpoint, body, domain);\r\n    } else {\r\n      let queryString = Object.keys(body)\r\n        .map((key) => key + \"=\" + body[key])\r\n        .join(\"&\");\r\n      let _url = url + \"?\" + queryString;\r\n      response = await userService.get(_url, domain);\r\n    }\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function commonJsonUpdate(url, body) {\r\n  try {\r\n    let apiEndpoint = `${url}`;\r\n    let response = await userService.jsonpost(apiEndpoint, body);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport logo from \"../assets/image/logo.png\";\r\n\r\nimport user from \"../assets/image/user.jpg\";\r\nimport moment from \"moment\";\r\nimport AirplayIcon from \"@material-ui/icons/Airplay\";\r\nimport SwipeableTemporaryDrawer from \"./leftModal\";\r\nimport { CommonController } from \"../_redux/controller/common.controller\";\r\nimport { id } from \"date-fns/locale\";\r\nimport { nodeUrl } from \"../config\";\r\nconst auth = localStorage.getItem(\"login\");\r\nconst userName = localStorage.getItem(\"userName\");\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress\r\n        disableShrink\r\n        size={35}\r\n        variant=\"determinate\"\r\n        {...props}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography\r\n          variant=\"h6\"\r\n          component=\"div\"\r\n          color=\"textSecondary\"\r\n        >{`${Math.round(props.time)}`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nconst MainBar = ({ onMenuClick }) => {\r\n  const [anchorEl, setAnchorEl] =useState(null);\r\n  const [profilePrev, setprofilePrev] = useState({right:false})\r\n  const [profileList, setprofileList] = useState(\"\")\r\n  const open = Boolean(anchorEl);\r\n  const [time, setTime] = useState({\r\n    hrs: moment().format(\"h\"),\r\n    minutes: moment().format(\"mm\"),\r\n    seconds: moment().format(\"ss\"),\r\n    hrsValue: Math.ceil((parseInt(moment().format(\"h\")) * 8 + 1) / 10) * 10,\r\n    minValue: Math.ceil((parseInt(moment().format(\"mm\")) * 2 + 1) / 10) * 10,\r\n    secValue: Math.ceil((parseInt(moment().format(\"ss\")) * 1.6 + 1) / 10) * 10,\r\n  });\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n    const profilePrevlist=async()=>{\r\n     await CommonController.commonApiCallFilter('user/profile_prev',{user_id:localStorage.getItem(\"userId\")},\"post\",\"node\")\r\n     .then(result=>{\r\n      if(result.status===200){\r\n        setprofileList(result.data)\r\n      }\r\n     }).catch(err=>{\r\n      console.log(err)\r\n     })\r\n    }\r\n  const handleClose = () => {\r\nsetprofilePrev({...profilePrev,right:true})\r\n    setAnchorEl(null);\r\n  };\r\n  const calculateTime = () => {\r\n    setInterval(() => {\r\n      setTime({\r\n        ...time,\r\n        hrsValue: Math.ceil((parseInt(moment().format(\"h\")) * 8 + 1) / 10) * 10,\r\n        hrs: moment().format(\"h\"),\r\n        secValue:\r\n          Math.ceil((parseInt(moment().format(\"ss\")) * 1.6 + 1) / 10) * 10,\r\n        seconds: moment().format(\"ss\"),\r\n        minValue:\r\n          Math.ceil((parseInt(moment().format(\"mm\")) * 2 + 1) / 10) * 10,\r\n        minutes: moment().format(\"mm\"),\r\n      });\r\n    }, 1000);\r\n  };\r\n  const handleSwitch = () => {\r\n    window.location = `http://erp.diag.in/SwitchLogin.aspx?${localStorage.getItem(\r\n      \"encrypt_userId\"\r\n    )}`;\r\n  };\r\n  useEffect(() => {\r\n    calculateTime();\r\n    profilePrevlist();\r\n  },[]);\r\n  return (\r\n    <AppBar position=\"static\" className=\"theme_bg\" elevation={0}>\r\n      <Toolbar variant=\"dense\" disableGutters>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-2 d-flex align-items-center\">\r\n              <div className=\"logo-header\">\r\n                {/* <img src={logo} className=\"img-fluid\" /> */}\r\n                <h4 className=\"mb-0\">DIAGNOSTIC</h4>\r\n                <p className=\"logo-text mb-0\">\r\n                  <small>Diagnostic Automation</small>\r\n                  <span className=\"ml-2\">13.5</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-10 text-right\">\r\n              <div className=\"row justify-content-end\">\r\n                <div className=\"col-md-1 text-center py-1 pr-0\">\r\n                  <div className=\"clock_container\">\r\n                    <p className=\"mb-0\">Week </p>\r\n                    <h2 className=\"mb-0 mt-2 mx-auto\">{moment().isoWeek()}</h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 py-1\">\r\n                  <div className=\"clock_container\">\r\n                    <p className=\"mb-2 text-center\">\r\n                      {moment().format(\"dddd DD MMM YYYY\")}\r\n                    </p>\r\n                    <div className=\"clock_circle d-flex justify-content-around\">\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          className=\"hrs\"\r\n                          value={time.hrsValue}\r\n                          time={time.hrs}\r\n                        />\r\n                      </div>\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          color=\"secondary\"\r\n                          value={time.minValue}\r\n                          time={time.minutes}\r\n                        />\r\n                      </div>\r\n                      <div className=\"circle_box\">\r\n                        <CircularProgressWithLabel\r\n                          className=\"seconds\"\r\n                          value={time.secValue}\r\n                          time={time.seconds}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-2 text-right d-flex align-items-center py-1\">\r\n                  <div className=\"clock_container ml-auto\">\r\n                    <p className=\"mb-0\">Switch</p>\r\n                    <Button\r\n                      variant=\"default\"\r\n                      className=\"bg-white switch_btn mx-3 mt-2\"\r\n                      // variant=\"contained\"\r\n                      onClick={handleSwitch}\r\n                      disableElevation\r\n                    >\r\n                      <AirplayIcon />\r\n                    </Button>\r\n                  </div>\r\n                  {auth && (\r\n                    <div className=\"clock_container ml-3\">\r\n                      <p className=\"mb-0\">{userName}</p>\r\n                      <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        className=\"pt-2 pb-0\"\r\n                        onClick={handleClose}\r\n                        color=\"inherit\"\r\n                      >\r\n                        <div className=\"user_header d-flex align-items-center\">\r\n                          <Avatar alt=\"Remy Sharp\"  src={`${nodeUrl + profileList.image_path}`} />\r\n                          {/* <span className=\"ml-3\">{userName}</span> */}\r\n                        </div>\r\n                      </IconButton>\r\n                      {/* <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{\r\n                          vertical: \"bottom\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                          vertical: \"top\",\r\n                          horizontal: \"center\",\r\n                        }}\r\n                        open={open}\r\n                        onClick={handleClose}\r\n                      >\r\n                        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleLogOut}>Logout</MenuItem>\r\n                      </Menu> */}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Toolbar>\r\n     <SwipeableTemporaryDrawer leftTrue={profilePrev} profileList={profileList} updateImage={useCallback(()=>profilePrevlist(),[profileList])}/>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default MainBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n \r\n\r\n\r\n\r\nconst MainMenu = (props) => {\r\n    const { list, onMenuChange } = props;\r\n    const selectedMenu = window.location.pathname.split(\"/\")[1];\r\n    return(\r\n        <div className=\"header-bottom\">\r\n                <div className=\"px-3\">\r\n                    <div className=\"header-navs header-navs-left\">\r\n                    <ul className=\"menu-nav mb-0 list-unstyled d-flex flex-wrap\">\r\n                            {list.length > 0 ? list.map(( item, index ) => {\r\n                                return <li className=\"menu-item \" key={\"menulist\" + index}>\r\n                                    <Link onClick={() => onMenuChange(item.transaction_id)} className={\"menu-link py-2 px-4 rounded mr-2 d-inline-block \" + (selectedMenu === (item.display_name.replace(/\\s+/g, '-').toLowerCase()) ? \"bg-danger  text-white\" : \"\")} to={`/${item.transaction_name.toLowerCase()}/${item.transaction_id}`}> <span className=\"menu-text\">{item.transaction_name}</span></Link>\r\n                                </li>\r\n                            }) : null}\r\n                        \r\n                     </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu;\r\n\r\n// + (selectedSubMenu === (item.menu_name.replace(/\\s+/g, '-').toLowerCase()) ? \"active\" : \"\")","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Submenu = (props) => {\r\n  const { list, onSubMenuChange } = props;\r\n  const selectedMenu = window.location.pathname.split(\"/\")[1];\r\n  const selectedSubMenu = window.location.pathname.split(\"/\")[3];\r\n  const selectedSubMenusec = window.location.pathname.split(\"/\")[2];\r\n  return (\r\n    <div className=\"header-bottom submenu\">\r\n      <div className=\"px-3\">\r\n        <div className=\"header-navs header-navs-left\">\r\n          <ul className=\"menu-nav mb-0 list-unstyled d-flex flex-wrap\">\r\n            {list.length > 0\r\n              ? list.map((item, index) => {\r\n                  if (item.level ===2) {\r\n                    // console.log(\r\n                    //   item.transaction_name\r\n                    //     .replace(/[^a-zA-Z ]/g, \"\")\r\n                    //     .replace(/\\s+/g, \"-\")\r\n                    //     .toLowerCase()\r\n                    // ); \r\n                    return (\r\n                      <li className=\"menu-item\" key={\"sublist\" + index}>\r\n                        <Link\r\n                          onClick={()=>onSubMenuChange(item.transaction_id)}\r\n                          className={\r\n                            \"menu-link py-2 px-4 rounded mr-2 d-inline-block \" +\r\n                            (selectedSubMenu ===\r\n                            item.transaction_name\r\n                              .replace(/[^a-zA-Z ]/g, \"\")\r\n                              .replace(/\\s+/g, \"-\")\r\n                              .toLowerCase()\r\n                              // ? \"active text-success\"\r\n                              ? \"bg-danger text-white\"\r\n                              : \"\")\r\n                          }\r\n                          to={`/${selectedMenu.toLowerCase()}/${selectedSubMenusec}/${item.transaction_name\r\n                            .replace(/[^a-zA-Z ]/g, \"\")\r\n                            .replace(/\\s+/g, \"-\")\r\n                            .toLowerCase()}/${item.transaction_id}`}\r\n                        >\r\n                          {\" \"}\r\n                          <span className=\"menu-text\">\r\n                            {item.transaction_name}\r\n                          </span>\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  }\r\n                })\r\n              : null}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Submenu;\r\n\r\n// + (selectedSubMenu === (item.transaction_name.replace(/\\s+/g, '-').toLowerCase()) ? \"active\" : \"\")\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ThirdMenu = (props) => {\r\n  const { list, onMenuChange } = props;\r\n  const selectedMenu = window.location.pathname.split(\"/\")[1];\r\n  const id1 = window.location.pathname.split(\"/\")[2];\r\n  const selectedSubMenu = window.location.pathname.split(\"/\")[3];\r\n  const id2 = window.location.pathname.split(\"/\")[4];\r\n  const thirdMenu = window.location.pathname.split(\"/\")[5];\r\n\r\n  return (\r\n    <div className=\"header-bottom third\">\r\n      <div className=\"px-3\">\r\n        <div className=\"header-navs header-navs-left\">\r\n          <ul className=\"menu-nav mb-0 list-unstyled d-flex flex-wrap\">\r\n            {list.length > 0\r\n              ? list.map((item, index) => {\r\n                  if (item.level ===3) {\r\n                    // console.log(\r\n                    //   item.transaction_name\r\n                    //     .replace(/[^a-zA-Z ]/g, \"\")\r\n                    //     .replace(/\\s+/g, \"-\")\r\n                    //     .toLowerCase()\r\n                    // ); \r\n                  \r\n                    return (\r\n                      <li className=\"menu-item\" key={\"sublist\" + index}>\r\n                        <Link\r\n                          onClick={onMenuChange}\r\n                          className={\r\n                            \"menu-link py-2 px-4 rounded mr-2 d-inline-block \" +\r\n                            (thirdMenu ===\r\n                            item.transaction_name\r\n                              .replace(/[^a-zA-Z ]/g, \"\")\r\n                              .replace(/\\s+/g, \"-\")\r\n                              .toLowerCase()\r\n                              ? \"bg-danger text-white\"\r\n                              : \"\")\r\n                          }\r\n                          to={`/${selectedMenu?.toLowerCase()}/${id1}/${selectedSubMenu?.toLowerCase()}/${id2}/${item.transaction_name\r\n                            .replace(/[^a-zA-Z ]/g, \"\")\r\n                            .replace(/\\s+/g, \"-\")\r\n                            .toLowerCase()}/${item.transaction_id}`}\r\n                        >\r\n                          {\" \"}\r\n                          <span className=\"menu-text\">\r\n                            {item.transaction_name}\r\n                          </span>\r\n                        </Link>\r\n                      </li>\r\n                    );\r\n                  }\r\n                })\r\n              : null}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThirdMenu;\r\n\r\n// + (selectedSubMenu === (item.transaction_name.replace(/\\s+/g, '-').toLowerCase()) ? \"active\" : \"\")\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserRightList,\r\n  getUserRightListSecond,\r\n  getUserRightListThird,\r\n} from \"../_redux/actions/common.action\";\r\nimport MainBar from \"./appbar\";\r\nimport MainMenu from \"./main_menu\";\r\nimport Submenu from \"./sub_menu\";\r\nimport ThirdMenu from \"./third_menu\";\r\nconst Header = ({ onHeaderClick }) => {\r\n  const dispatch = useDispatch();\r\n  const [userRightListArr, setUserRightList] = useState([]);\r\n  const [subMenuList, setSubMenuList] = useState([]);\r\n  const [thirdMenuList, setThirdMenuList] = useState([])\r\n  \r\n  let urlLocation=window.location.pathname\r\n  .split(\"/\")\r\n  .filter((val) => val !== \"\");\r\n  // console.log(urlLocation)\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const getuserLIstSecond=useSelector(\r\n    (state) => state.common.userRightListSecond\r\n  );\r\n  const getuserLIstThird=useSelector(\r\n    (state) => state.common.userRightListThird\r\n  );\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n  useEffect(()=>{\r\n    dispatch(getUserRightList());\r\n    dispatch(getUserRightListSecond(urlLocation[1]));\r\n    parseInt(urlLocation[3])===12?dispatch(getUserRightListThird(1)):dispatch(getUserRightListThird(parseInt(urlLocation[3])))\r\n  },[])\r\n  useEffect(() => {\r\n    if (getuserRightListResponse?.data?.length > 0) {\r\n      setUserRightList(getuserRightListResponse.data);\r\n    }\r\n    if (getuserLIstSecond?.data?.length > 0) {\r\n      setSubMenuList(getuserLIstSecond.data);\r\n    }\r\n    if (getuserLIstThird?.data?.length > 0) {\r\n      setThirdMenuList(getuserLIstThird.data);\r\n    }else{\r\n      setThirdMenuList([]);\r\n    }\r\n  }, [getuserRightListResponse,getuserLIstSecond,getuserLIstThird]);\r\n  \r\n  const handleMenuChange =(id) => {\r\n    var tempMenuIndex = userRightListArr.findIndex((x) => x.transaction_id === id);\r\n    if (userRightListArr[tempMenuIndex].display_name !== \"Profile\") {\r\n     dispatch(getUserRightListSecond(id));\r\n     dispatch(getUserRightListThird(1));\r\n    //  console.log(\"cvgbhn\")\r\n    //  setTimeout((tt) => {\r\n    // console.log(tt)\r\n    //   parseInt(urlLocation[3])===12?dispatch(getUserRightListThird(1)):dispatch(getUserRightListThird(parseInt(urlLocation[3])))\r\n    //   console.log(urlLocation[3])\r\n    //  },8000,urlLocation);\r\n    //  console.log(\"g\")\r\n   \r\n    }\r\n  };\r\n  const handleSubMenu = (id) => {\r\n    if(subMenuList.length>0){\r\n    id===12?dispatch(getUserRightListThird(1)):dispatch(getUserRightListThird(id))\r\n      \r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <MainBar onMenuClick={() => onHeaderClick()} />\r\n      <MainMenu list={userRightListArr} onMenuChange={handleMenuChange} />\r\n      {subMenuList.length > 0 ? <Submenu list={subMenuList} onSubMenuChange={handleSubMenu} /> : null}\r\n      {(thirdMenuList.length > 0)&&(subMenuList.length>0) ? <ThirdMenu list={thirdMenuList} list2={subMenuList} /> : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Route } from \"react-router\";\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n    return (\r\n      <Route\r\n        path={route.path}\r\n        render={props => (\r\n          // pass the sub-routes down to keep nesting\r\n          <route.component {...props} routes={route.routes} />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n  export default RouteWithSubRoutes;","import React from 'react';\r\n\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n    <React.Fragment>\r\n              hello dashboard\r\n    </React.Fragment>\r\n          \r\n    )\r\n}\r\n\r\nexport default Dashboard;","import { Pagination } from \"@mui/material\";\r\nimport {\r\n  useGridApiContext,\r\n  useGridSelector,\r\n  gridPageCountSelector,\r\n  gridPageSelector,\r\n} from \"@mui/x-data-grid\";\r\nimport React from \"react\";\r\n\r\nexport default function CustomPagination() {\r\n  const apiRef = useGridApiContext();\r\n  const page = useGridSelector(apiRef, gridPageSelector);\r\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"input_frame mr-3\">\r\n        <label className=\"mr-2\">Row Per Page:</label>\r\n        <select\r\n          onChange={(event) => apiRef.current.setPageSize(event.target.value)}\r\n        >\r\n          {state.options.rowsPerPageOptions.map((row, index) => {\r\n            return (\r\n              <option key={\"page\" + index} value={row}>\r\n                {row}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div> */}\r\n      <div className=\"input_frame\">\r\n        <label className=\"mr-2\">Go to Page:</label>\r\n        <input\r\n          type=\"number\"\r\n          defaultValue={page}\r\n          onChange={(event) => {\r\n            if (parseInt(event.target.value) > 0) {\r\n              apiRef.current.setPage(parseInt(event.target.value));\r\n            }\r\n          }}\r\n          style={{ width: 50 }}\r\n        />\r\n      </div>\r\n\r\n      <Pagination\r\n        color=\"primary\"\r\n        className=\"justify-content-end\"\r\n        count={pageCount}\r\n        page={page}\r\n        onChange={(event, value) => {\r\n          apiRef.current.setPage(value);\r\n        }}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { createMuiTheme, makeStyles } from \"@material-ui/core\";\r\nimport { GridOverlay } from \"@material-ui/data-grid\";\r\n\r\nconst defaultTheme = createMuiTheme();\r\nconst useStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      flexDirection: 'column',\r\n      '& .ant-empty-img-1': {\r\n        fill: theme.palette.type === 'light' ? '#aeb8c2' : '#262626',\r\n      },\r\n      '& .ant-empty-img-2': {\r\n        fill: theme.palette.type === 'light' ? '#f5f5f7' : '#595959',\r\n      },\r\n      '& .ant-empty-img-3': {\r\n        fill: theme.palette.type === 'light' ? '#dce0e6' : '#434343',\r\n      },\r\n      '& .ant-empty-img-4': {\r\n        fill: theme.palette.type === 'light' ? '#fff' : '#1c1c1c',\r\n      },\r\n      '& .ant-empty-img-5': {\r\n        fillOpacity: theme.palette.type === 'light' ? '0.8' : '0.08',\r\n        fill: theme.palette.type === 'light' ? '#f5f5f5' : '#fff',\r\n      },\r\n    },\r\n    label: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  }),\r\n  { defaultTheme },\r\n);\r\nexport default function CustomNoRowsOverlay() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <GridOverlay className={classes.root}>\r\n        <svg\r\n          width=\"120\"\r\n          height=\"100\"\r\n          viewBox=\"0 0 184 152\"\r\n          aria-hidden\r\n          focusable=\"false\"\r\n        >\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <g transform=\"translate(24 31.67)\">\r\n              <ellipse\r\n                className=\"ant-empty-img-5\"\r\n                cx=\"67.797\"\r\n                cy=\"106.89\"\r\n                rx=\"67.797\"\r\n                ry=\"12.668\"\r\n              />\r\n              <path\r\n                className=\"ant-empty-img-1\"\r\n                d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\r\n              />\r\n              <path\r\n                className=\"ant-empty-img-2\"\r\n                d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\r\n              />\r\n              <path\r\n                className=\"ant-empty-img-3\"\r\n                d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\r\n              />\r\n            </g>\r\n            <path\r\n              className=\"ant-empty-img-3\"\r\n              d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\r\n            />\r\n            <g className=\"ant-empty-img-4\" transform=\"translate(149.65 15.383)\">\r\n              <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\r\n              <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\r\n            </g>\r\n          </g>\r\n        </svg>\r\n        <div>No Rows</div>\r\n      </GridOverlay>\r\n    );\r\n  }\r\n  ","import { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CommonController } from \"../_redux/controller/common.controller\";\r\nimport { showErrorToast } from \"./common\";\r\n\r\nconst DateFilter = ({ onDateUpdate }) => {\r\n  const [dateUpdate, setDateUpdate] = useState(0)\r\n  const [dateParams, setDateParams] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    from_date: null,\r\n    to_date: null,\r\n  });\r\n\r\n  const { from_date, to_date } = dateParams;\r\n  const getDateFilter = async () => {\r\n    try {\r\n      let user_id=localStorage.getItem(\"userId\")\r\n      await CommonController.commonApiCallFilter(\r\n        \"user/date_filter\",\r\n        {user_id:user_id},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status===200) {\r\n         const [getDate]=data.data;\r\n         setDateParams({...dateParams,from_date:getDate.start_date,to_date:getDate.end_date\r\n         })\r\n          onDateUpdate();\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n\r\n  const updateDateFilter = async () => {\r\n    try {\r\n      let date = { ...dateParams };\r\n      date.from_date = moment(date.from_date).format(\"MM/DD/yyyy\");\r\n      date.to_date = moment(date.to_date).format(\"MM/DD/yyyy\");\r\n      await CommonController.commonApiCallFilter(\r\n        \"user/insert_date_filter\",\r\n        date,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status===200) {\r\n\r\n          getDateFilter()\r\n        } else {\r\n          showErrorToast(data.msg);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n \r\n\r\n  const handleDateChange = (name, date) => {\r\n    setDateParams({ ...dateParams, [name]: date });\r\n    setDateUpdate(dateUpdate+1);\r\n  };\r\n  useEffect(() => {\r\ngetDateFilter()\r\n  },[])\r\n  \r\n  useEffect(() => {\r\n    if (from_date && to_date) {\r\n      updateDateFilter();\r\n    }\r\n  }, [dateUpdate]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-md-2\">\r\n        <DatePicker\r\n          label=\"From Date\"\r\n          value={from_date}\r\n          format=\"dd/MM/yyyy\"\r\n          onChange={(date) => handleDateChange(\"from_date\", date)}\r\n          animateYearScrolling\r\n          inputVariant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n      </div>\r\n      <div className=\"col-md-2\">\r\n        <DatePicker\r\n          label=\"To Date\"\r\n          value={to_date}\r\n          onChange={(date) => handleDateChange(\"to_date\", date)}\r\n          animateYearScrolling\r\n          format=\"dd/MM/yyyy\"\r\n          minDate={from_date}\r\n          inputVariant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DateFilter;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport DateFilter from \"../../components/dateFilter\";\n\nconst DCBrowseList = (props) => {\n  const history = useHistory();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"dc/browseDCPackage\",\n        params,\n        bodyParam,\n\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.recordsFiltered);\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    if (param !== 0) {\n      setParams({ ...params, pageNo: param });\n    }\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n\n  return (\n    <>\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n        </div>\n      </div>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"entry_no\",\n              headerName: \"Entry No.\",\n              width: 100,\n            },\n\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 120,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 400,\n            },\n\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 400,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DCBrowseList;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#1280cf\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport const SimpleTable = ({ columns, rows, onDelete, onPreview, onEdit }) => {\n  return (\n    <TableContainer className=\"mt-4\" component={Paper}>\n      <Table size=\"small\" sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell style={{ whiteSpace: \"nowrap\" }}>\n              {\"Sr No.\"}\n            </StyledTableCell>\n            {columns.map((col, index) => {\n              return (\n                <StyledTableCell style={{ whiteSpace: \"nowrap\" }} key={col.id}>\n                  {col.label}\n                </StyledTableCell>\n              );\n            })}\n            {(onDelete || onPreview || onEdit) && (\n              <StyledTableCell>Actions</StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.length > 0 ? (\n            rows.map((row, index) => (\n              <TableRow\n                key={rows[columns[0].id]}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell style={{ whiteSpace: \"nowrap\" }} scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((col, index) => {\n                  return (\n                    <TableCell\n                      style={{ whiteSpace: \"nowrap\" }}\n                      key={\"row_id\" + index}\n                      scope=\"row\"\n                    >\n                      {col.dateFormat\n                        ? moment(row[col.id]).format(\"DD/MM/YYYY\")\n                        : row[col.id]}\n                    </TableCell>\n                  );\n                })}\n                {(onDelete || onPreview || onEdit) && (\n                  <TableCell scope=\"row\">\n                    <div className=\"action_btns\">\n                      {onPreview && (\n                        <i\n                          class=\"fas fa-search mr-2\"\n                          onClick={() => onPreview(row)}\n                        ></i>\n                      )}\n                      {onEdit && (\n                        <i\n                          class=\"far fa-edit mr-2\"\n                          onClick={() => onEdit(row)}\n                        ></i>\n                      )}\n                      {onDelete && (\n                        <i\n                          class=\"far fa-trash-alt mr-2\"\n                          onClick={() => onDelete(row)}\n                        ></i>\n                      )}\n                    </div>\n                  </TableCell>\n                )}\n              </TableRow>\n            ))\n          ) : (\n            <TableCell className=\"text-center\" colSpan={12}>\n              No Records Found\n            </TableCell>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport { makeStyles, Button, withStyles, Radio } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { CommonController } from \"../_redux/controller/common.controller\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#1280cf\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nfunction EnhancedTableHead(props) {\n  const {\n    column,\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected = 0,\n    rowCount,\n    onRequestSort,\n  } = props;\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\" style={{ width: 100 }}></TableCell>\n\n        {column.map((headCell, j) => {\n          if (j < column.length && column[j + 1]) {\n            return (\n              <TableCell\n                key={column[j + 1].id}\n                align={column[j + 1].numeric ? \"right\" : \"left\"}\n                //    padding={column[j + 1].disablePadding ? \"none\" : \"normal\"}\n                sortDirection={orderBy === column[j + 1].id ? order : false}\n              >\n                <TableSortLabel\n                  active={orderBy === column[j + 1].id}\n                  direction={orderBy === column[j + 1].id ? order : \"asc\"}\n                  onClick={createSortHandler(column[j + 1].id)}\n                >\n                  {column[j + 1].label}\n                  {orderBy === column[j + 1].id ? (\n                    <span className={classes.visuallyHidden}>\n                      {order === \"desc\"\n                        ? \"sorted descending\"\n                        : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n            );\n          }\n        })}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 30,\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport const TablePicker = ({\n  columns,\n  url,\n  onSubmit,\n  onPickerClose,\n  selectedItems,\n  type,\n  isNode = \"\",\n  apiType = \"\",\n  apiBody = null,\n}) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [selected, setSelected] = React.useState(\n    selectedItems && Array.isArray(selectedItems)\n      ? selectedItems.length > 0\n        ? []\n        : selectedItems\n      : selectedItems\n  );\n  const [records, setRecords] = useState([]);\n  const [rowCount, setRowCount] = useState(0);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  useEffect(() => {\n    setSelected(selectedItems);\n  }, [selectedItems]);\n\n  useEffect(async () => {\n    setLoading(true);\n\n    if (apiBody) {\n      await CommonController.commonApiCall(url, params, apiBody, isNode).then(\n        (data) => {\n          setRecords(data.data);\n          setRowCount(data.recordsFiltered);\n        }\n      );\n    } else {\n      await CommonController.tablePickerController(url, params, isNode).then(\n        (data) => {\n          setRecords(data.data);\n          setRowCount(data.recordsFiltered);\n        }\n      );\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(async () => {\n    setLoading(true);\n    if (apiBody) {\n      await CommonController.commonApiCall(url, params, apiBody, isNode).then(\n        (data) => {\n          setRecords(data.data);\n          setRowCount(data.recordsFiltered);\n        }\n      );\n    } else {\n      await CommonController.tablePickerController(url, params, isNode).then(\n        (data) => {\n          setRecords(data.data);\n          setRowCount(data.recordsFiltered);\n        }\n      );\n    }\n    setLoading(false);\n  }, [params]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc =\n      params.sort_order !== \"\" && params.sort_order === \"asc\" ? \"desc\" : \"asc\";\n    setParams({ ...params, sort_order: isAsc, sort_column: property });\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = records.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, row) => {\n    if (Array.isArray(selected)) {\n      var tempselected = [...selected];\n      const selectedIndex = tempselected.findIndex(\n        (x) => x[columns[0].id] === row[columns[0].id]\n      );\n      \n      if (selectedIndex === -1) {\n        tempselected.push(row);\n      } else {\n        tempselected.splice(selectedIndex, 1);\n      }\n\n      setSelected(tempselected);\n    }\n  };\n\n  const handleRadioClick = (event, row) => {\n    if (!Array.isArray(selected)) {\n      setSelected(row);\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setParams({ ...params, pageNo: newPage });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setParams({ ...params, pageSize: parseInt(event.target.value, 10) });\n  };\n\n  const isSelected = (id) => {\n    if (Array.isArray(selected)) {\n      return selected.findIndex((x) => x[columns[0].id] === id) !== -1;\n    } else {\n      return selected && selected[columns[0].id] === id;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"small\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              column={columns}\n              numSelected={\n                selected ? (Array.isArray(selected) ? selected.length : 1) : 0\n              }\n              order={params.sort_order}\n              orderBy={params.sort_column}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={params.pageSize}\n            />\n            <TableBody>\n              {loading ? (\n                <TableRow>\n                  <TableCell colSpan={12} className=\"text-center\">\n                    Please wait\n                  </TableCell>\n                </TableRow>\n              ) : records.length > 0 ? (\n                records.map((row, index) => {\n                  if (index <= records.length) {\n                    const isItemSelected = isSelected(row[columns[0].id]);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow key={row[columns[0].id]}>\n                        <TableCell padding=\"checkbox\">\n                          {type && type == \"single\" ? (\n                            <Radio\n                              color=\"primary\"\n                              checked={isItemSelected}\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                              onChange={(event) => handleRadioClick(event, row)}\n                            />\n                          ) : (\n                            <Checkbox\n                              color=\"primary\"\n                              checked={isItemSelected}\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                              onChange={(event) => handleClick(event, row)}\n                            />\n                          )}\n                        </TableCell>\n                        {columns.map((col, colIndex) => {\n                          if (columns[colIndex + 1]) {\n                            return (\n                              <TableCell\n                                style={{ whiteSpace: \"nowrap\" }}\n                                key={colIndex + 2}\n                                align=\"left\"\n                              >\n                                {columns[colIndex + 1].dateFormat\n                                  ? moment(\n                                      row[columns[colIndex + 1].id]\n                                    ).format(\"DD/MM/YYYY\")\n                                  : row[columns[colIndex + 1].id]}\n                              </TableCell>\n                            );\n                          }\n                        })}\n                      </TableRow>\n                    );\n                  }\n                })\n              ) : (\n                <TableRow>\n                  <TableCell>No Data</TableCell>\n                </TableRow>\n              )}\n              {/* {records.length > 0 && (\n                <TableRow\n                  style={{ height: (false ? 33 : 53) * records.length }}\n                >\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )} */}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 15, 25]}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n          component=\"div\"\n          count={rowCount}\n          rowsPerPage={params.pageSize}\n          page={params.pageNo}\n          // onPageChange={}\n          // onRowsPerPageChange={}\n        />\n      </Paper>\n      <div className=\"container-fluid text-right\">\n        <Button\n          color=\"primary\"\n          className=\"mr-2\"\n          disableElevation\n          variant=\"contained\"\n          onClick={() => onSubmit(selected)}\n        >\n          Submit\n        </Button>\n        <Button\n          onClick={onPickerClose}\n          color=\"primary\"\n          disableElevation\n          variant=\"contained\"\n        >\n          Close\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { Button, Fab } from \"@material-ui/core\";\nimport { Autocomplete, TextField } from \"@mui/material\";\n\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { SimpleTable } from \"../../components/basic-table\";\nimport {\n  debounce,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../components/common\";\nimport { TablePicker } from \"../../components/table-picker\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\n\nconst NewDCPackaging = () => {\n  const [selectedPackingList, setSelectedPackingList] = useState([]);\n  const [showPackagingList, setShowPackagingList] = useState(false);\n  const [itemListBody, setItemListBody] = useState(null);\n  const [showItemList, setShowItemList] = useState(null);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n\n  const [initialValues, setInitialValues] = useState({\n    date: moment().format(\"DD/MM/YYYY\"),\n    entry_no: \"\",\n    remarks: \"\",\n  });\n  const [boxList, setBoxList] = useState([\n    {\n      items: [],\n    },\n  ]);\n\n  useEffect(() => {\n    getEntryNo();\n  }, []);\n  useEffect(() => {\n    setItemListBody({\n      dcList: selectedPackingList.map((item) => ({ id: item.tran_id })),\n      itemList: [],\n    });\n  }, [selectedPackingList]);\n\n  useEffect(() => {\n    if (boxList.length > 1) {\n      let iList = [];\n      boxList.forEach((x) => {\n        iList.push.apply(iList, x.items);\n      });\n\n      setItemListBody({\n        dcList: selectedPackingList.map((item) => ({ id: item.tran_id })),\n        itemList: iList,\n      });\n    }\n  }, [boxList]);\n\n  const togglePackagingList = () => setShowPackagingList(!showPackagingList);\n  const toggleItemList = (index) => setShowItemList(index);\n\n  const handlePackagingList = (data) => {\n    setSelectedPackingList(data);\n    togglePackagingList();\n  };\n\n  const handleIemList = (data, index) => {\n    let tempBox = [...boxList];\n    tempBox[index].items = data;\n    setBoxList(tempBox);\n    toggleItemList(null);\n  };\n\n  const removeBox = (index) => {\n    setBoxList(boxList.filter((item, _) => _ !== index));\n  };\n\n  const addBox = () => {\n    setBoxList([\n      ...boxList,\n      {\n        items: [],\n      },\n    ]);\n  };\n\n  const itemListColumn = [\n    {\n      id: \"tran_id\",\n      numeric: false,\n      disablePadding: true,\n      label: \"ID\",\n    },\n    {\n      id: \"mlfb_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"MLFB No.\",\n    },\n    {\n      id: \"dc_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"DC No.\",\n    },\n    {\n      id: \"item_name\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Item Name\",\n    },\n    {\n      id: \"description\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Description\",\n    },\n\n    {\n      id: \"qty\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Quantity\",\n    },\n    {\n      id: \"serial_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Serial No.\",\n    },\n  ];\n\n  const packagingListColumn = [\n    {\n      id: \"tran_id\",\n      numeric: false,\n      disablePadding: true,\n      label: \"ID\",\n    },\n    {\n      id: \"date\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Date\",\n      dateFormat: true,\n    },\n    {\n      id: \"dc_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"DC No.\",\n    },\n    {\n      id: \"Company\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Company\",\n    },\n    {\n      id: \"Contact\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Contact\",\n    },\n    {\n      id: \"so_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"SO No.\",\n    },\n    {\n      id: \"dispatch_through\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Dispatch Through\",\n    },\n    {\n      id: \"Destination\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Destination\",\n    },\n    {\n      id: \"datetime\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Datetime\",\n      dateFormat: true,\n    },\n    {\n      id: \"status\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Status\",\n    },\n    {\n      id: \"comments\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Comments\",\n    },\n    {\n      id: \"remarks\",\n      numeric: false,\n      disablePadding: true,\n      label: \"Remarks\",\n      flex: 1,\n    },\n    {\n      id: \"di_no\",\n      numeric: false,\n      disablePadding: true,\n      label: \"DI No.\",\n    },\n  ];\n\n  const getCompanyList = async (search) => {\n    try {\n      let response = await CommonController.commonApiCallFilter(\n        \"dc/pickCompany\",\n        { search: search },\n        \"get\",\n        \"node\"\n      );\n\n      if (response.status === 200) {\n        setCompanyList(response.result);\n      } else {\n        showErrorToast(response.message);\n      }\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const deletePickItem = (item, index) => {\n    let tempBoxList = [...boxList];\n    tempBoxList[index].items = tempBoxList[index].items.filter(\n      (x) => x.tran_id !== item.tran_id\n    );\n\n    setBoxList(tempBoxList);\n  };\n\n  const getEntryNo = async () => {\n    try {\n      let response = await CommonController.commonApiCallFilter(\n        \"dc/generateDCNo\",\n        {},\n        \"get\",\n        \"node\"\n      );\n\n      if (response.status === 200) {\n        setInitialValues({ ...initialValues, entry_no: response.data });\n      } else {\n        showErrorToast(response.message);\n      }\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const submitDC = async () => {\n    try {\n      if (initialValues.remarks === \"\") {\n        showErrorToast(\"Please enter remarks\");\n      } else if (boxList.filter((x) => x.items.length < 1).length > 0) {\n        showErrorToast(\"Please choose items for box\");\n      } else if (selectedPackingList.length < 1) {\n        showErrorToast(\"Please choose dc packaging\");\n      } else {\n        const body = {\n          tran_id: \"0\",\n          date: initialValues.date,\n          entry_no: initialValues.entry_no,\n          company_id: selectedCompany.company_id,\n          remarks: initialValues.remarks,\n          boxList: boxList,\n          user_id: localStorage.getItem(\"userId\"),\n        };\n        let response = await CommonController.commonApiCallFilter(\n          \"dc/insertDc\",\n          body,\n          \"post\",\n          \"node\"\n        );\n\n        if (response.status === 200) {\n          showSuccessToast(response.message);\n          window.location.reload();\n        } else {\n          showErrorToast(response.message);\n        }\n      }\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n  return (\n    <div className=\"container-fluid mt-5 pt-5\">\n      <div className=\"row\">\n        <div className=\"entry-details d-flex col-md-6\">\n          <div className=\"mr-3\">\n            <h5>Date</h5>\n            <TextField\n              value={initialValues.date}\n              fullWidth\n              label=\"\"\n              variant=\"outlined\"\n              size=\"small\"\n              disabled\n            />\n          </div>\n          <div className=\"mr-3\">\n            <h5>Entry No.</h5>{\" \"}\n            <TextField\n              value={initialValues.entry_no}\n              fullWidth\n              label=\"\"\n              variant=\"outlined\"\n              size=\"small\"\n              disabled\n            />\n          </div>\n          <div>\n            <h5>Remarks</h5>\n            <TextField\n              label=\"Remarks\"\n              fullWidth\n              value={initialValues.remarks}\n              variant=\"outlined\"\n              size=\"small\"\n              name=\"remarks\"\n              onChange={(e) =>\n                setInitialValues({ ...initialValues, remarks: e.target.value })\n              }\n            />\n          </div>\n        </div>\n        <div className=\"col-md-4  ml-auto \">\n          <h5>Pick Company</h5>\n          <div className=\"d-flex align-items-center\">\n            <Autocomplete\n              id=\"combo-box-demo\"\n              options={companyList}\n              fullWidth\n              size=\"small\"\n              getOptionLabel={(option) => option.company_name}\n              value={selectedCompany}\n              onChange={(e, value) => setSelectedCompany(value)}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  onInput={(e) => {\n                    debounce(getCompanyList(e.target.value, 200));\n                  }}\n                  label=\"\"\n                  variant=\"outlined\"\n                />\n              )}\n            />\n            {!showPackagingList && selectedCompany && (\n              <Button\n                color=\"primary\"\n                className=\"mx-3 w-25\"\n                disableElevation\n                variant=\"contained\"\n                onClick={togglePackagingList}\n              >\n                Pick DC\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n      <hr />\n      {showPackagingList && (\n        <TablePicker\n          selectedItems={selectedPackingList}\n          columns={packagingListColumn}\n          url={\"dc/pickDC\"}\n          isNode=\"node\"\n          apiBody={{ company_id: selectedCompany?.company_id }}\n          apiType=\"post\"\n          onPickerClose={togglePackagingList}\n          onSubmit={handlePackagingList}\n        />\n      )}\n\n      {selectedPackingList.length > 0 && (\n        <SimpleTable\n          columns={packagingListColumn}\n          rows={selectedPackingList}\n          // onDelete={handleAddedCustomer}\n        />\n      )}\n\n      {itemListBody &&\n        itemListBody.dcList.length > 0 &&\n        boxList.map((box, index) => {\n          return (\n            <div className=\"box-list mt-5 pt-5\" key={index}>\n              <div className=\"d-flex\">\n                <h2 className=\"box-header\">Box no. {index + 1}</h2>\n                <div className=\" ml-auto\">\n                  {showItemList !== index && (\n                    <Button\n                      color=\"primary\"\n                      className=\"mr-2\"\n                      disableElevation\n                      variant=\"contained\"\n                      onClick={() => toggleItemList(index)}\n                    >\n                      Pick Item\n                    </Button>\n                  )}\n\n                  <Button\n                    color=\"primary\"\n                    className=\"mr-2 ml-auto\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => removeBox(index)}\n                  >\n                    Remove Box\n                  </Button>\n                </div>\n              </div>\n              <hr />\n              {showItemList === index && (\n                <TablePicker\n                  selectedItems={box.items}\n                  columns={itemListColumn}\n                  url={\"dc/pickDCItem\"}\n                  isNode=\"node\"\n                  apiBody={itemListBody}\n                  apiType=\"post\"\n                  onPickerClose={() => toggleItemList(null)}\n                  onSubmit={(data) => handleIemList(data, index)}\n                />\n              )}\n              {box.items.length > 0 && showItemList !== index && (\n                <SimpleTable\n                  columns={itemListColumn}\n                  rows={box.items}\n                  onDelete={(item) => deletePickItem(item, index)}\n                />\n              )}\n            </div>\n          );\n        })}\n\n      {selectedPackingList.length > 0 && (\n        <div className=\"float-action-btn\">\n          <Fab\n            variant=\"extended\"\n            onClick={addBox}\n            size=\"medium\"\n            color=\"primary\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n            Add Box\n          </Fab>\n        </div>\n      )}\n      <hr />\n      <div className=\"w-100 mt-3 text-right\">\n        <Button\n          color=\"primary\"\n          className=\"mr-2\"\n          disableElevation\n          variant=\"contained\"\n          onClick={submitDC}\n        >\n          Save\n        </Button>\n        <Button color=\"primary\" disableElevation variant=\"contained\">\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NewDCPackaging;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport DCBrowseList from \"./browse\";\nimport NewDCPackaging from \"./form\";\n\nconst DCIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Packaging\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? <DCBrowseList /> : <NewDCPackaging />}\n      </div>\n    </div>\n  );\n};\n\nexport default DCIndex;\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst CcrAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CcrAdd;\r\n","import React from \"react\";\r\n\r\nconst ActionButtons = ({ onPreview, onEdit, onDelete, onSearch, onAdd ,row}) => {\r\n  \r\n  return (\r\n    <div className=\"action_btns\"> \r\n      {onSearch && <i class=\"icon-2x text-dark-50 flaticon2-search-1\"></i>}\r\n      {onPreview && <i class=\"fas fa-search mr-2\" onClick={onPreview}></i>}\r\n      {onEdit && <i class=\"far fa-edit mr-2\" onClick={onEdit}></i>}\r\n      {onDelete && <i class=\"far fa-trash-alt mr-2\" onClick={()=>onDelete(row)}></i>}\r\n      {onAdd && <i class=\"far fa-plus-alt mr-2\" onClick={onAdd}></i>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionButtons;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst CcrBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_ccrin\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n  \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"ccrin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"cperson_name\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_no\",\r\n              headerName: \"Notification No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_date\",\r\n              headerName: \"Notification Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.notification_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"carrier\",\r\n                headerName: \"carrier\",\r\n                width: 120,\r\n              },\r\n              {\r\n                field: \"destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CcrBrowse;\r\n","import React,{useState} from 'react'\r\nimport CcrAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport CcrBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function CcrInIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        CCR In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CcrBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CcrAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CcrOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CcrOutAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\n// import { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CcrOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_ccrout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n              field: \"ccrout_no\",\r\n              headerName: \"JWOUT No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ccrin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"cperson_name\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_no\",\r\n              headerName: \"Notification No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"notification_date\",\r\n              headerName: \"Notification Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.notification_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"carrier\",\r\n                headerName: \"carrier\",\r\n                width: 120,\r\n              },\r\n              {\r\n                field: \"destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CcrOutBrowse;\r\n","import React,{useState} from 'react'\r\nimport CcrAdd from './add';\r\nimport CcrOutAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport CcrOutBrowse from './browse';\r\nimport CcrBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function CcrOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        CCR Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CcrOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CcrOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst CourierAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst CourierBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierin\",\r\n         params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"tran_no\",\r\n              headerName: \"Tran No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            // {\r\n            //   field: \"so_no\",\r\n            //   headerName: \"So No\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              headerName: \"Description\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"box_no\",\r\n              headerName: \"Box No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"no_of_packets\",\r\n              headerName: \"No Of Packets\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n\r\n            // {\r\n            //   field: \"comments\",\r\n            //   headerName: \"Comments\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierBrowse;\r\n","import React,{useState} from 'react'\r\nimport CourierAdd from './add'\r\nimport CourierBrowse from './browse'\r\nexport default function CourierInIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                \r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CourierBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CourierOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"tran_no\",\r\n              headerName: \"Tran No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            // {\r\n            //   field: \"so_no\",\r\n            //   headerName: \"So No\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Description\",\r\n              headerName: \"Description\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"box_no\",\r\n              headerName: \"Box No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"no_of_packets\",\r\n              headerName: \"No Of Packets\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n\r\n            // {\r\n            //   field: \"comments\",\r\n            //   headerName: \"Comments\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n          \r\n          ]}  \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierOutBrowse;\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CourierOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierOutAdd;\r\n","import React,{useState} from 'react'\r\n\r\nimport CourierOutBrowse from './browse';\r\nimport CourierOutAdd from './add'\r\n\r\nexport default function CourierOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <CourierOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst CourierInvoiceBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_courierinvoice\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"comp_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CourierInvoiceBrowse;\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst CourierInvoiceAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourierInvoiceAdd;\r\n","import React,{useState} from 'react'\r\nimport CourierInvoiceBrowse from './browse'\r\nimport CourierInvoiceAdd from './add'\r\nexport default function CourierInvoiceIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        Courier Invoice\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                <CourierInvoiceBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <CourierInvoiceAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst DeliveryChallanMdcBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  console.log(browseListData)\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/mdc/browsemdc\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          console.log(data)\r\n          setTotalRecords(data.totalrecord);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n         \r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"D.C No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"so_no\",\r\n              headerName: \"So No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n           \r\n            {\r\n              field: \"party_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"carrier\",\r\n              headerName: \"Carrier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"vehicle\",\r\n              headerName: \"Vehicle No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"value\",\r\n              headerName: \"Value\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"approved\",\r\n              headerName: \"Approved\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"comments\",\r\n              headerName: \"Comments\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryChallanMdcBrowse;\r\n","import {\r\n  Button,\r\n  TextField,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete,} from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nconst AddDeliveryChallanMdc = ({ challanType }) => {\r\n  const [tableList, settableList] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    dc_no: \"\",\r\n    po_no: \"\",\r\n    po_date: \"\",\r\n    courier: \"\",\r\n    vehicle_no: \"\",\r\n    contact_person: \"\",\r\n    cperson_id: \"\",\r\n    remarks: \"\",\r\n    no_of_box: \"\",\r\n    value: \"\",\r\n    box_no: \"\",\r\n    description: \"\",\r\n    qty: \"\",\r\n   \r\n  });\r\nconst [contactlist, setcontactlist] = useState(null)\r\nconst [saleslist, setsaleslist] = useState(null)\r\n  const [showDIList, setShowDIList] = useState(false);\r\n  const [accountList, setaccountList] = useState([]);\r\n  const [salesOrderList, setsalesOrderList] = useState([])\r\n  const toggleDIList = () => setShowDIList(!showDIList);\r\n  const submitAddBox = () => {\r\n          if (formData.box_no===\"\") {\r\n          showErrorToast(\"Please Enter Box No\");\r\n        }else if (formData.description===\"\") {\r\n          showErrorToast(\"Please Enter description\");\r\n        }else if (formData.qty===\"\") {\r\n          showErrorToast(\"Please Enter Quality\");\r\n         } else{\r\n          settableList([\r\n            ...tableList,\r\n            {\r\n              box_no: formData.box_no,\r\n              description: formData.description,\r\n              qty: formData.qty,\r\n            },\r\n          ]);\r\n          setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n         }\r\n  };\r\n \r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDateChange = (name, date) => {\r\n    setFormData({ ...formData, [name]: date });\r\n  };\r\n \r\n  const handleDeleteTable = (e) => {\r\n    tableList.splice(tableList.indexOf(e), 1);\r\n    settableList([...tableList]);\r\n  };\r\n\r\n  const diListColumn = [\r\n    {\r\n      id: \"box_no\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Box No\",\r\n    },\r\n    {\r\n      id: \"description\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Description\",\r\n    },\r\n    {\r\n      id: \"qty\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Qty\",\r\n    },\r\n  ];\r\n\r\n  const getDCNo = async () => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistics/dc/generateDc\",\r\n        {},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData({ ...formData, dc_no: data.data.dc_no });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  //Party name\r\n  const getCompanyList = async (search) => {\r\n    // setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/accountlist\",\r\n        { search:search},\r\n        \"get\",\r\n        \"node\"\r\n      ).then((data) => {\r\n  console.log(data)\r\n        if (data.status === 200) {\r\n          setaccountList(data.result);\r\n          console.log(accountList)\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const getSalesOrder = async (search) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/picksomdc?search=\" + search,\r\n        \"\",\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setsalesOrderList(data.result)\r\n        }\r\n      }).catch(err=>{\r\n        showErrorToast(err.message)\r\n      })\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  //contact list\r\n  const getAccountContactList = async () => {\r\n\r\n    try {\r\n     \r\n      let search=contactlist.company_id;\r\n      await CommonController.commonApiCallFilter(\r\n        \"logistic/mdc/accountcontactlist\",\r\n        { search:search},\r\n        \"post\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setFormData({\r\n            ...formData,\r\n            cperson_id: data.result.cperson_id,\r\n            contact_person: data.result.cperson_name,\r\n          });\r\n        }else{\r\n         showErrorToast(data.message)\r\n        }\r\n      }).catch(err=>{\r\n        showErrorToast(err)\r\n      })\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const submitMdc = async () => {\r\n    try {\r\n      if (formData.po_no === \"\") {\r\n        showErrorToast(\"Please Enter Po No\");\r\n      }else if (formData.po_date === \"\") {\r\n        showErrorToast(\"Please Enter Po Date\");\r\n      }  else if (tableList.length < 0) {\r\n        showErrorToast(\"Please add box\");\r\n      } else if (formData.remarks === \"\") {\r\n        showErrorToast(\"Please enter remarks\");\r\n      } else if (contactlist.company_name === \"\") {\r\n        showErrorToast(\"Please Select Party Name\");\r\n      } else if (formData.courier === \"\") {\r\n        showErrorToast(\"Please Enter Courier\");\r\n      } else if (formData.vehicle_no === \"\") {\r\n        showErrorToast(\"Please Enter Vehicle NO\");\r\n      } else if (formData.contact_person === \"\") {\r\n        showErrorToast(\"Please Enter Contact Person\");\r\n      } else if (formData.no_of_box === \"\") {\r\n        showErrorToast(\"Please Enter No Of Box\");\r\n      \r\n      } else if (formData.value === \"\") {\r\n        showErrorToast(\"Please Enter Value\");\r\n      \r\n      } else {\r\n        const body = {\r\n          tran_id: \"0\",\r\n          date:moment().format(\"MM/DD/YYYY\"),\r\n          dc_no: formData.dc_no,\r\n          so_id:saleslist.tran_id,\r\n          company_id:contactlist.company_id,\r\n          company_name:contactlist.company_name,\r\n          cperson_id: formData.cperson_id,\r\n          cperson_name: formData.contact_person,\r\n          po_no: formData.po_no,\r\n          po_date: formData.po_date,\r\n          carrier: formData.courier,\r\n          vehicle: formData.vehicle_no,\r\n          remarks: formData.remarks,\r\n          noofbox: formData.no_of_box,\r\n          value: formData.value,\r\n          user_name: localStorage.getItem(\"userName\"),\r\n          manuDcDetail: tableList,\r\n          user_id: localStorage.getItem(\"userId\"),\r\n        };\r\n        await CommonController.commonApiCallFilter(\r\n          \"logistic/mdc/insertmdc\",\r\n          body,\r\n          \"post\",\r\n          \"node\"\r\n        )\r\n          .then((result) => {\r\n            if (result.status === 200) {\r\n              showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n              // window.location.reload();\r\n              settableList([])\r\n              setFormData({\r\n                ...formData,\r\n                date: \"\",\r\n                po_no: \"\",\r\n                po_date: \"\",\r\n                courier: \"\",\r\n                vehicle_no: \"\",\r\n                contact_person: \"\",\r\n                cperson_id: \"\",\r\n                remarks: \"\",\r\n                no_of_box: \"\",\r\n               \r\n                value: \"\",\r\n             \r\n              \r\n              });\r\n              setsaleslist(null)\r\n              setcontactlist(null)\r\n            } else {\r\n              showErrorToast(result.message.code);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            showErrorToast(err);\r\n          });\r\n      }\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getAccountContactList();\r\n\r\n  }, [contactlist]);\r\n\r\n  useEffect(() => {\r\n    getDCNo();\r\n  }, []);\r\n\r\n \r\n \r\n\r\n  const {\r\n    dc_no,\r\n    po_no,\r\n    courier,\r\n    po_date,\r\n    vehicle_no,\r\n    contact_person,\r\n    remarks,\r\n    no_of_box,\r\n    value,\r\n    box_no,\r\n    description,\r\n    qty,\r\n  } = formData;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Date\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={moment().format(\"MM/DD/YYYY\")}\r\n            size=\"small\"\r\n            name=\"date\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"DC NO.\"\r\n            disabled\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={dc_no}\r\n            name={\"dc_no\"}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"PO No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={po_no}\r\n            name=\"po_no\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <DatePicker\r\n            label=\"PO Date\"\r\n            // value={po_date}\r\n            format=\"dd/MM/yyyy\"\r\n            onChange={(date) => handleDateChange(\"po_date\", date)}\r\n            animateYearScrolling\r\n            inputVariant=\"outlined\"\r\n            size=\"small\"\r\n            autoOk\r\n            fullWidth\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n        <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={accountList}\r\n              fullWidth\r\n              size=\"small\"\r\n              getOptionLabel={(option) =>option.company_name}\r\n              value={contactlist}\r\n              onChange={(e, value) => setcontactlist(value)}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onInput={(e) => {\r\n                    debounce(getCompanyList(e.target.value, 200));\r\n                  }}\r\n                  label=\"Party Name\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          {/* <TextField\r\n            label=\"Party Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={party_name}\r\n            name=\"party_name\"\r\n            // disabled\r\n            onChange={handleChange}\r\n            select\r\n          >\r\n            {accountList.map((val) => (\r\n              <MenuItem key={val.company_id} value={val.company_name}>\r\n                {val.company_name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField> */}\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Courier\"\r\n            fullWidth\r\n            onChange={handleChange}\r\n            value={courier}\r\n            variant=\"outlined\"\r\n            name=\"courier\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Vehicle No\"\r\n            fullWidth\r\n            value={vehicle_no}\r\n            onChange={handleChange}\r\n            name={\"vehicle_no\"}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Contact Person\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={contact_person}\r\n            name={\"contact_person\"}\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n            // select\r\n          >\r\n            {/* <MenuItem value=\"ab\">ab</MenuItem> */}\r\n          </TextField>\r\n        </div>\r\n\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"Remarks\"\r\n            value={remarks}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"remarks\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mb-3\">\r\n          <TextField\r\n            label=\"No Of Box\"\r\n            value={no_of_box}\r\n            name=\"no_of_box\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n        <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={salesOrderList}\r\n              fullWidth\r\n              getOptionLabel={(option) =>option.so_no}\r\n              value={saleslist}\r\n              onChange={(e, value) => setsaleslist(value)}\r\n              sx={{ height:20 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  onChange={(e) => {\r\n                    debounce(getSalesOrder(e.target.value));\r\n                  }}\r\n                  label=\"Sales Order\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          {/* <TextField\r\n            label=\"Sales Order\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={sales_order}\r\n            onChange={handleChange}\r\n            name=\"sales_order\"\r\n            size=\"small\"\r\n            select\r\n          >\r\n           {salesOrderList.map((val,i)=>( <MenuItem key={i }value={val.so_no}> {val.so_no}</MenuItem>))}\r\n          </TextField> */}\r\n        </div>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <TextField\r\n            label=\"Value\"\r\n            fullWidth\r\n            value={value}\r\n            name=\"value\"\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n            multiline\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {tableList.length > 0 ? (\r\n        <SimpleTable\r\n          columns={diListColumn}\r\n          rows={tableList}\r\n          onDelete={handleDeleteTable}\r\n        />\r\n      ) : null}\r\n      <hr />\r\n      <div className=\"container-fluid\">\r\n        {/* <h1>Add Box:</h1> */}\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"Box No\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={box_no}\r\n              variant=\"outlined\"\r\n              name=\"box_no\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 mb-3\">\r\n            <TextField\r\n              label=\"Description\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={description}\r\n              variant=\"outlined\"\r\n              name=\"description\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"Qty\"\r\n              fullWidth\r\n              onChange={handleChange}\r\n              value={qty}\r\n              variant=\"outlined\"\r\n              name=\"qty\"\r\n              type=\"number\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 mb-3 pl-5\">\r\n            <Button\r\n              color=\"primary\"\r\n              // className=\"mr-2\"\r\n              // disableElevation\r\n              variant=\"contained\"\r\n              onClick={submitAddBox}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"float-action-btn\">\r\n          <Fab\r\n            variant=\"extended\"\r\n            onClick={addBox}\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n            Add Box\r\n          </Fab>\r\n        </div> */}\r\n\r\n      <hr />\r\n      <div className=\"w-100 mt-3 text-right\">\r\n        <Button\r\n          color=\"primary\"\r\n          className=\"mr-2\"\r\n          disableElevation\r\n          variant=\"contained\"\r\n          onClick={submitMdc}\r\n        >\r\n          Save\r\n        </Button>\r\n        <Button color=\"primary\" disableElevation variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDeliveryChallanMdc;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport DeliveryChallanMdcBrowse from \"./browse\";\r\nimport AddDeliveryChallanMdc from \"./mdc-add\";\r\n\r\nconst ChallanIndexMdc = ({ type }) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            Manufacturing DC\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          \r\n            <DeliveryChallanMdcBrowse/>\r\n        \r\n        ) : (\r\n        \r\n        <AddDeliveryChallanMdc/>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallanIndexMdc;\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst SlWipAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlWipAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst SlWipBrowse = ({slType}) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:false,\r\n    status: \"\",\r\n    approval:\"\",\r\n    sl_type:\"\"\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (sl) => {\r\n\r\n      setBodyParam({...bodyParam,sl_type:sl})\r\n     \r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistics/dc/browseWip\",\r\n        params,\r\n        bodyParam,\r\n        \"node\"\r\n      ).then((data) => {\r\n    \r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n          \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleBodyParam(slType)\r\n  \r\n  }, [slType]);\r\n \r\n\r\n  useEffect(() => {\r\n    \r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"SR. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"DC No\",\r\n              width: 120,\r\n            },\r\n         \r\n            {\r\n              field: \"Company\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"sales_order\",\r\n              headerName: \"Sales Order\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"so_date\",\r\n                headerName: \"So Date\",\r\n                width: 120,\r\n                renderCell:(params)=>{\r\n                  return moment(params.row.so_date).format(\"DD/MM/YYYY\");\r\n                }\r\n              },\r\n              {\r\n                field: \"ref_date\",\r\n                headerName: \"Ref Date\",\r\n                width: 120,\r\n                renderCell:(params)=>{\r\n                  return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n                }\r\n              },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"di_no\",\r\n              headerName: \"DI No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"pi_no\",\r\n              headerName: \"PI No.\",\r\n              width: 150,\r\n            },\r\n            \r\n            {\r\n              field: \"dis_through\",\r\n              headerName: \"Dispatch Thr\",\r\n              width: 120,\r\n            }, {\r\n              field: \"Destination\",\r\n              headerName: \"Destination\",\r\n              width: 120,\r\n            }, {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"amount\",\r\n              headerName: \"Amount\",\r\n              width: 120,\r\n            },{\r\n              field: \"mdc_amount\",\r\n              headerName: \"MDC Amount\",\r\n              width: 120,\r\n            },{\r\n              field: \"actual_amount\",\r\n              headerName: \"Actual Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default SlWipBrowse;\r\n","import React, { useState } from \"react\";\r\nimport SlWipAdd from \"./add\";\r\n\r\nimport SlWipBrowse from \"./browse\";\r\n\r\n\r\nexport default function SlWipIndex({slType}) {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n           {`New ${slType} WIP` }\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <SlWipBrowse slType={slType}/> : <SlWipAdd />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\n\r\nconst DeliveryChallanBrowse = ({ type ,slType }) => {\r\n  \r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    status: \"\",\r\n    chk_all: false,\r\n    sl_type:slType,\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n     setBodyParam({...bodyParam,sl_type:event})\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistics/dc/browseDelivery\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.recordsFiltered);\r\n          setAmountFigures({\r\n            amount: data.amount,\r\n            mdc_amount: data.mdc_amount,\r\n            actual_amount: data.actual_amount,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleBodyParam(slType)\r\n  \r\n  }, [slType]);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center\">\r\n        <div className=\"filter_box \">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1 d-flex align-items-center\">\r\n              <h4 className=\"mb-2\">Filters</h4>\r\n            </div>\r\n          </div>\r\n          <div className=\"row \" style={{\"width\":\"200%\"}}>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onKeyUp={handleParams}\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n\r\n            <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n          </div>\r\n        </div>\r\n        <div className=\"widget-container pl-5\">\r\n          <div className=\"widget-box first\">\r\n            <span>Amount</span>\r\n            <p>{currenyMasking(amountFigures.amount)}</p>\r\n          </div>\r\n          <div className=\"widget-box second\">\r\n            <span>MDC Amount</span>\r\n            <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n          </div>\r\n          <div className=\"widget-box third\">\r\n            <span>Actual Amount</span>\r\n            <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"Sr. no\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"dc_no\",\r\n              headerName: \"D.C No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n\r\n            {\r\n              field: \"contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"sales_order\",\r\n              headerName: \"Sales Order\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"so_date\",\r\n              headerName: \"S.O. Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_date\",\r\n              headerName: \"Ref Date\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"di_no\",\r\n              headerName: \"DI No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"pi_no\",\r\n              headerName: \"PI No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"dispatch_thr\",\r\n              headerName: \"Dispatch Thr.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"destination\",\r\n              headerName: \"Destination\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"amount\",\r\n              headerName: \"Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mdc_amount\",\r\n              headerName: \"MDC Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"actual_amount\",\r\n              headerName: \"Actual Amount\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"comments\",\r\n              headerName: \"Comments\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Datetime\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]} \r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryChallanBrowse;\r\n","import {\n  Button,\n  formatMs,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n} from \"@material-ui/core\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { getUserId, showErrorToast } from \"../../../components/common\";\nimport { TablePicker } from \"../../../components/table-picker\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nconst AddDeliveryChallan = ({ challanType }) => {\n  const [pickItemList, setPickItemList] = useState([]);\n  const [showDITable, setDITable] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState({\n    di_no: \"\",\n    dc_no: \"\",\n    so_no: \"\",\n    company_id: \"\",\n    company_name: \"\",\n    cperson_id: \"\",\n    di_id: \"\",\n    di_date: \"\",\n    so_date: null,\n    cperson_name: \"\",\n    ref_no: \"\",\n    ref_date: null,\n    dis_doc_no: \"\",\n    dis_doc_date: null,\n    dis_through: \"\",\n    destination: \"\",\n    vehicle_no: \"\",\n    type: \"\",\n    status: \"open\",\n    remarks: \"\",\n    noofbox: \"\",\n    scan_using: \"\",\n    dcDetail: [],\n  });\n\n  const [showDIList, setShowDIList] = useState(false);\n  const [selectedDI, setSelectedDI] = useState(null);\n\n  const toggleDIList = () => setShowDIList(!showDIList);\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const handleDateChange = (name, date) => {\n    setFormData({ ...formData, [name]: date });\n  };\n\n  const diListColumn = [\n    {\n      id: \"tran_id\",\n      numeric: false,\n      disablePadding: false,\n      label: \"\",\n    },\n    {\n      id: \"di_no\",\n      numeric: false,\n      disablePadding: false,\n      label: \"DI No\",\n    },\n    {\n      id: \"date\",\n      numeric: false,\n      disablePadding: false,\n      label: \"DI Date\",\n    },\n    {\n      id: \"company_name\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Party\",\n    },\n    {\n      id: \"cperson_name\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Contact\",\n    },\n    {\n      id: \"indent_no\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Indent No\",\n    },\n    {\n      id: \"so_no\",\n      numeric: false,\n      disablePadding: false,\n      label: \"SO No\",\n    },\n    {\n      id: \"so_date\",\n      numeric: false,\n      disablePadding: false,\n      label: \"SO Date\",\n    },\n    {\n      id: \"remarks\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Remarks\",\n    },\n  ];\n\n  const getDCNo = async () => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"logistics/dc/generateDc\",\n        {},\n        \"get\",\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          setFormData({ ...formData, dc_no: data.data.dc_no });\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  useEffect(() => {\n    getDCNo();\n    // getPreviewDC(\"30490\");\n  }, []);\n\n  const handleSubmit = (data) => {\n    getItemDIList(data.tran_id);\n    setSelectedDI(data);\n    setFormData({\n      ...formData,\n      so_no: data.so_no,\n      cperson_name: data.cperson_name,\n      di_date: moment().format(\"MM/DD/YYYY\"),\n      company_name: data.company_name,\n      di_no: data.di_no,\n      company_id: data.company_id,\n      cperson_id: data.cperson_id,\n      di_id: data.tran_id,\n    });\n    toggleDIList();\n  };\n\n  const getItemDIList = async (id) => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"logistics/dc/pickDIItem\",\n        { id: id },\n        \"post\", \n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          setPickItemList(data.data);\n        } else {\n          showErrorToast(data.message);\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const submitMain = async () => {\n    setLoading(true);\n    try {\n      let temp = { ...formData };\n      temp.dcDetail = pickItemList;\n      await CommonController.commonApiCallFilter(\n        \"logistics/dc/insertmain\",\n        temp,\n        \"post\",\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          getPreviewDC(data.data);\n        } else {\n          showErrorToast(data.message);\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n  const getPreviewDC = async (id) => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"logistics/dc/previewDC\",\n        { id: id },\n        \"post\",\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          setFormData(data.data.dc_main[0]);\n          setPickItemList(data.data.dc_detail);\n          setDITable(true);\n        } else {\n          showErrorToast(data.message);\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const updateItemById = async (obj) => {\n    try {\n      const request = {\n        tran_id: obj.tran_id,\n        box_no: obj.box_no,\n        mlfb_no: obj.mlfb_no,\n        material_code: obj.material_code,\n        serial_no: obj.serial_no,\n        user_id: getUserId(),\n      };\n      await CommonController.commonApiCallFilter(\n        \"logistics/dc/updateItemById\",\n        request,\n        \"post\",\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          console.log(data);\n        } else {\n          showErrorToast(data.message);\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const {\n    dc_no,\n    so_no,\n    cperson_name,\n    so_date,\n    ref_date,\n    remarks,\n    scan_using,\n    noofbox,\n    destination,\n    dis_doc_date,\n    dis_doc_no,\n    dis_through,\n    vehicle_no,\n    ref_no,\n    type,\n    status,\n  } = formData;\n\n  const handleItemChange = (index, event) => {\n    let tempList = [...pickItemList];\n    tempList[index][event.target.name] = event.target.value;\n    setPickItemList(tempList);\n  };\n\n  const getNextElem = (row, input) => {\n    const nextElem = document.getElementById(\n      `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\n        parseInt(input) > 2 ? \"1\" : parseInt(input) + 1\n      }`\n    );\n\n    return nextElem\n      ? nextElem.disabled\n        ? document.getElementById(\n            `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\n              parseInt(input) > 2 ? \"1\" : parseInt(input) + 2\n            }`\n          )\n        : document.getElementById(\n            `row-input-${parseInt(input) == 3 ? parseInt(row) + 1 : row}-${\n              parseInt(input) > 2 ? \"1\" : parseInt(input) + 1\n            }`\n          )\n      : null;\n  };\n\n  const switchToInput = (event) => {\n    if (event.key === \"Enter\") {\n      const currentElemRow = event.target.id.split(\"-\")[2];\n      const currentElemInp = event.target.id.split(\"-\")[3];\n      if (currentElemRow) {\n        const elem = getNextElem(currentElemRow, currentElemInp);\n        if (elem) {\n          elem.focus();\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row mt-5\">\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"D.C. No.\"\n            disabled\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            value={dc_no}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Date\"\n            disabled\n            fullWidth\n            variant=\"outlined\"\n            value={moment().format(\"MM/DD/YYYY\")}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"DI No.\"\n            disabled\n            fullWidth\n            variant=\"outlined\"\n            value={formData.di_no}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Date\"\n            disabled\n            fullWidth\n            variant=\"outlined\"\n            value={formData?.di_date}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-6 mb-3\">\n          <TextField\n            label=\"Party Name\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            disabled\n            value={formData.company_name}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Sales Order\"\n            fullWidth\n            onChange={handleChange}\n            value={so_no}\n            variant=\"outlined\"\n            name=\"so_no\"\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <DatePicker\n            label=\"Date\"\n            value={so_date}\n            format=\"dd/MM/yyyy\"\n            onChange={(date) => handleDateChange(\"so_date\", date)}\n            animateYearScrolling\n            inputVariant=\"outlined\"\n            size=\"small\"\n            autoOk\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-6 mb-3\">\n          <TextField\n            label=\"Contact Person\"\n            fullWidth\n            onChange={handleChange}\n            value={cperson_name}\n            name=\"cperson_name\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Ref(PO) No.\"\n            fullWidth\n            variant=\"outlined\"\n            value={ref_no}\n            name={\"ref_no\"}\n            size=\"small\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <DatePicker\n            label=\"Date\"\n            value={ref_date}\n            format=\"dd/MM/yyyy\"\n            onChange={(date) => handleDateChange(\"ref_date\", date)}\n            animateYearScrolling\n            inputVariant=\"outlined\"\n            size=\"small\"\n            autoOk\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Type\"\n            value={type}\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            select\n            name=\"type\"\n            onChange={handleChange}\n          >\n            {\" \"}\n            <MenuItem value=\"Project\">Project</MenuItem>\n            <MenuItem value=\"Spare\">Spare</MenuItem>\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Status\"\n            disabled\n            fullWidth\n            variant=\"outlined\"\n            value={status}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Dispatch Doc. No.\"\n            fullWidth\n            variant=\"outlined\"\n            value={dis_doc_no}\n            onChange={handleChange}\n            name=\"dis_doc_no\"\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <DatePicker\n            label=\"Date\"\n            value={dis_doc_date}\n            format=\"dd/MM/yyyy\"\n            onChange={(date) => handleDateChange(\"dis_doc_date\", date)}\n            animateYearScrolling\n            inputVariant=\"outlined\"\n            size=\"small\"\n            autoOk\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-6 mb-3\">\n          <TextField\n            label=\"Remarks\"\n            fullWidth\n            value={remarks}\n            name=\"remarks\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            size=\"small\"\n            multiline\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Dispatch Through\"\n            fullWidth\n            value={dis_through}\n            variant=\"outlined\"\n            size=\"small\"\n            name=\"dis_through\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Destination\"\n            fullWidth\n            name=\"destination\"\n            onChange={handleChange}\n            value={destination}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-6 mb-3\">\n     \n        \n          <TextField\n            label=\"Scan Using\"\n            fullWidth\n            select\n            variant=\"outlined\"\n            size=\"small\"\n            name=\"scan_using\"\n            disabled={selectedDI}\n            onChange={handleChange}\n            value={scan_using}\n          >\n            <MenuItem value=\"MLFB NO\">MLFB NO</MenuItem>\n            <MenuItem value=\"MATERIAL CODE\">MATERIAL CODE</MenuItem>\n          </TextField>\n        </div> \n        \n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"Vehicle No.\"\n            fullWidth\n            name=\"vehicle_no\"\n            variant=\"outlined\"\n            value={vehicle_no}\n            onChange={handleChange}\n            size=\"small\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"No of Box\"\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            name=\"noofbox\"\n            value={noofbox}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"diList-container\">\n        {!showDIList && (\n          <div className=\"text-right w-100 mb-5\">\n            <Button\n              color=\"primary\"\n              className=\"mr-2\"\n              disableElevation\n              variant=\"contained\"\n              onClick={toggleDIList}\n            >\n              Pick DI\n            </Button>\n            <Button\n              color=\"primary\"\n              className=\"mr-2\"\n              disableElevation\n              variant=\"contained\"\n              disabled={loading}\n              onClick={submitMain}\n            >\n              {loading ? \"Processing...\" : \" Save & Proceed\"}\n            </Button>\n          </div>\n        )}\n        {showDIList && (\n          <TablePicker\n            selectedItems={selectedDI}\n            columns={diListColumn}\n            url={\"logistics/dc/pickDI\"}\n            isNode=\"node\"\n            apiBody={{ user_id: getUserId(), sl_type: challanType }}\n            apiType=\"post\"\n            onPickerClose={toggleDIList}\n            type=\"single\"\n            onSubmit={handleSubmit}\n          />\n        )}\n\n        {showDITable && (\n          <div className=\"table-responsive mb-5 pb-5\">\n            <Paper>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>S.N.</TableCell>\n                    <TableCell>Box No</TableCell>\n                    <TableCell>MLFB No.</TableCell>\n                    <TableCell>Material Code</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Serial No.</TableCell>\n                    <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell align=\"right\">Rate</TableCell>\n                    <TableCell align=\"right\">Amount</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {pickItemList.length > 0 &&\n                    pickItemList.map((item, index) => {\n                      return (\n                        <React.Fragment>\n                          <TableRow\n                            key={index}\n                            style={{\n                              backgroundColor: item.serial\n                                ? \"rgb(255 238 240)\"\n                                : \"#fff\",\n                            }}\n                          >\n                            <TableCell>{index + 1}</TableCell>\n                            <TableCell style={{ width: 100 }}>\n                              <input\n                                type=\"text\"\n                                name=\"box_no\"\n                                className=\"form-control\"\n                                onChange={(e) => handleItemChange(index, e)}\n                                // onKeyPress={(e) => {\n\n                                // }}\n                              />{\" \"}\n                            </TableCell>\n                            <TableCell>\n                              {item.serial_no !== null ? (\n                                <input\n                                  type=\"type\"\n                                  disabled={scan_using === \"MATERIAL CODE\"}\n                                  className=\"form-control switchInput\"\n                                  name=\"mlfb_no\"\n                                  onKeyPress={switchToInput}\n                                  id={`row-input-${index + 1}-1`}\n                                  onChange={(e) => handleItemChange(index, e)}\n                                />\n                              ) : (\n                                item.mlfb_no\n                              )}\n                            </TableCell>\n                            <TableCell>\n                              {\" \"}\n                              {item.serial_no !== null ? (\n                                <input\n                                  type=\"type\"\n                                  disabled={scan_using === \"MLFB NO\"}\n                                  className=\"form-control switchInput\"\n                                  id={`row-input-${index + 1}-2`}\n                                  name=\"material_code\"\n                                  onKeyPress={switchToInput}\n                                  onChange={(e) => handleItemChange(index, e)}\n                                />\n                              ) : (\n                                item.material_code\n                              )}\n                            </TableCell>\n                            <TableCell style={{ width: 200 }}>\n                              {item.description}\n                            </TableCell>\n                            <TableCell style={{ width: 200 }}>\n                              {\" \"}\n                              {item.serial_no !== null && (\n                                <input\n                                  type=\"type\"\n                                  className=\"form-control switchInput\"\n                                  name=\"serial_no\"\n                                  id={`row-input-${index + 1}-3`}\n                                  onKeyPress={(e) => {\n                                    switchToInput(e);\n                                    if (e.key === \"Enter\") {\n                                      updateItemById(pickItemList[index]);\n                                    }\n                                  }}\n                                  onChange={(e) => handleItemChange(index, e)}\n                                />\n                              )}\n                            </TableCell>\n                            <TableCell align=\"right\">{item.qty}</TableCell>\n                            <TableCell align=\"right\">{item.rate}</TableCell>\n                            <TableCell align=\"right\">{item.amount}</TableCell>\n                          </TableRow>\n                        </React.Fragment>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </Paper>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AddDeliveryChallan;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport DeliveryChallanBrowse from \"./browse\";\nimport AddDeliveryChallan from \"./dc-add\";\n\nconst ChallanIndex = ({ type ,slType}) => {\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n          {`New ${slType} DC` }\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <DeliveryChallanBrowse type={type} slType={slType} />\n        ) : (\n          <AddDeliveryChallan challanType={type} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChallanIndex;\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst JobWorkAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobWorkAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst JobWorkBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_jwin\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n\r\n            {\r\n              field: \"jwin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Ref Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"Destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Attachement\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobWorkBrowse;\r\n","import React,{useState} from 'react'\r\nimport JobWorkAdd from './add';\r\nimport MrnAddDc from './add';\r\nimport JobWorkBrowse from './browse';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function JobWorkIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                    Job Work In\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <JobWorkBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <JobWorkAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst JobWorkOutAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobWorkOutAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst JobWorkOutBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_jwout\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n              field: \"jwout_no\",\r\n              headerName: \"JWOUT No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"jwin_no\",\r\n              headerName: \"JWIN No.\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"mrn_date\",\r\n            //   headerName: \"MRN Date\",\r\n            //   width: 120,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"ref_no\",\r\n              headerName: \"Ref No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"date\",\r\n              headerName: \"Ref Date\",\r\n              width: 100,\r\n              renderCell: (params) => {\r\n                return moment(params.row.ref_date).format(\"DD/MM/YYYY\");\r\n              },\r\n            },\r\n            {\r\n                field: \"Destination\",\r\n                headerName: \"Destination\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Fault\",\r\n              headerName: \"Fault\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Remarks\",\r\n              headerName: \"Remarks\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Attachement\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobWorkOutBrowse;\r\n","import React,{useState} from 'react'\r\nimport JobWorkOutAdd from './add';\r\nimport JobWorkOutBrowse from './browse';\r\n\r\nexport default function JobWorkOutIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                    Job Work Out\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <JobWorkOutBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <JobWorkOutAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst MrnAddDc = ({ challanType }) => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MrnAddDc;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst MrnBrowseDc = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_mrn_dc\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"widget-container\">\r\n        <div className=\"widget-box first\">\r\n          <span>Amount</span>\r\n          <p>{currenyMasking(amountFigures.amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box second\">\r\n          <span>MDC Amount</span>\r\n          <p>{currenyMasking(amountFigures.mdc_amount)}</p>\r\n        </div>\r\n        <div className=\"widget-box third\">\r\n          <span>Actual Amount</span>\r\n          <p>{currenyMasking(amountFigures.actual_amount)}</p>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n             \r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.po_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.docket_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MrnBrowseDc;\r\n","import React,{useState} from 'react'\r\nimport MrnAddDc from './add';\r\nimport MrnBrowseDc from './browse';\r\n\r\nexport default function MrnDcIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        New Material Receipt Note\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <MrnBrowseDc/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <MrnAddDc/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst MrnPoAdd = ({ challanType }) => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MrnPoAdd;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst MrnPoBrowse = ({ type }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_mrn_po\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totaldata);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n   \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n             \r\n            },\r\n         \r\n\r\n            {\r\n              field: \"mrn_no\",\r\n              headerName: \"MRN No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"mrn_date\",\r\n              headerName: \"MRN Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            // {\r\n            //   field: \"date\",\r\n            //   headerName: \"Date\",\r\n            //   width: 100,\r\n            //   renderCell: (params) => {\r\n            //     return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n            //   },\r\n            // },\r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Comp ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"company_name\",\r\n              headerName: \"Company Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"po_no\",\r\n              headerName: \"PO No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"po_date\",\r\n              headerName: \"PO Date\",\r\n              width: 120,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.po_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            {\r\n                field: \"status\",\r\n                headerName: \"Status\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"courier\",\r\n              headerName: \"Courier\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_no\",\r\n              headerName: \"Docket No.\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"docket_date\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n              renderCell:(params)=>{\r\n                return moment(params.row.docket_date).format(\"DD/MM/YYYY\");\r\n              }\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n\r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.tran_id}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default MrnPoBrowse;\r\n","import React,{useState} from 'react'\r\nimport MrnPoAdd from './add';\r\n\r\nimport MrnPoBrowse from './browse';\r\n\r\nexport default function MrnPoIndex({type}) {\r\n    const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n    const handleIndex = (index) => {\r\n        setSeletedIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(0);\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n                        onClick={() => {\r\n                            // dispatch(clearSelectedGodownId());\r\n                            handleIndex(1);\r\n                        }}\r\n                    >\r\n                        New MRN(PO)\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {selectedIndex === 0 ? (\r\n                    // <DeliveryChallanBrowse type={type} />\r\n                    <MrnPoBrowse/>\r\n                ) : (\r\n                    // <AddDeliveryChallan challanType={type} />\r\n                    <MrnPoAdd/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../components/common\";\r\nimport DateFilter from \"../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\n\r\nconst RgpBrowseDc = () => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_rgp\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n         \r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n            {\r\n              field: \"rgp_no\",\r\n              headerName: \"RGP No.\",\r\n              width: 120,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Package\",\r\n              headerName: \"Package\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"Transport\",\r\n                headerName: \"Transport\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"vehicle_no\",\r\n              headerName: \"Vehicle No\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Status\",\r\n              headerName: \"Status\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"Attachement\",\r\n              headerName: \"Docket No.\",\r\n              width: 150,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default RgpBrowseDc;\r\n","import { Button, formatMs, MenuItem, TextField, Fab } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@mui/material\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nimport moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { SimpleTable } from \"../../../../components/basic-table\";\r\nimport {\r\n    debounce,\r\n    showErrorToast,\r\n    showSuccessToast,\r\n} from \"../../../../components/common\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\n\r\nconst RrgpAdd = () => {\r\n    const [tableList, settableList] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n        date: \"\",\r\n        dc_no: \"\",\r\n        po_no: \"\",\r\n        po_date: \"\",\r\n        courier: \"\",\r\n        vehicle_no: \"\",\r\n        contact_person: \"\",\r\n        cperson_id: \"\",\r\n        remarks: \"\",\r\n        no_of_box: \"\",\r\n        value: \"\",\r\n        box_no: \"\",\r\n        description: \"\",\r\n        qty: \"\",\r\n    });\r\n    const [contactlist, setcontactlist] = useState(null);\r\n    const [saleslist, setsaleslist] = useState(null);\r\n    const [showDIList, setShowDIList] = useState(false);\r\n    const [accountList, setaccountList] = useState([]);\r\n    const [salesOrderList, setsalesOrderList] = useState([]);\r\n    const toggleDIList = () => setShowDIList(!showDIList);\r\n    const submitAddBox = () => {\r\n        if (formData.box_no === \"\") {\r\n            showErrorToast(\"Please Enter Box No\");\r\n        } else if (formData.description === \"\") {\r\n            showErrorToast(\"Please Enter description\");\r\n        } else if (formData.qty === \"\") {\r\n            showErrorToast(\"Please Enter Quality\");\r\n        } else {\r\n            settableList([\r\n                ...tableList,\r\n                {\r\n                    box_no: formData.box_no,\r\n                    description: formData.description,\r\n                    qty: formData.qty,\r\n                },\r\n            ]);\r\n            setFormData({ ...formData, box_no: \"\", description: \"\", qty: \"\" });\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData({ ...formData, [event.target.name]: event.target.value });\r\n    };\r\n    const handleDateChange = (name, date) => {\r\n        setFormData({ ...formData, [name]: date });\r\n    };\r\n\r\n    const handleDeleteTable = (e) => {\r\n        tableList.splice(tableList.indexOf(e), 1);\r\n        settableList([...tableList]);\r\n    };\r\n\r\n    const diListColumn = [\r\n        {\r\n            id: \"box_no\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Box No\",\r\n        },\r\n        {\r\n            id: \"description\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Description\",\r\n        },\r\n        {\r\n            id: \"qty\",\r\n            numeric: false,\r\n            disablePadding: false,\r\n            label: \"Qty\",\r\n        },\r\n    ];\r\n\r\n    const getDCNo = async () => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistics/dc/generateDc\",\r\n                {},\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                if (data.status === 200) {\r\n                    setFormData({ ...formData, dc_no: data.data.dc_no });\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //Party name\r\n    const getCompanyList = async (search) => {\r\n        // setLoading(true);\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountlist\",\r\n                { search: search },\r\n                \"get\",\r\n                \"node\"\r\n            ).then((data) => {\r\n                console.log(data);\r\n                if (data.status === 200) {\r\n                    setaccountList(data.result);\r\n                    console.log(accountList);\r\n                }\r\n            });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const getSalesOrder = async (search) => {\r\n        try {\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/picksomdc?search=\" + search,\r\n                \"\",\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setsalesOrderList(data.result);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err.message);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    //contact list\r\n    const getAccountContactList = async () => {\r\n        try {\r\n            let search = contactlist.company_id;\r\n            await CommonController.commonApiCallFilter(\r\n                \"logistic/mdc/accountcontactlist\",\r\n                { search: search },\r\n                \"post\",\r\n                \"node\"\r\n            )\r\n                .then((data) => {\r\n                    if (data.status === 200) {\r\n                        setFormData({\r\n                            ...formData,\r\n                            cperson_id: data.result.cperson_id,\r\n                            contact_person: data.result.cperson_name,\r\n                        });\r\n                    } else {\r\n                        showErrorToast(data.message);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    showErrorToast(err);\r\n                });\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    const submitMdc = async () => {\r\n        try {\r\n            if (formData.po_no === \"\") {\r\n                showErrorToast(\"Please Enter Po No\");\r\n            } else if (formData.po_date === \"\") {\r\n                showErrorToast(\"Please Enter Po Date\");\r\n            } else if (tableList.length < 0) {\r\n                showErrorToast(\"Please add box\");\r\n            } else if (formData.remarks === \"\") {\r\n                showErrorToast(\"Please enter remarks\");\r\n            } else if (contactlist.company_name === \"\") {\r\n                showErrorToast(\"Please Select Party Name\");\r\n            } else if (formData.courier === \"\") {\r\n                showErrorToast(\"Please Enter Courier\");\r\n            } else if (formData.vehicle_no === \"\") {\r\n                showErrorToast(\"Please Enter Vehicle NO\");\r\n            } else if (formData.contact_person === \"\") {\r\n                showErrorToast(\"Please Enter Contact Person\");\r\n            } else if (formData.no_of_box === \"\") {\r\n                showErrorToast(\"Please Enter No Of Box\");\r\n            } else if (formData.value === \"\") {\r\n                showErrorToast(\"Please Enter Value\");\r\n            } else {\r\n                const body = {\r\n                    tran_id: \"0\",\r\n                    date: moment().format(\"MM/DD/YYYY\"),\r\n                    dc_no: formData.dc_no,\r\n                    so_id: saleslist.tran_id,\r\n                    company_id: contactlist.company_id,\r\n                    company_name: contactlist.company_name,\r\n                    cperson_id: formData.cperson_id,\r\n                    cperson_name: formData.contact_person,\r\n                    po_no: formData.po_no,\r\n                    po_date: formData.po_date,\r\n                    carrier: formData.courier,\r\n                    vehicle: formData.vehicle_no,\r\n                    remarks: formData.remarks,\r\n                    noofbox: formData.no_of_box,\r\n                    value: formData.value,\r\n                    user_name: localStorage.getItem(\"userName\"),\r\n                    manuDcDetail: tableList,\r\n                    user_id: localStorage.getItem(\"userId\"),\r\n                };\r\n                await CommonController.commonApiCallFilter(\r\n                    \"logistic/mdc/insertmdc\",\r\n                    body,\r\n                    \"post\",\r\n                    \"node\"\r\n                )\r\n                    .then((result) => {\r\n                        if (result.status === 200) {\r\n                            showSuccessToast(`${result.message} Entry No ${result.id_no}`);\r\n                            // window.location.reload();\r\n                            settableList([]);\r\n                            setFormData({\r\n                                ...formData,\r\n                                date: \"\",\r\n                                po_no: \"\",\r\n                                po_date: \"\",\r\n                                courier: \"\",\r\n                                vehicle_no: \"\",\r\n                                contact_person: \"\",\r\n                                cperson_id: \"\",\r\n                                remarks: \"\",\r\n                                no_of_box: \"\",\r\n\r\n                                value: \"\",\r\n                            });\r\n                            setsaleslist(null);\r\n                            setcontactlist(null);\r\n                        } else {\r\n                            showErrorToast(result.message.code);\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        showErrorToast(err);\r\n                    });\r\n            }\r\n        } catch (err) {\r\n            showErrorToast(err);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAccountContactList();\r\n    }, [contactlist]);\r\n\r\n    useEffect(() => {\r\n        getDCNo();\r\n    }, []);\r\n\r\n    const {\r\n        dc_no,\r\n        po_no,\r\n        courier,\r\n        po_date,\r\n        vehicle_no,\r\n        contact_person,\r\n        remarks,\r\n        no_of_box,\r\n        value,\r\n        box_no,\r\n        description,\r\n        qty,\r\n    } = formData;\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN No\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        //   value={mrn_no}\r\n                        size=\"small\"\r\n                        name=\"mrn_no\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"MRN Date\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={moment().format(\"MM/DD/YYYY\")}\r\n                        size=\"small\"\r\n                        name=\"date\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"PO/DC No.\"\r\n                        disabled\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={dc_no}\r\n                        name={\"dc_no\"}\r\n                    />\r\n                </div>\r\n\r\n                {/* <div className=\"col-md-3 mb-3\">\r\n            <TextField\r\n              label=\"PO No.\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={po_no}\r\n              name=\"po_no\"\r\n              size=\"small\"\r\n              onChange={handleChange}\r\n            />\r\n          </div> */}\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <DatePicker\r\n                        label=\"PO/DC Date\"\r\n                        // value={po_date}\r\n                        format=\"dd/MM/yyyy\"\r\n                        onChange={(date) => handleDateChange(\"po_date\", date)}\r\n                        animateYearScrolling\r\n                        inputVariant=\"outlined\"\r\n                        size=\"small\"\r\n                        autoOk\r\n                        fullWidth\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Party Name\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={po_no}\r\n                        name=\"po_no\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={accountList}\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        getOptionLabel={(option) => option.company_name}\r\n                        value={contactlist}\r\n                        onChange={(e, value) => setcontactlist(value)}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onInput={(e) => {\r\n                                    debounce(getCompanyList(e.target.value, 200));\r\n                                }}\r\n                                label=\"Employee Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Contact Person\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        value={contact_person}\r\n                        name={\"contact_person\"}\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    ></TextField>\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Department\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Courier Name\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                        value={courier}\r\n                        variant=\"outlined\"\r\n                        name=\"courier\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Order for(PO)\"\r\n                        fullWidth\r\n                        value={vehicle_no}\r\n                        onChange={handleChange}\r\n                        name={\"vehicle_no\"}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Status\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <Autocomplete\r\n                        id=\"combo-box-demo\"\r\n                        options={salesOrderList}\r\n                        fullWidth\r\n                        getOptionLabel={(option) => option.so_no}\r\n                        value={saleslist}\r\n                        onChange={(e, value) => setsaleslist(value)}\r\n                        sx={{ height: 20 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                onChange={(e) => {\r\n                                    debounce(getSalesOrder(e.target.value));\r\n                                }}\r\n                                label=\"Godown\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket No\"\r\n                        value={remarks}\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        name=\"remarks\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Docket Date\"\r\n                        value={no_of_box}\r\n                        name=\"no_of_box\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-6 mb-3\">\r\n                    <TextField\r\n                        label=\"Remarks\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice No\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3 mb-3\">\r\n                    <TextField\r\n                        label=\"Invoice Date\"\r\n                        fullWidth\r\n                        value={value}\r\n                        name=\"value\"\r\n                        variant=\"outlined\"\r\n                        onChange={handleChange}\r\n                        size=\"small\"\r\n                        multiline\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* {tableList.length > 0 ? (\r\n          <SimpleTable\r\n            columns={diListColumn}\r\n            rows={tableList}\r\n            onDelete={handleDeleteTable}\r\n          />\r\n        ) : null} */}\r\n            <hr />\r\n            {/* <div className=\"container-fluid\">\r\n                <h1>Add Box:</h1>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Box No\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={box_no}\r\n                            variant=\"outlined\"\r\n                            name=\"box_no\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <TextField\r\n                            label=\"Description\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={description}\r\n                            variant=\"outlined\"\r\n                            name=\"description\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-3 mb-3\">\r\n                        <TextField\r\n                            label=\"Qty\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            value={qty}\r\n                            variant=\"outlined\"\r\n                            name=\"qty\"\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-md-2 mb-3 pl-5\">\r\n                        <Button\r\n                            color=\"primary\"\r\n                            // className=\"mr-2\"\r\n                            // disableElevation\r\n                            variant=\"contained\"\r\n                            onClick={submitAddBox}\r\n                        >\r\n                            Add New\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n\r\n            {/* <div className=\"float-action-btn\">\r\n            <Fab\r\n              variant=\"extended\"\r\n              onClick={addBox}\r\n              size=\"medium\"\r\n              color=\"primary\"\r\n              aria-label=\"add\"\r\n            >\r\n              <AddIcon />\r\n              Add Box\r\n            </Fab>\r\n          </div> */}\r\n\r\n            <hr />\r\n            <div className=\"w-100 mt-3 text-right\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    className=\"mr-2\"\r\n                    disableElevation\r\n                    variant=\"contained\"\r\n                    onClick={submitMdc}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RrgpAdd;\r\n","import React,{useState} from 'react'\r\nimport RgpBrowseDc from './browse';\r\n\r\nimport RrgpAdd from './rrgp/add';\r\n\r\n\r\n\r\nexport default function ReturnableIndex() {\r\n    const challanType = new URLSearchParams(window.location.search).get(\"type\");\r\n    const [index, setindex] = useState(0)\r\n    // const history = useHistory();\r\n    // console.log(challanType);\r\n\r\n    return (\r\n        <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n            <ul className=\"nav nav-tabs nav-tabs-line\">\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={\r\n                            `nav-link ` +\r\n                            (index === 0\r\n                                ? \"active\"\r\n                                : \"\")\r\n                        }\r\n                        onClick={() => {\r\n                            // window.location.href = `/logistics/delivery-challan?type=${encodeURIComponent(\r\n                            //   \"SL\" \r\n                            // )}`;\r\n                            setindex(0)\r\n                        }}\r\n                    >\r\n                        Browse\r\n                    </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a\r\n                        className={\r\n                            `nav-link ` +\r\n                            (index === 1 ? \"active\" : \"\")\r\n                        }\r\n                        onClick={() =>\r\n                            // (window.location.href = `/logistics/delivery-challan?type=${encodeURIComponent(\r\n                            //   \"Non SL\"\r\n                            // )}`)\r\n                            setindex(1)\r\n                        }\r\n                    >\r\n                        Returnable Gate Pass\r\n                    </a>\r\n                </li>\r\n              \r\n              \r\n               \r\n            </ul>\r\n            <div className=\"tab-content\">\r\n                {/* {(index === 0 || index === 1) && <ChallanIndex\r\n                    type={challanType ? decodeURIComponent(challanType) : \"SL\"}\r\n                />}  */}\r\n                \r\n                {  index===0&& <RgpBrowseDc/>}\r\n                {  index===1&& <RrgpAdd/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\"; \r\nimport { debounce, showErrorToast } from \"../../../../components/common\";\r\nimport DateFilter from \"../../../../components/dateFilter\";\r\nimport moment from \"moment\";\r\nimport ActionButtons from \"../../../../components/action-buttons\";\r\n\r\nconst RrgpBrowse = () => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  \r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [amountFigures, setAmountFigures] = useState({\r\n    amount: 0,\r\n    mdc_amount: 0,\r\n    actual_amount: 0,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [bodyParam, setBodyParam] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    chk_all:true,\r\n    status: \"\",\r\n    approval:\"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(     \r\n      setParams({...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n\r\n  const handleBodyParam = (event) => {\r\n    setTimeout(() => {\r\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"logistic/browse_rgp\",\r\n        params,\r\n        bodyParam,\r\n\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n          setAmountFigures({\r\n            amount: data.amount,\r\n            mdc_amount: data.mdc_amount,\r\n            actual_amount: data.actual_amount,\r\n          });\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handleRowId=(e)=>{\r\n    console.log(e)\r\n  }\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, bodyParam]);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ID\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                width: 100,\r\n                renderCell: (params) => {\r\n                  return moment(params.row.date).format(\"DD/MM/YYYY\");\r\n                },\r\n              },\r\n              {\r\n                field: \"rrgp_no\",\r\n                headerName: \"RRGP No.\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"rgp_no\",\r\n              headerName: \"RGP No.\",\r\n              width: 120,\r\n            },\r\n            \r\n           \r\n            {\r\n              field: \"company_id\",\r\n              headerName: \"Party ID\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"party_name\",\r\n              headerName: \"Party Name\",\r\n              width: 120,\r\n            },\r\n          \r\n            {\r\n              field: \"Contact\",\r\n              headerName: \"Contact\",\r\n              width: 120,\r\n            },\r\n            {\r\n              field: \"gate_no\",\r\n              headerName: \"Gate No\",\r\n              width: 120,\r\n            },\r\n            {\r\n                field: \"challan_no\",\r\n                headerName: \"Challan No\",\r\n                width: 120,\r\n              },\r\n            {\r\n              field: \"bill_no\",\r\n              headerName: \"Bill No\",\r\n              width: 120,\r\n            },\r\n            // {\r\n            //   field: \"Status\",\r\n            //   headerName: \"Status\",\r\n            //   width: 120,\r\n            // },\r\n            // {\r\n            //   field: \"Attachement\",\r\n            //   headerName: \"Docket No.\",\r\n            //   width: 150,\r\n            // },\r\n            \r\n           \r\n            {\r\n              field: \"action\",\r\n              headerName: \"Actions\",\r\n              width: 120,\r\n            },\r\n            \r\n          \r\n          ]}\r\n          \r\n          pagination\r\n          // getRowId={handleRowId}\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) =>  browseListData.ID}\r\n        />\r\n      </div>\r\n  \r\n    </>\r\n  );\r\n};\r\n\r\nexport default RrgpBrowse;\r\n","import React, { useState } from \"react\";\r\nimport RgpAdd from \"./add\";\r\nimport RrgpAdd from \"./add\";\r\nimport MrnAddDc from \"./add\";\r\nimport RrgpBrowse from \"./browse\";\r\nimport RgpBrowseDc from \"./browse\";\r\nimport MrnBrowseDc from \"./browse\";\r\n\r\nexport default function RrgpIndex() {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(0);\r\n            }}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => {\r\n              // dispatch(clearSelectedGodownId());\r\n              handleIndex(1);\r\n            }}\r\n          >\r\n            Return Of Returnable Gate Pass{\" \"}\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? <RrgpBrowse /> : <RrgpAdd/>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport DCIndex from \"../pages/DC\";\r\nimport CcrInIndex from \"../pages/logistics/ccr\";\r\nimport CcrIndex from \"../pages/logistics/ccr\";\r\nimport CcrOutIndex from \"../pages/logistics/ccr/ccrOut\";\r\nimport CourierInIndex from \"../pages/logistics/courier\";\r\nimport CourierIndex from \"../pages/logistics/courier\";\r\nimport CourierOutIndex from \"../pages/logistics/courier/courierOut\";\r\nimport CourierInvoiceIndex from \"../pages/logistics/courier/invoice\";\r\n// import DeliveryChallanIndex from \"../pages/logistics/delivery-challan\";\r\n// import DeliveryChallanBrowse from \"../pages/logistics/delivery-challan/browse\";\r\nimport ChallanIndexMdc from \"../pages/logistics/delivery-challan/mdc\";\r\nimport SlWipIndex from \"../pages/logistics/delivery-challan/slwip/index\";\r\nimport ChallanIndex from \"../pages/logistics/delivery-challan/index\";\r\nimport JobWorkIndex from \"../pages/logistics/job-work\";\r\nimport JobWorkOutIndex from \"../pages/logistics/job-work/jobWorkOut\";\r\nimport MrnDcIndex from \"../pages/logistics/material-receipt-note\";\r\nimport MrnPoIndex from \"../pages/logistics/material-receipt-note/mrn-po\";\r\nimport ReturnableIndex from \"../pages/logistics/returnable-gate-pass\";\r\nimport RrgpIndex from \"../pages/logistics/returnable-gate-pass/rrgp\";\r\nconst Logistics = () => {\r\n  const selectedSubMenu = window.location.pathname.split(\"/\")[2];\r\n  const menuLength=window.location.pathname.split('/').length;\r\n  // console.log(window.location.pathname.split('/').length)\r\n  // console.log(window.location.pathname.split('/'))\r\n  \r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Switch>\r\n        <Route path=\"/logistics/out/sl-dc\" exact ><ChallanIndex slType={\"SL\"}/></Route>\r\n        <Route path=\"/logistics/out/non-sl-dc\" exact><ChallanIndex slType={\"Non SL\"}/></Route>\r\n        <Route path=\"/logistics/out/mdc\" exact component={ChallanIndexMdc} />\r\n        <Route path=\"/logistics/out/sl-wip\"exact><SlWipIndex slType={\"SL\"}/></Route>\r\n        <Route path=\"/logistics/out/non-sl-wip\" exact><SlWipIndex slType={\"Non SL\"}/></Route>\r\n        <Route path=\"/logistics/out/dc-packaging\" exact component={DCIndex} />\r\n        <Route path=\"/logistics/in/mrn-dc\" exact component={MrnDcIndex} />\r\n        <Route path=\"/logistics/in/mrn-po\" exact component={MrnPoIndex} />\r\n        <Route path=\"/logistics/in/mrn-wip\" exact component={MrnDcIndex} />\r\n        <Route path=\"/logistics/rgp/rgp\" exact component={ReturnableIndex} />\r\n        <Route path=\"/logistics/rgp/rrgp\" exact component={RrgpIndex} />\r\n        <Route path=\"/logistics/jw/jwin\" exact component={JobWorkIndex} />\r\n        <Route path=\"/logistics/jw/jwo\" exact component={JobWorkOutIndex} />\r\n        <Route path=\"/logistics/ccr/ccr-in\" exact component={CcrInIndex} />\r\n        <Route path=\"/logistics/ccr/ccr-out\" exact component={CcrOutIndex} />\r\n        <Route path=\"/logistics/courier/in\" exact component={CourierInIndex} />\r\n        <Route path=\"/logistics/courier/out\" exact component={CourierOutIndex} />\r\n        <Route path=\"/logistics/courier/invoice\" exact component={CourierInvoiceIndex} />\r\n        {/* <Route\r\n          path=\"/logistics/delivery-challan\"\r\n          exact\r\n          component={DeliveryChallanIndex}\r\n        /> */}\r\n        {(menuLength<=2||selectedSubMenu===\"in\")&&<Redirect to=\"/logistics/in/mrn-dc\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"out\"&&<Redirect to=\"/logistics/out/sl-dc\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"rgp\"&&<Redirect to=\"/logistics/rgp/rgp\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"jw\"&&<Redirect to=\"/logistics/jw/jwin\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"ccr\"&&<Redirect to=\"/logistics/ccr/ccr-in\" from=\"/logistics\" />}\r\n        {selectedSubMenu===\"courier\"&&<Redirect to=\"/logistics/courier/in\" from=\"/logistics\" />}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default Logistics;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const searchAccountMasterData = createAction(\r\n    \"SEARCH_ACCOUNT_MASTER_DATA\",\r\n    (filters,params) => ({\r\n        payload: {filters, params},\r\n    }),\r\n);\r\nexport const searchAccountMasterDataSuccess = createAction(\r\n    \"SEARCH_ACCOUNT_MASTER_DATA_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\nexport const getAccountMasterFiltersList = createAction(\r\n    \"ACCOUNT_FILTER_LIST\"\r\n);\r\nexport const getAccountMasterFiltersListSuccess = createAction(\r\n    \"ACCOUNT_FILTER_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n\r\nexport const previewSelectedAccount = createAction(\r\n    \"ACCOUNT_MASTER_PREVIEW\",\r\n    (data) => ({\r\n        payload: data\r\n    })\r\n);\r\n\r\nexport const previewSelectedAccountSuccess = createAction(\r\n    \"ACCOUNT_MASTER_PREVIEW_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const clearSelectedAccount = createAction(\r\n    \"CLEAR_SELECTED_ACCOUNT\"\r\n);\r\n\r\nexport const setAccountHide = createAction(\r\n    \"ACCOUNT_MASTER_HIDE\",\r\n    (data) => ({\r\n        payload: data\r\n    })\r\n);\r\n\r\nexport const setAccountVerified = createAction(\r\n    \"ACCOUNT_MASTER_VERIFIED\",\r\n    (data) => ({\r\n        payload: data\r\n    })\r\n);\r\n\r\n \r\n\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\nexport const selectedComboMLFBId = createAction(\n  \"SELECTED_COMBO_MLFB_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedComboId = createAction(\n  \"CLEAR_SELECTED_COMBO_MLFB_ID\"\n);\nexport const selectedGodownId = createAction(\"SELECTED_GODOWN_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedGodownId = createAction(\"CLEAR_SELECTED_GODOWN_ID\");\nexport const selectedItemGroupId = createAction(\n  \"SELECTED_ITEMGROUP_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\n\nexport const clearSelectedItemGroupId = createAction(\n  \"CLEAR_SELECTED_ITEMGROUP_ID\"\n);\n\nexport const selectedEmployeeId = createAction(\n  \"SELECTED_EMPLOYEE_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\n\nexport const clearSelectedEmployeeId = createAction(\n  \"CLEAR_SELECTED_EMPLOYEE_ID\"\n);\n\nexport const selectedProductId = createAction(\"SELECTED_PRODUCT_ID\", (id) => ({\n  payload: id,\n}));\n\nexport const clearSelectedProductId = createAction(\"CLEAR_SELECTED_PRODUCT_ID\");\n\nexport const selectedAccountId = createAction(\"SELECTED_ACCOUNT_ID\", (id) => ({\n  payload: id,\n}));\n\nexport const clearSelectedAccountId = createAction(\"CLEAR_SELECTED_ACCOUNT_ID\");\nexport const clearSelectedTempId = createAction(\"CLEAR_SELECTED_TEMP_ID\");\n\n//---------account configration--------------------------------\n\nexport const selectedRegionId = createAction(\"SELECTED_REGION_ID\", (id) => ({\n  payload: id,\n}));\n\nexport const clearSelectedRegionId = createAction(\"CLEAR_SELECTED_REGION_ID\");\n\nexport const selectedRatingId = createAction(\"SELECTED_RATING_ID\", (id) => ({\n  payload: id,\n}));\n\nexport const clearSelectedRatingId = createAction(\"CLEAR_SELECTED_RATING_ID\");\n\nexport const selectedDepartmentId = createAction(\n  \"SELECTED_DEPARTMENT_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\n\nexport const clearSelectedDepartmentId = createAction(\n  \"CLEAR_SELECTED_DEPARTMENT_ID\"\n);\n\nexport const selectedDesignationId = createAction(\n  \"SELECTED_DESIGNATION_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\n\nexport const clearSelectedDesignationId = createAction(\n  \"CLEAR_SELECTED_DESIGNATION_ID\"\n);\n\nexport const selectedSiemensId = createAction(\"SELECTED_SIEMENS_ID\", (id) => ({\n  payload: id,\n}));\n\nexport const clearSelectedSiemensId = createAction(\"CLEAR_SELECTED_SIEMENS_ID\");\n\nexport const selectedSupplyItemId = createAction(\n  \"SELECTED_SUPPLY_ITEM_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\n\nexport const clearSelectedSupplyItemId = createAction(\n  \"CLEAR_SELECTED_SUPPLY_ITEM_ID\"\n);\n//---------end account configration--------------------------------\n//---------end product configration--------------------------------\n\nexport const selectedCategoryId = createAction(\n  \"SELECTED_CATEGORY_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedCategoryId = createAction(\n  \"CLEAR_SELECTED_CATEGORY_ID\"\n);\n\nexport const selectedGroupId = createAction(\"SELECTED_GROUP_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedGroupId = createAction(\"CLEAR_SELECTED_GROUP_ID\");\n\nexport const selectedItemId = createAction(\"SELECTED_ITEM_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedItemId = createAction(\"CLEAR_SELECTED_ITEM_ID\");\n\nexport const selectedUnitId = createAction(\"SELECTED_UNIT_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedUnitId = createAction(\"CLEAR_SELECTED_UNIT_ID\");\n\nexport const selectedGGId = createAction(\"SELECTED_GG_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedGGId = createAction(\"CLEAR_SELECTED_GG_ID\");\n\n//---------end product configration--------------------------------\n//---------end enq configration--------------------------------\n\nexport const selectedPriorityId = createAction(\n  \"SELECTED_PRIORITY_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedPriorityId = createAction(\n  \"CLEAR_SELECTED_PRIORITY_ID\"\n);\n\nexport const selectedReferenceId = createAction(\n  \"SELECTED_REFERENCE_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedReferenceId = createAction(\n  \"CLEAR_SELECTED_REFERENCE_ID\"\n);\n\nexport const selectedEnqStatusId = createAction(\n  \"SELECTED_ENQ_STATUS_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedEnqStatusId = createAction(\n  \"CLEAR_SELECTED_ENQ_STATUS_ID\"\n);\n\nexport const selectedTypeId = createAction(\"SELECTED_TYPE_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedTypeId = createAction(\"CLEAR_SELECTED_TYPE_ID\");\n\n//---------end enq configration--------------------------------\n//--------- COSTING configration--------------------------------\n\nexport const selectedFinanceId = createAction(\"SELECTED_FINANCE_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedFinanceId = createAction(\n  \"CLEAR_SELECTED_FINANCE._ID\"\n);\n\nexport const selectedLedgerId = createAction(\"SELECTED_LEDGER_ID\", (id) => ({\n  payload: id,\n}));\nexport const clearSelectedLedgerId = createAction(\"CLEAR_SELECTED_LEDGER_ID\");\n\nexport const selectedCostingTabsId = createAction(\n  \"SELECTED_COSTING_TABS_ID\",\n  (id) => ({\n    payload: id,\n  })\n);\nexport const clearSelectedCostingTabsId = createAction(\n  \"CLEAR_SELECTED_COSTING_TABS_ID\"\n);\n\n//---------end COSTING configration--------------------------------\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAccountMasterFiltersList } from \"../../../_redux/actions/masters/account.action\";\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Tooltip,\r\n  withStyles,\r\n  Button,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { selectedAccountId } from \"../../../_redux/actions/masters/all.action\";\r\nimport {\r\n  getBrowseUserRight,\r\n  showErrorToast,\r\n  UserRight,\r\n} from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport {\r\n  getFilterData,\r\n  updateFilterData,\r\n} from \"../../../_redux/actions/common.action\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst user_id =localStorage.getItem(\"userId\")\r\n\r\n\r\nconst BrowseAccount = ({ onEdit, onPreview, accountType,browse_id }) => {\r\n  // UserRight()\r\n  const dispatch = useDispatch();\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n  const filterList = useSelector(\r\n    (state) => state.AccountMaster.accountFilterList\r\n  );\r\n  const filterjsonData = useSelector((state) => state.common.getFilterData);\r\n  const updatefilterjsonData = useSelector(\r\n    (state) => state.common.updateFilterData\r\n  );\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [filter, setfilter] = useState(false);\r\n  const [accountMasterFilter, setAccountMasterFilter] = useState({\r\n    region_name: \"\",\r\n    group_name: \"\",\r\n    verified: \"\",\r\n    mark_engg: \"\",\r\n    account_type: accountType,\r\n  });\r\n  const [tempVerifed, setTempVerified] = useState([]);\r\n  const [regionList, setRegionList] = useState([]);\r\n  const [groupList, setGroupList] = useState([]);\r\n  const [enggList, setEnggList] = useState([]);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleUpdateFilterData = () => {\r\n    let body = {\r\n      filterpage: { ...params },\r\n      filterData: { ...accountMasterFilter },\r\n    };\r\n    body.user_id = user_id;\r\n    body.browse_id = browse_id;\r\n    dispatch(updateFilterData(body));\r\n    // if (updatefilterjsonData.status == 200) {\r\n    //   // dispatch(getFilterData(1));\r\n    // }\r\n  };\r\n  let columns = [\r\n    {\r\n      field: \"ID\",\r\n      headerName: \"ID\",\r\n      width: 70,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Region\",\r\n      headerName: \"Region\",\r\n      width: 180,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"short_name\",\r\n      headerName: \"Short Name\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.short_name}>\r\n          <span>{params.row.short_name}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 200,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Company\",\r\n      headerName: \"Company\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.Company}>\r\n          <span>{params.row.Company}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 180,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Address\",\r\n      headerName: \"Address\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.Address}>\r\n          <span>{params.row.Address}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 300,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Pin\",\r\n      headerName: \"Pin\",\r\n      width: 80,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Mobile\",\r\n      headerName: \"Mobile\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.Mobile}>\r\n          <span>{params.row.Mobile}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"Email\",\r\n      headerName: \"Email\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.Email}>\r\n          <span>{params.row.Email}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 200,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"edit\",\r\n      headerName: \"Verified\",\r\n      renderCell: (params) => (\r\n        <FormControlLabel\r\n          className={\"formControlLabel\"}\r\n          control={\r\n            <Checkbox\r\n              defaultChecked={params.row.edit === true}\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onChange={(event) =>\r\n                updateVerifiedStatus(event.target.checked, params.ID)\r\n              }\r\n              inputProps={{ \"aria-label\": \"checkbox with small size\" }}\r\n            />\r\n          }\r\n          label={\r\n            <span\r\n              className={\r\n                \"font_13 \" +\r\n                (params.row.edit === true ||\r\n                tempVerifed.indexOf(params.row.ID) > -1\r\n                  ? \"text-success\"\r\n                  : \"text-danger\")\r\n              }\r\n            >\r\n              {params.row.edit === true ||\r\n              tempVerifed.indexOf(params.row.ID) > -1\r\n                ? \"Verified\"\r\n                : \"Not Verified\"}\r\n            </span>\r\n          }\r\n        />\r\n      ),\r\n      width: 120,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"hide\",\r\n      headerName: \"Hide\",\r\n      renderCell: (params) => (\r\n        <Checkbox\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          defaultChecked={params.row.hide === true}\r\n          onChange={(event) =>\r\n            updateHideStatus(event.target.checked, params.ID)\r\n          }\r\n          // onChange={() => console.log(params.id)}\r\n          inputProps={{ \"aria-label\": \"checkbox with small size\" }}\r\n        />\r\n      ),\r\n      width: 80,\r\n      hide: false,\r\n    },\r\n    {\r\n      field: \"mark_engg\",\r\n      headerName: \"Markt. Engg\",\r\n      renderCell: (params) => (\r\n        <LightTooltip title={params.row.mark_engg}>\r\n          <span>{params.row.mark_engg}</span>\r\n        </LightTooltip>\r\n      ),\r\n      width: 150,\r\n      hide: false,\r\n    },\r\n\r\n    {\r\n      field: \"datetime\",\r\n      headerName: \"Date Time\",\r\n      width: 120,\r\n      hide: false,\r\n    },\r\n    // {\r\n    //   field: \"\",\r\n    //   headerName: \"Actions\",\r\n    //   renderCell: (params) => (\r\n    //     <ActionButtons\r\n    //       onPreview={\r\n    //         getBrowseUserRight(getuserRightListResponse)?.level == 1\r\n    //           ? () => handleEdit(params.row.id)\r\n    //           : null\r\n    //       }\r\n    //       onEdit={\r\n    //         getBrowseUserRight(getuserRightListResponse)?.level == 1\r\n    //           ? () => handleEdit(params.row.id)\r\n    //           : null\r\n    //       }\r\n    //       // onDelete={\r\n    //       //   getBrowseUserRight(getuserRightListResponse)?.delete_right == \"True\"\r\n    //       //     ? () => handleDeleteRow(params.row.id)\r\n    //       //     : null\r\n    //       // }\r\n    //     />\r\n    //   ),\r\n    //   width: 120,\r\n    // },\r\n  ];\r\n\r\n  const handleFilters = (event) => {\r\n   \r\n    setAccountMasterFilter({\r\n      ...accountMasterFilter,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    setfilter(true)\r\n    // handleUpdateFilterData()\r\n  };\r\n  const handleParams = (event) => {\r\n    setParams({ ...params, [event.target.name]: event.target.value });\r\n    setfilter(true)\r\n  };\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"master/browse_account_master\",\r\n      params,\r\n      accountMasterFilter,\r\n      \"node\"\r\n    )\r\n      .then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    if (filterList?.status === 200) {\r\n      setRegionList(filterList.listregion);\r\n      setGroupList(filterList.listGroup);\r\n      setEnggList(filterList.listengg);\r\n    }\r\n  }, [filterList]);\r\n \r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n    // handleUpdateFilterData();\r\n    setfilter(true)\r\n  };\r\n  const handlePageChange = (param) => {\r\n    console.log(param)\r\n    setParams({ ...params, pageNo: param });\r\n    // handleUpdateFilterData();\r\n    setfilter(true)\r\n  };\r\n  const updateHideStatus = (val, id) => {\r\n    const param = {\r\n      company_id: id,\r\n      hide: val ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    // dispatch(setAccountHide(param));\r\n  };\r\n  const updateVerifiedStatus = (val, id) => {\r\n    var temp = [...tempVerifed];\r\n    var tempIndex = temp.indexOf(id);\r\n    const param = {\r\n      company_id: id,\r\n      edit: val ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    if (tempIndex > -1) {\r\n      temp.splice(tempIndex, 1);\r\n    } else {\r\n      if (val) {\r\n        temp.push(id);\r\n      }\r\n    }\r\n    setTempVerified(temp);\r\n    // dispatch(setAccountVerified(param));\r\n  };\r\n  const handleEdit = (id) => {\r\n    // dispatch(selectedAccountId(id));\r\n    onEdit();\r\n  };\r\n  useEffect(() => {\r\n    if (filterjsonData?.data?.browse_id==browse_id) {\r\n      setParams(filterjsonData.data.filterpage);\r\n      setAccountMasterFilter(filterjsonData.data.filterData);\r\n    }\r\n  }, [filterjsonData]);\r\n  useEffect(() => {\r\n    dispatch(getFilterData(browse_id));\r\n  }, []);\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n    if(filter){\r\n      handleUpdateFilterData()\r\n    }\r\n  }, [params, accountMasterFilter]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          {/* <h1>zsdxcfgbhjnmk</h1> */}\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Region Name\r\n              </InputLabel>\r\n              <Select\r\n                name=\"region_name\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.region_name}\r\n                onChange={handleFilters}\r\n                label=\"Region Name\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {regionList.length > 0\r\n                  ? regionList.map((region, index) => {\r\n                      return (\r\n                        <MenuItem\r\n                          key={\"region\" + index}\r\n                          value={region.region_name}\r\n                        >\r\n                          {region.region_name}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Group\r\n              </InputLabel>\r\n              <Select\r\n                name=\"group_name\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.group_name}\r\n                onChange={handleFilters}\r\n                label=\"Group\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {groupList.length > 0\r\n                  ? groupList.map((group, index) => {\r\n                      return (\r\n                        <MenuItem\r\n                          key={\"groupList\" + index}\r\n                          value={group.group_name}\r\n                        >\r\n                          {group.group_name}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Verified\r\n              </InputLabel>\r\n              <Select\r\n                name=\"verified\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.verified}\r\n                onChange={handleFilters}\r\n                label=\"Verified\"\r\n              >\r\n                <MenuItem value={\"\"}>All</MenuItem>\r\n                <MenuItem value={\"1\"}>Verified</MenuItem>\r\n                <MenuItem value={\"0\"}>Not Verified</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Markt. Engg\r\n              </InputLabel>\r\n              <Select\r\n                name=\"mark_engg\"\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={accountMasterFilter.mark_engg}\r\n                onChange={handleFilters}\r\n                label=\"Markt. Engg\"\r\n              >\r\n                <MenuItem value=\"\">None</MenuItem>\r\n                {enggList.length > 0\r\n                  ? enggList.map((engg, index) => {\r\n                      return (\r\n                        <MenuItem key={\"enggList\" + index} value={engg.name}>\r\n                          {engg.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyDown={(e) => {\r\n                console.log(e.keyCode);\r\n                if (e.keyCode === 13) {\r\n                  // handleUpdateFilterData();\r\n                  handleParams(e);\r\n                  setfilter(true)\r\n                }\r\n              }}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2 text-right\">\r\n            <Button color=\"primary\" disableElevation variant=\"contained\">\r\n              Export Excel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          pagination\r\n          disableColumnFilter\r\n          columns={columns}\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          getRowClassName={(params) => {\r\n            return params.row.sr_no % 2 === 0 ? \"even\" : \"odd\";\r\n          }}\r\n          rowsPerPageOptions={[15, 25, 50, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData?.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  // NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          // onColumnVisibilityChange={(e) => handleColumnHide(e)}\r\n          getRowId={(browseListData) => browseListData.sr_no}\r\n          rows={browseListData} //accountMasterList\r\n         \r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default BrowseAccount;\r\n","import {\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport { showSuccessToast } from \"../../../components/common\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nconst ContactPerson = ({ formData, handleChange,removeIndex, handleCPersonList }) => {\r\n  const filterList = useSelector(\r\n    (state) => state.AccountMaster.accountFilterList\r\n  );\r\n  console.log(filterList)\r\nconst [formContact, setformContact] = useState({\r\n  cperson_name:\"\",\r\n  company_name:\"\",\r\n  department_id:\"\",\r\n  department_name:\"\",\r\n  designation_name:\"\",\r\n  designation_id:\"\",\r\n  mobile:\"\",\r\n  email:\"\",\r\n  phone:\"\",\r\n  extn:\"\", \r\n  vcard_path:\"\",\r\n})\r\n\r\nconst uploadImage=async(e)=>{\r\n  let value = e.target.files[0];\r\n  let formData = new FormData();\r\n  formData.append(\"file_path\", value);\r\n  const response=await CommonController.imageUpoad(\"master/file\",formData)\r\n  if(response.status===200){\r\n    showSuccessToast(\"Image Upload successfully\")\r\n    setformContact({...formContact,vcard_path:response.file_name.filename})\r\n    console.log(response)\r\n  }\r\n \r\n}\r\n  const columns = [\r\n    {\r\n      id: \"cperson_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Name\",\r\n    },\r\n    {\r\n      id: \"department_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Department \",\r\n    },\r\n    {\r\n      id: \"designation_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Designation\",\r\n    },\r\n    {\r\n      id: \"mobile\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Mobile\",\r\n    },\r\n    {\r\n      id: \"email\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Email\",\r\n    },\r\n    {\r\n      id: \"phone\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Phone\",\r\n    },\r\n    {\r\n      id: \"\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Extn\",\r\n    },\r\n  ];\r\n  const [dropDownValues, setDropDownValues] = useState({\r\n    departmentList: [],\r\n    designationList: [],\r\n  });\r\n  const handleSaveForm=()=>{\r\n    handleCPersonList(formContact);\r\n\r\n  }\r\n  const handleOnChange=(e,value)=>{\r\n  setformContact({...formContact,[e.target.name]:e.target.value})\r\nif(e.target.role===\"option\"){\r\n  setformContact({...formContact,department_name:value.department_name,department_id:value.department_id})\r\n}\r\n  }\r\n  const handleRemoveContact = (id) => {\r\n    let personList = formData.cpersonList;\r\n    const itemIndex = personList.findIndex((x) => x === id);\r\n    console.log(itemIndex)\r\n    if (itemIndex > -1) {\r\n      personList.splice(itemIndex, 1);\r\n      removeIndex(personList);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if(filterList?.listengg?.length>0)\r\n    {\r\n        const values = {\r\n          departmentList: filterList.department,\r\n          designationList: filterList.designation,\r\n        };\r\n        setDropDownValues(values);\r\n      }\r\n  }, [filterList]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Company Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"company_name\"\r\n          value={formData.company_name}\r\n          size=\"small\"\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Contact ID\"\r\n          disabled\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"contact_id\"\r\n          value={formData.contact_id}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Contact Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"cperson_name\"\r\n          value={formContact.cperson_name}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <Autocomplete\r\n          size=\"small\"\r\n          options={dropDownValues.departmentList}\r\n          getOptionLabel={(option) => option.department_name}\r\n          onChange={handleOnChange}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Department\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <Autocomplete\r\n          size=\"small\"\r\n          options={dropDownValues.designationList}\r\n          getOptionLabel={(option) => option.designation_name}\r\n          fullWidth\r\n          onChange={(e,value)=>setformContact({...formContact,designation_name:value.designation_name,designation_id:value.designation_id})}\r\n          variant=\"outlined\"\r\n          renderInput={(params) => (\r\n            <TextField {...params} label=\"Designation\" variant=\"outlined\" />\r\n          )}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Mobile\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"mobile\"\r\n          value={formContact.mobile}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Email\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"email\"\r\n          value={formContact.email}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Phone\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"phone\"\r\n          value={formContact.phone}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-4 mb-5\">\r\n        <TextField\r\n          label=\"Extn.\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          name=\"extn\"\r\n          value={formContact.extn}\r\n          size=\"small\"\r\n          onChange={handleOnChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-2 mb-2\">\r\n        <InputLabel htmlFor=\"file-upload\" style={{ cursor: \"pointer\" }} >\r\n        Company Card\r\n        </InputLabel>\r\n        <Input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        // style={{ display: \"none\" }}\r\n          label=\"Extn.\"\r\n          fullWidth\r\n          // variant=\"outlined\"\r\n          name=\"contact_name\"\r\n          value={formData.contact_name}\r\n          size=\"small\"\r\n          onChange={uploadImage}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-2 mt-5 ml-5 pt-4 \">\r\n      <Button\r\n          variant=\"contained\"\r\n          onClick={handleSaveForm}\r\n          color=\"primary\"\r\n          disableElevation\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n      <div className=\"col-md-12 mb-3\">\r\n        <SimpleTable\r\n          columns={columns}\r\n          rows={formData.cpersonList}\r\n          onDelete={handleRemoveContact}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPerson;\r\n","import {\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getAutoValue } from \"../../../components/common\";\r\nconst GeneralInfo = ({ formData, handleChange, handleAutoChange }) => {\r\n  const filterList = useSelector(\r\n    (state) => state.AccountMaster.accountFilterList\r\n  );\r\n  \r\n  console.log(formData)\r\n  const [dropDownValues, setDropDownValues] = useState({\r\n    groupList: [],\r\n    pincodeList: [],\r\n    regionList: [],\r\n    ratingList: [],\r\n    employeeList: [],\r\n    seimenggList: [],\r\n  });\r\n  useEffect(() => {\r\n    if(filterList?.listengg?.length>0)\r\n    {\r\n        const values = {\r\n          groupList: filterList.listGroup,\r\n          pincodeList: filterList.pincode,\r\n          regionList: filterList.listregion,\r\n          ratingList: filterList.rating,\r\n          employeeList: filterList.listengg,\r\n          seimenggList: filterList.siemensEngg,\r\n        };\r\n        setDropDownValues(values);\r\n      }\r\n  }, [filterList]);\r\n\r\n  const {\r\n    groupList,\r\n    pincodeList,\r\n    regionList,\r\n    employeeList,\r\n    seimenggList,\r\n    ratingList,\r\n  } = dropDownValues;\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"Company Id\"\r\n              fullWidth\r\n              disabled\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"company_id\"\r\n              value={formData.company_id}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"Short Name *\"\r\n              name=\"short_name\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={formData.short_name}\r\n              \r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"Company Name*\"\r\n              onChange={handleChange}\r\n              fullWidth\r\n              value={formData.company_name}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"company_name\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <Autocomplete\r\n              size=\"small\"\r\n              options={groupList}\r\n              getOptionLabel={(option) => option.group_name}\r\n              fullWidth\r\n              // value={ formData.group_name}\r\n               value={\r\n                  { group_id: formData.group_id, group_name: formData.group_name }\r\n              }\r\n              onChange={(event, value) =>\r\n                handleAutoChange(\"group_id\", \"group_name\", value)\r\n              }\r\n              variant=\"outlined\"\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Group\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"Address 1\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"address1\"\r\n              value={formData.address1}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"Address 2\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"address2\"\r\n              value={formData.address2}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-12 mb-5\">\r\n            <Autocomplete\r\n              size=\"small\"\r\n              options={pincodeList}\r\n              getOptionLabel={(option) => option.pin_code_no}\r\n              fullWidth\r\n              value={\r\n                formData.pin_code_id != \"\"\r\n                  ? { pin_code_id: formData.pin_code_id, pin_code_no: formData.pin_code_no }\r\n                  : \"\"\r\n              }\r\n              // value={formData.pin_code}\r\n              onChange={(event, value) =>\r\n                handleAutoChange(\"pin_code_id\",\"pin_code_no\",value)\r\n              }\r\n              variant=\"outlined\"\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"Pincode\" variant=\"outlined\" />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"City\"\r\n              name=\"city\"\r\n              value={formData.city}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mb-5\">\r\n            <TextField\r\n              label=\"District\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              size=\"small\"\r\n              name=\"district\"\r\n              value={formData.district}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Pan No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"pan_no\"\r\n            value={formData.pan_no}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"GSTIN No.\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"tin_no\"\r\n            value={formData.tin_no}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Phone No. 1\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"phone1\"\r\n            value={formData.phone1}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Phone No. 2\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"phone2\"\r\n            value={formData.phone2}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Mobile\"\r\n            name=\"mobile\"\r\n            value={formData.mobile}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Fax\"\r\n            name=\"fax\"\r\n            value={formData.fax}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Website\"\r\n            name=\"website\"\r\n            value={formData.website}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={ratingList}\r\n            onChange={(event, value) =>\r\n              handleAutoChange(\"rating_id\", \"rating_name\", value)\r\n            }\r\n            getOptionLabel={(option) => option.rating_name}\r\n            value={{ rating_id: formData.rating_id, rating_name: formData.rating_name }}\r\n            // value={formData.rating_name}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Rating\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4\">\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Remarks\"\r\n            fullWidth\r\n            name=\"remarks\"\r\n            value={formData.remarks}\r\n            onChange={handleChange}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Distance\"\r\n            fullWidth\r\n            name=\"distance\"\r\n            value={formData.distance}\r\n            onChange={handleChange}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Credit Period\"\r\n            // type=\"number\"\r\n            fullWidth\r\n            name=\"credit_period\"\r\n            value={formData.credit_period}\r\n            onChange={handleChange}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"Credit Limit\"\r\n            type=\"number\"\r\n\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            name=\"credit_limit\"\r\n            value={formData.credit_limit}\r\n            onChange={handleChange}\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mb-5\">\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={employeeList}\r\n            onChange={(event, value) =>\r\n              handleAutoChange(\"\", \"name\", value)\r\n            }\r\n            getOptionLabel={(option) => option.name}\r\n            fullWidth\r\n            value={\r\n              formData.name != \"\"\r\n                ? getAutoValue(\"name\", employeeList, formData.name)\r\n                : \"\"\r\n            }\r\n            // value={formData.mark_engg}\r\n            variant=\"outlined\"\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Marketing Engg.\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={seimenggList || []}\r\n            onChange={(event, value) =>\r\n              handleAutoChange(\"se_id\", \"Engg_name\", value)\r\n            }\r\n            value={\r\n              formData?.Engg_name != \"\"\r\n                ? { se_id: formData?.se_id, Engg_name: formData?.Engg_name }\r\n                : \"\"\r\n            }\r\n            // value={formData?.siem_engg}\r\n            getOptionLabel={(option) => option.Engg_name}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Siemens Engg.\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-md-12 mb-5\">\r\n          <TextField\r\n            label=\"State\"\r\n            name=\"state\"\r\n            value={formData.state}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-12 mb-5\">\r\n          <Autocomplete\r\n            size=\"small\"\r\n            options={regionList}\r\n            onChange={(event, value) =>\r\n              handleAutoChange(\"region_id\", \"region_name\", value)\r\n            }\r\n            getOptionLabel={(option) => option.region_name}\r\n            fullWidth\r\n            value={{ region_id: formData.region_id, region_name: formData.region_name }}\r\n            variant=\"outlined\"\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Region\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n        </div>\r\n    \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeneralInfo;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nconst AccountTNC = ({ formData, handleChange,list }) => {\n  const [dropDownValues, setDropDownValues] = useState({\n    pfList: [],\n    exciseDutyList: [],\n    salesTaxList: [],\n    freightList: [],\n    insuranceList: [],\n    inspectionList: [],\n    modList: [],\n    deliveryList: [],\n    octroiList: [],\n    servicetaxList: [],\n    travelChgrList: [],\n    conveyanceList: [],\n    loadingList: [],\n    boardingList: [],\n    validityList: [],\n    paymentList: [],\n    financeList: [],\n    ldList: [],\n  });\n  useEffect(() => {\n      setDropDownValues(list);\n  }, [list]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency1\"\n          select\n          label=\"P&F\"\n          fullWidth\n          name=\"pf_id\"\n          value={formData.pf_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.pfList.map((option) => (\n            <MenuItem key={option.pf_id} value={option.pf_id}>\n              {option.pf_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency3\"\n          select\n          label=\"Service Tax\"\n          fullWidth\n          name=\"servicetax_id\"\n          value={formData.servicetax_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.servicetaxList.map((option) => (\n            <MenuItem key={option.servicetax_id} value={option.servicetax_id}>\n              {option.servicetax_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency2\"\n          select\n          label=\"Excise Duty\"\n          fullWidth\n          name=\"exciseduty_id\"\n          value={formData.exciseduty_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.exciseDutyList.map((option) => (\n            <MenuItem key={option.exciseduty_id} value={option.exciseduty_id}>\n              {option.exciseduty_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency4\"\n          select\n          label=\"Travel Charges\"\n          fullWidth\n          name=\"travel_id\"\n          value={formData.travel_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.travelChgrList.map((option) => (\n            <MenuItem key={option.travel_id} value={option.travel_id}>\n              {option.travel_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency1\"\n          select\n          label=\"Sales Tax\"\n          fullWidth\n          name=\"salestax_id\"\n          value={formData.salestax_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.salesTaxList.map((option) => (\n            <MenuItem key={option.salestax_id} value={option.salestax_id}>\n              {option.salestax_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency5\"\n          select\n          label=\"Conveynance\"\n          fullWidth\n          name=\"conveyance_id\"\n          value={formData.conveyance_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.conveyanceList.map((option) => (\n            <MenuItem key={option.conveyance_id} value={option.conveyance_id}>\n              {option.conveyance_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency1\"\n          select\n          label=\"Freight\"\n          fullWidth\n          name=\"freight_id\"\n          value={formData.freight_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.freightList.map((option) => (\n            <MenuItem key={option.freight_id} value={option.freight_id}>\n              {option.freight_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency8\"\n          select\n          label=\"Loading\"\n          fullWidth\n          name=\"loading_id\"\n          value={formData.loading_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.loadingList.map((option) => (\n            <MenuItem key={option.loading_id} value={option.loading_id}>\n              {option.loading_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency56\"\n          select\n          label=\"Insurance\"\n          fullWidth\n          name=\"insurance_id\"\n          value={formData.insurance_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.insuranceList.map((option) => (\n            <MenuItem key={option.insurance_id} value={option.insurance_id}>\n              {option.insurance_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency9\"\n          select\n          label=\"Boarding\"\n          fullWidth\n          name=\"boarding_id\"\n          value={formData.boarding_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.boardingList.map((option) => (\n            <MenuItem key={option.boarding_id} value={option.boarding_id}>\n              {option.boarding_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency67\"\n          select\n          label=\"Inspection\"\n          fullWidth\n          name=\"inspection_id\"\n          value={formData.inspection_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.inspectionList.map((option) => (\n            <MenuItem key={option.inspection_id} value={option.inspection_id}>\n              {option.inspection_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency67\"\n          select\n          label=\"LD Clause\"\n          fullWidth\n          name=\"ld_id\"\n          value={formData.ld_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.ldList.map((option) => (\n            <MenuItem key={option.ld_id} value={option.ld_id}>\n              {option.ld_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency23\"\n          select\n          label=\"Mode Of Dispatch\"\n          fullWidth\n          name=\"mode_of_dispatch_id\"\n          value={formData.mode_of_dispatch_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.modList.map((option) => (\n            <MenuItem key={option.mode_of_dispatch_id} value={option.mode_of_dispatch_id}>\n              {option.mode_of_dispatch_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency34\"\n          select\n          label=\"Validity\"\n          fullWidth\n          name=\"validity_id\"\n          value={formData.validity_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.validityList.map((option) => (\n            <MenuItem key={option.validity_id} value={option.validity_id}>\n              {option.validity_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency33\"\n          select\n          label=\"Delivery\"\n          fullWidth\n          name=\"delivery_id\"\n          value={formData.delivery_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.deliveryList.map((option) => (\n            <MenuItem key={option.delivery_id} value={option.delivery_id}>\n              {option.delivery_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency13\"\n          select\n          label=\"Payment\"\n          fullWidth\n          name=\"payment_id\"\n          value={formData.payment_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.paymentList.map((option) => (\n            <MenuItem key={option.payment_id} value={option.payment_id}>\n              {option.payment_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency1\"\n          select\n          label=\"Octroi\"\n          fullWidth\n          name=\"octroi_id\"\n          value={formData.octroi_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.octroiList.map((option) => (\n            <MenuItem key={option.octroi_id} value={option.octroi_id}>\n              {option.octroi_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <div className=\"col-md-4 mb-3\">\n        <TextField\n          id=\"outlined-select-currency1\"\n          select\n          label=\"Finance\"\n          fullWidth\n          name=\"finance_id\"\n          value={formData.finance_id}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {dropDownValues?.financeList.map((option) => (\n            <MenuItem key={option.finance_id} value={option.finance_id}>\n              {option.finance_name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountTNC;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport ContactPerson from \"./contact_person\";\r\nimport GeneralInfo from \"./generalInfo\";\r\nimport AccountTNC from \"./tnc\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nconst AddAccountMaster = ({handleAddAccount}) => {\r\n  const selectedIdResponse = useSelector(\r\n    (state) => state.AllReducersMaster.accountId\r\n  );\r\n  console.log(selectedIdResponse)\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [dropdownList, setdropdownList] = useState([])\r\n  const [formData, setFormData] = useState({\r\n\r\n    company_id:0,\r\n    company_name:\"\",  \r\n    short_name:\"\",\r\n    group_id :\"\", \r\n    group_name:\"\",\r\n    address1 :\"\",  \r\n    address2 :\"\",  \r\n    pin_id :\"\",  \r\n    pin_code:\"\",  \r\n    region_id :\"\",  \r\n    region_name:\"\",  \r\n    phone1:\"\",  \r\n    phone2:\"\",  \r\n    mobile:\"\",  \r\n    fax:\"\",  \r\n    email :\"\",  \r\n    website :\"\",  \r\n    rating_id:\"\",  \r\n    rating_name :\"\",  \r\n    // mark_engg :\"\",  \r\n    name:\"\",\r\n    se_id:\"\",  \r\n    Engg_name :\"\",  \r\n    // sim_enng\r\n    remarks:\"\" ,  \r\n    distance:\"\",  \r\n    credit_limit :null,  \r\n    credit_period:\"\",  \r\n    range:\"\",  \r\n    division:\"\",  \r\n    comm:\"\",  \r\n    ecc_no:\"\",  \r\n    ser_tax_no:\"\",  \r\n    pan_no:\"\",  \r\n    tin_no:\"\",  \r\n    cst_no:\"\",  \r\n    lst_no:\"\",  \r\n    pla_no:\"\",  \r\n    edit:\"\",  \r\n    hide:\"\",  \r\n    boarding_id:\"\",  \r\n    delivery_id:\"\",  \r\n    exciseduty_id:\"\",  \r\n    finance_id:\"\",  \r\n    freight_id:\"\",  \r\n    insurance_id :\"\",  \r\n    inspection_id :\"\",  \r\n    ld_id:\"\",  \r\n    loading_id:\"\",  \r\n    mode_of_dispatch_id:\"\",  \r\n    octroi_id:\"\",  \r\n    payment_id:\"\",  \r\n    pf_id:\"\",  \r\n    salestax_id:\"\",  \r\n    servicetax_id:\"\",  \r\n    validity_id:\"\",  \r\n    conveyance_id:\"\",  \r\n    travel_id:\"\",  \r\n    user_name: localStorage.getItem(\"userName\"),\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    account_type:\"\",\r\n    cpersonList: [],\r\n    partyList: [],\r\n  });\r\n  useEffect(() => {\r\n    CommonController.commonApiCallFilter(\r\n      \"master/dropdown_term_and_condition\",{},\"post\",\"node\"\r\n    ).then((data) => {\r\n      console.log(data)\r\n      const list = {\r\n        pfList: data.pf,\r\n        exciseDutyList: data.exciseDuty,\r\n        salesTaxList: data.saleTax,\r\n        freightList: data.freight,\r\n        insuranceList: data.insurance,\r\n        inspectionList: data.inspection,\r\n        modList: data.modeOfDispatch,\r\n        deliveryList: data.delivery,\r\n        octroiList: data.octroi,\r\n        servicetaxList: data.serviceTax,\r\n        travelChgrList: data.travel,\r\n        conveyanceList: data.conveyance,\r\n        loadingList: data.loading,\r\n        boardingList: data.boarding,\r\n        validityList: data.validity,\r\n        paymentList: data.payment,\r\n        financeList: data.finance,\r\n        ldList: data.ld,\r\n      };\r\n      setdropdownList(list);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedIdResponse) {\r\n      CommonController.commonApiCallFilter(\"Account/AccountMasterPreview\", {\r\n        company_id: selectedIdResponse,\r\n      }).then((data) => {\r\n        setFormData(data);\r\n      });\r\n    }\r\n  }, [selectedIdResponse]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  const handleAutoChange = (key1, key2, value) => {\r\n    console.log(value[key1])\r\n    console.log(value)\r\n    console.log(key1)\r\n    console.log(key2)\r\n    let tempFormData = { ...formData };\r\n\r\n    if (key1.trim() != \"\") {\r\n      tempFormData[key1] = value[key1];\r\n    }\r\n\r\n    if (key2.trim() != \"\") {\r\n      tempFormData[key2] = value[key2]\r\n    }\r\n    setFormData(tempFormData);\r\n  };\r\n  const saveForm = () => {\r\n    let _formData = { ...formData };\r\n\r\n    if (selectedIdResponse) {\r\n      _formData.user_id = localStorage.getItem(\"userId\");\r\n      _formData.user_name = localStorage.getItem(\"userName\");\r\n    }\r\n\r\n    CommonController.commonApiCallFilter(\r\n      \"master/insert_account_master\",\r\n      _formData,\"post\",\"node\"\r\n    ).then((data) => {\r\n      if (data.status===200) {\r\n        handleAddAccount()\r\n        showSuccessToast(\r\n          `Account Details ${\r\n            selectedIdResponse ? \"updated\" : \"saved\"\r\n          } successfully`\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => setSeletedIndex(0)}\r\n          >\r\n            General Infomation\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => setSeletedIndex(1)}\r\n          >\r\n            Contact Person\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 2 ? \"active\" : \"\")}\r\n            onClick={() => setSeletedIndex(2)}\r\n          >\r\n            Terms & Conditions\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content pt-7\">\r\n        {selectedIndex === 0 && (\r\n          <GeneralInfo\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            handleAutoChange={handleAutoChange}\r\n          />\r\n        )}\r\n        {selectedIndex === 1 && (\r\n          <ContactPerson\r\n            formData={formData}\r\n            handleChange={handleChange}\r\n            handleAutoChange={handleAutoChange}\r\n            removeIndex={(data)=>setFormData({...formData,cpersonList:data})}\r\n            handleCPersonList={(arr) =>{\r\n              let cperson={...formData};\r\n              cperson.cpersonList.push(arr);\r\n              console.log(cperson);\r\n              setFormData(cperson);\r\n            }\r\n            }\r\n          />\r\n        )}\r\n\r\n        {selectedIndex === 2 && (\r\n          <AccountTNC formData={formData} handleChange={handleChange} list={dropdownList} />\r\n        )}\r\n      </div>\r\n      <div className=\"col-md-12 text-right\">\r\n        {selectedIndex !== 0 && (\r\n          <Button\r\n            variant=\"contained\"\r\n            className=\"mr-2\"\r\n            onClick={() => setSeletedIndex(selectedIndex - 1)}\r\n            disableElevation\r\n          >\r\n            Back\r\n          </Button>\r\n        )}\r\n        {selectedIndex !== 2 && (\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setSeletedIndex(selectedIndex + 1)}\r\n            color=\"primary\"\r\n            className=\"mr-2\"\r\n            disableElevation\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n\r\n     {selectedIndex==2&&<Button\r\n          variant=\"contained\"\r\n          onClick={saveForm}\r\n          color=\"primary\"\r\n          disableElevation\r\n        >\r\n          Submit\r\n        </Button>\r\n        }   \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddAccountMaster;\r\n","import { Button } from \"@material-ui/core\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nexport const TCSAccount = ({ accountType }) => {\n  const [companyList, setCompanyList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [formData, setformData] = useState({\n    company_id:0,\n    tcs_per: \"\",\n    company_name:\"\"\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"master/browse_account_master_tcs\",\n      params,\n      { account_type: accountType },\n      \"node\"\n    )\n      .then((data) => {\n        if (data.status === 200) {\n          setBrowseListData(data.data);\n          setTotalRecords(data.totalRecords);\n        }\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n  const saveForm = async () => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"master/insert_account_master_tcs\",\n        formData,\n        \"post\",\n        \"node\"\n      ).then((data) => {\n        if (data.status === 200) {\n          showSuccessToast(\"success\");\n          getBrowseListData();\n          setformData({...formData, tcs_per: \"\" });\n        }\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n  useEffect(() => {\n    getBrowseListData();\n  }, [accountType, params]);\n  useEffect(() => {\n    CommonController.commonApiCallFilter(\n      \"master/list_account_master_tcs\",\n      \"\",\n      \"post\",\n      \"node\"\n    ).then((data) => {\n      if (data.status === 200){\n        setCompanyList(data[accountType]);\n      } \n    });\n  }, []);\n  console.log(formData);\n  return (\n    <div className=\"py-3\">\n      <div className=\"row\">\n        <div className=\"col-md-3 ml-3\">\n          <Autocomplete\n            size=\"small\"\n            options={companyList}\n            getOptionLabel={(option) => option.company_name}\n            fullWidth\n            value={formData.company_name!=\"\"?{company_name:formData.company_name ,company_id:formData.company_id}:null}\n            onChange={(event, value) =>\n              setformData({ ...formData, company_id: value.company_id ,company_name:value.company_name})\n            }\n            variant=\"outlined\"\n            renderInput={(params) => (\n              <TextField {...params} label=\"Company Name\" variant=\"outlined\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <TextField\n            label=\"tcs(%)\"\n            fullWidth\n            // disabled\n            variant=\"outlined\"\n            size=\"small\"\n            value={formData.tcs_per}\n            onChange={(e) =>\n              setformData({ ...formData, tcs_per: e.target.value })\n            }\n          />\n        </div>\n        <div className=\"col-md-3 mb-3\">\n          <Button\n            variant=\"contained\"\n            onClick={saveForm}\n            color=\"primary\"\n            disableElevation\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n      <hr />\n      <div className=\"col-md-3 mb-5\">\n        <TextField\n          label=\"Search\"\n          fullWidth\n          // disabled\n          variant=\"outlined\"\n          size=\"small\"\n          name=\"company_id\"\n          value={params.filter_value}\n          onChange={(e)=>setParams({...params,filter_value:e.target.value})}\n        />\n      </div>\n      <div style={{ height: 500, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"company_id\",\n              headerName: \"ID\",\n              width: 300,\n              hide: false,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 700,\n              hide: false,\n            },\n            {\n              field: \"tcs_per\",\n              headerName: \"TCS Per\",\n              width: 400,\n              hide: false,\n            },\n            {\n              field: \"\",\n              headerName: \"Action\",\n              width: 180,\n              hide: false,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          getRowClassName={(params) => {\n            return params.row.sr_no % 2 === 0 ? \"even\" : \"odd\";\n          }}\n          rowsPerPageOptions={[10, 25, 50, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          // onColumnVisibilityChange={(e) => handleColumnHide(e)}\n\n          rows={browseListData} //accountMasterList\n          getRowId={(browseListData) => browseListData.company_id}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState,useEffect } from \"react\";\r\nimport BrowseAccount from \"./browse\";\r\nimport AddAccountMaster from \"./form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAccountMasterFiltersList, previewSelectedAccount } from \"../../../_redux/actions/masters/account.action\";\r\nimport { clearSelectedAccountId } from \"../../../_redux/actions/masters/all.action\";\r\nimport { TCSAccount } from \"./tcs\";\r\nimport { getBrowseUserRight } from \"../../../components/common\";\r\n\r\nconst AccountsMaster = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [userRight, setuserRight] = useState({})\r\nconst thirdMenu=useSelector((state)=>state.common.userRightListThird)\r\n// console.log(thirdMenu)\r\n// console.log(getBrowseUserRight(thirdMenu.data)?.insert_right)\r\n  const handleActionClick = (id) => {\r\n    var param = {\r\n      company_id: id,\r\n    };\r\n    dispatch(previewSelectedAccount(param));\r\n    setSeletedIndex(1);\r\n  };\r\n\r\n  const handleIndex = (index) => {\r\n    dispatch(clearSelectedAccountId());\r\n    setSeletedIndex(index);\r\n  };\r\n  useEffect(()=>{\r\n    dispatch(getAccountMasterFiltersList());\r\n  },[]);\r\n  \r\n// useEffect(() => {\r\n// setuserRight(getBrowseUserRight(thirdMenu.data))\r\n// }, [thirdMenu])\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => handleIndex(0)}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n     {/* {userRight?.insert_right&& */}\r\n      <li className=\"nav-item\">\r\n      <a\r\n        className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n        onClick={() => handleIndex(1)}\r\n      >\r\n        New Account\r\n      </a>\r\n    </li>\r\n     {/* }   */}\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 2 ? \"active\" : \"\")}\r\n            onClick={() => handleIndex(2)}\r\n          >\r\n            TCS\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 && (\r\n          <BrowseAccount\r\n            onPreview={() => setSeletedIndex(1)}\r\n            onEdit={() => setSeletedIndex(1)}\r\n            onActionClick={handleActionClick}\r\n            accountType={props.accountType}\r\n            browse_id={props.browse_id}\r\n          />\r\n        )}\r\n        {selectedIndex === 1 && <AddAccountMaster handleAddAccount={()=>setSeletedIndex(0)} />}\r\n        {selectedIndex === 2 && <TCSAccount accountType={props.accountType}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountsMaster;\r\n","import React from \"react\";\nimport loaderImg from \"../assets/image/loader.gif\";\n\nexport const Loader = () => {\n  return \"\";\n  // <div className=\"custom-loading\">\n  //   <div>\n  //     <img src={loaderImg} />\n  //     {/* <Cu */}\n  //     <p>Please wait...</p>\n  //   </div>\n  // </div>\n};\n","export default __webpack_public_path__ + \"static/media/loader.72c6b9fd.gif\";","import { TextField, Button } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport React, { useEffect, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { SimpleTable } from \"../../../components/basic-table\";\nimport useForceUpdate from \"use-force-update\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../../../components/loader\";\n\nconst AddComboMLFB = ({ onClose }) => {\n  const [loading, setLoading] = useState(false);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [validator, setValidator] = useState(new SimpleReactValidator());\n  const selectedComboMLFBIdResponse = useSelector(\n    (state) => state.AllReducersMaster.comboMLFBId\n  );\n\n  const forceUpdate = useForceUpdate();\n  const [mlfbProductList, setProductList] = useState([]);\n  const [insertParams, setInsertParams] = useState({\n    tran_id: \"0\",\n    date: null,\n    product_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n    user_name: localStorage.getItem(\"userName\"),\n    mlfbItems: [],\n  });\n\n  const [selectedParams, setSelectedParams] = useState({\n    date: null,\n    selectedProduct: \"\",\n    selectedMlfb: \"\",\n  });\n  useEffect(async () => {\n    if (selectedComboMLFBIdResponse && mlfbProductList.length > 0) {\n      setDataLoading(true);\n      await CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbPreview\", {\n        tran_id: selectedComboMLFBIdResponse,\n      }).then((data) => {\n        setSelectedParams({\n          ...selectedParams,\n          date: new Date(\n            data.date.split(\"/\")[1] +\n              \"/\" +\n              data.date.split(\"/\")[0] +\n              \"/\" +\n              data.date.split(\"/\")[2]\n          ),\n          selectedMlfb: mlfbProductList.filter(\n            (x) => x.value === data.mlfb_no\n          )[0],\n        });\n        setInsertParams({\n          ...insertParams,\n          remarks: data.remarks,\n          product_id: data.product_id,\n          mlfbItems: data.mlfbItems,\n          date: data.date,\n          tran_id: data.tran_id,\n        });\n      });\n      setDataLoading(false);\n    }\n  }, [selectedComboMLFBIdResponse, mlfbProductList]);\n  const onProductChoose = async () => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex(\n      (x) => x.product_id === selectedParams.selectedProduct?.id\n    );\n    if (indx > -1) {\n      showErrorToast(\"Already selected\");\n    } else {\n      setLoading(true);\n      await CommonController.commonApiCallFilter(\n        \"ComboMlfb/ComboMlfbPreviewDetails\",\n        {\n          product_id: selectedParams.selectedProduct?.id,\n        }\n      ).then((data) => {\n        tempList.push(data);\n      });\n      setInsertParams({ ...insertParams, mlfbItems: tempList });\n      setLoading(false);\n      setSelectedParams({ ...selectedParams, selectedProduct: \"\" });\n    }\n  };\n  const insertCombo = async () => {\n    if (validator.allValid()) {\n      if (insertParams.mlfbItems.length > 0) {\n        CommonController.commonApiCallFilter(\n          \"ComboMlfb/ComboMlfbInsert\",\n          insertParams\n        ).then((data) => {\n          if (data.valid) {\n            showSuccessToast(\"Successfully Saved\");\n          } else {\n            showErrorToast(\"Something went wrong\");\n          }\n        });\n      } else {\n        showErrorToast(\"Please select MLFB Products\");\n      }\n    } else {\n      validator.showMessages();\n      // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n      forceUpdate();\n    }\n  };\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\n      \"Dropdown/GetProductMlfb\",\n      {}\n    ).then((data) => setProductList(data));\n  };\n  useEffect(() => {\n    getProductList();\n  }, []);\n  //   const handleDataChange = () => {};\n  const handleDateChange = (key, date) => {\n    setInsertParams({\n      ...insertParams,\n      [key]: moment(date).format(\"DD-MM-YYYY\"),\n    });\n    setSelectedParams({ ...selectedParams, date: date });\n  };\n  const mlfbColumns = [\n    {\n      id: \"mlfb_no\",\n      label: \"MLFB No\",\n    },\n    {\n      id: \"product_code\",\n      label: \"Product Code\",\n    },\n    {\n      id: \"category_name\",\n      label: \"Category Name\",\n    },\n    {\n      id: \"p_group_name\",\n      label: \"Group Name\",\n    },\n  ];\n  const handleDelete = (row) => {\n    const tempList = [...insertParams.mlfbItems];\n    const indx = tempList.findIndex((x) => x.product_id === row.product_id);\n    if (indx > -1) {\n      tempList.splice(indx, 1);\n    }\n    setInsertParams({ ...insertParams, mlfbItems: tempList });\n  };\n  return (\n    <div className=\"container-fluid mt-5 pt-5\">\n      {dataLoading && <Loader />}\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <DatePicker\n            label=\"Date*\"\n            value={selectedParams.date}\n            format=\"dd-MM-yyyy\"\n            onChange={(date) => {\n              handleDateChange(\"date\", date);\n              setSelectedParams({ ...selectedParams, date: date });\n            }}\n            animateYearScrolling\n            inputVariant=\"outlined\"\n            size=\"small\"\n            fullWidth\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"Date\", selectedParams.date, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-3\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={mlfbProductList}\n            getOptionLabel={(options) => options.value}\n            fullWidth\n            value={selectedParams.selectedMlfb}\n            onChange={(event, newValue) => {\n              setInsertParams({ ...insertParams, product_id: newValue?.id });\n              setSelectedParams({ ...selectedParams, selectedMlfb: newValue });\n            }}\n            size=\"small\"\n            renderInput={(params) => (\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                {...params}\n                label=\"MLFB No.*\"\n              />\n            )}\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"MLFB\", insertParams.product_id, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-6\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            multiline\n            label=\"Remarks\"\n            value={insertParams.remarks}\n            onChange={(event) => {\n              setInsertParams({ ...insertParams, remarks: event.target.value });\n            }}\n          />\n          <p className=\"text-danger\">\n            {validator.message(\"Remarks\", insertParams.remarks, \"required\")}\n          </p>\n        </div>\n        <div className=\"col-md-4 d-flex\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo2\"\n            options={mlfbProductList}\n            getOptionLabel={(options) => options.value}\n            fullWidth\n            value={selectedParams.selectedProduct}\n            onChange={(event, newValue) => {\n              setSelectedParams({\n                ...selectedParams,\n                selectedProduct: newValue,\n              });\n            }}\n            size=\"small\"\n            className=\"mr-3\"\n            renderInput={(params) => (\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                {...params}\n                label=\"MLFB Product\"\n              />\n            )}\n          />\n\n          <Button\n            color=\"primary\"\n            disabled={loading}\n            onClick={onProductChoose}\n            disableElevation\n            variant=\"contained\"\n          >\n            {loading ? (\n              <i class=\"fas fa-circle-notch fa-spin text-white\"></i>\n            ) : (\n              \"Add\"\n            )}\n          </Button>\n        </div>\n      </div>\n      <SimpleTable\n        columns={mlfbColumns}\n        rows={insertParams.mlfbItems}\n        onDelete={handleDelete}\n      />\n      <div className=\"w-100 text-right mt-4\">\n        <Button\n          variant=\"contained\"\n          className=\"mr-2\"\n          color=\"primary\"\n          disableElevation\n          onClick={insertCombo}\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => onClose()}\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n        >\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddComboMLFB;\n","import { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { selectedComboMLFBId } from \"../../../_redux/actions/masters/all.action\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst ComboMLFBBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"ComboMlfb/ComboMlfbBrowse\",\n      params,\n      user_id\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedComboMLFBId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"ComboMlfb/ComboMlfbDelete\", {\n      tran_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              flex: 0.1,\n            },\n            {\n              field: \"mlfb_no\",\n              headerName: \"MLFB No.\",\n              flex: 0.1,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Date\",\n              flex: 0.1,\n            },\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onEdit={() => handleEdit(params.row.tran_id)}\n                  onDelete={() => handleDeleteRow(params.row.tran_id)}\n                />\n              ),\n              flex: 0.1,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={{\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay,\n          }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ComboMLFBBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { clearSelectedComboId } from \"../../../_redux/actions/masters/all.action\";\nimport AddComboMLFB from \"./addCombo\";\n// import AddMaterialCode from \"./addMaterialCode\";\nimport ComboMLFBBrowse from \"./browse\";\n// import MaterialCodeBrowse from \"./browse\";\n\nconst ComboMLFBIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              dispatch(clearSelectedComboId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              dispatch(clearSelectedComboId());\n              handleIndex(1);\n            }}\n          >\n            New Combo MLFB\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <ComboMLFBBrowse onEdit={() => handleIndex(1)} />\n        ) : (\n          <AddComboMLFB onClose={() => handleIndex(0)} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ComboMLFBIndex;\n","import { TextField} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_group\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_group\",\r\n        { group_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_group\",\r\n        { group_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"group_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"group_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.group_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.group_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.group_id}\r\n          // getRowClassName={(params,i)=>console.log(param)}\r\n          getRowClassName={(params)=>params.row.group_id%2?\"odd\" :\"even\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        group_id:0,\r\n        group_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                group_name: groupValues.group_name,\r\n                group_id: groupValues.group_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_group\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"group_id\" disabled value={groupValues.group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"group_name\" value={groupValues.group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst GroupIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Group\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GroupIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CommonController,\r\n  currenyMasking,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst BrowsePincode = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_pincode\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      ).then((data) => {\r\n        if (data.status === 200) {\r\n          setBrowseListData(data.data);\r\n          setTotalRecords(data.totalRecords);\r\n        } else {\r\n          showErrorToast(\"Something went wrong\");\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const deleteData = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_pincode\",\r\n        { pin_code_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_pincode\",\r\n        { pin_code_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"pin_code_id\",\r\n              headerName: \"ID\",\r\n              width: 110,\r\n            },\r\n            {\r\n              field: \"pin_code_no\",\r\n              headerName: \"Pin Code No\",\r\n              width: 230,\r\n            },\r\n            {\r\n              field: \"city\",\r\n              headerName: \"City\",\r\n              width: 230,\r\n            },\r\n            {\r\n              field: \"state\",\r\n              headerName: \"State\",\r\n              width: 230,\r\n            },\r\n            {\r\n              field: \"district\",\r\n              headerName: \"District\",\r\n              width: 230,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.pin_code_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => deleteData(params.row.pin_code_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 100,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.pin_code_id}\r\n          getRowClassName={(params)=>params.row.pin_code_id%2?\"odd\" :\"even\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default BrowsePincode;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField,Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nconst AddOrEditPincode = (props) => {\r\n    const [formValues , setFormValues] = useState({\r\n        pin_code_id:0,\r\n        pin_code_no:\"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        district:\"\",\r\n        description:\"\",\r\n\r\n    });\r\n    const [showMessage , setMessage] = useState({\r\n        type:\"\",\r\n        msg:\"\"\r\n    })\r\n    const insertForm=async()=>{\r\n        try{\r\n          let body={\r\n            user_name: localStorage.getItem(\"userName\"),\r\n            user_id: localStorage.getItem(\"userId\"),\r\n            description:formValues.description,\r\n            pin_code_id:formValues.pin_code_id,\r\n            pin_code_no:formValues.pin_code_no,\r\n            city:formValues.city,\r\n            state:formValues.state,\r\n            district:formValues.district,\r\n          }\r\n    \r\n    await CommonController.commonApiCallFilter(\r\n        \"master/insert_pincode\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n    \r\n    ).then(result=>{\r\n        if(result.status==200){\r\n            showSuccessToast(result.message)\r\n            props.onClose(0);\r\n        }})\r\n        }catch(err){\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n   useEffect(() => {\r\n    if(props.editData){\r\n            setFormValues(props.editData)\r\n    }\r\n        },[props.editData]);\r\n         const onSave = () => {\r\n            insertForm()\r\n        }\r\n    const handleOnChange = (event) => {\r\n        setFormValues({...formValues,\r\n            [event.target.name]:event.target.value\r\n        });\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n\r\n        props.onClose(0);\r\n    }\r\n  \r\n//     useEffect(() => {\r\n//         console.log(updatePincodeInfoResponse)\r\n//         if(updatePincodeInfoResponse){\r\n//              setMessage({...showMessage,\r\n//                 type:updatePincodeInfoResponse.valid ? \"success\" : \"error\",\r\n//                 msg:updatePincodeInfoResponse.valid ? getPincodeInfo ? \"Pincode updated successfully\" : \"Pincode Saved successfully\" : \"Something went wrong\"\r\n//             });\r\n//             setTimeout(() => {\r\n//                 setMessage({\r\n//                     type:\"\",\r\n//                     msg:\"\"\r\n//                 });\r\n//                 props.onClose(0);\r\n//             }, 2000);\r\n//             dispatch(clearPincodeInfoResponse());\r\n//         }\r\n//     },[updatePincodeInfoResponse]);\r\n// // \r\n\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-4 mb-3\">\r\n                    <TextField label=\"Pincode ID\" type=\"number\"disabled name=\"pin_code_id\" value={formValues.pin_code_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4 mb-3\">\r\n                    <TextField label=\"Pincode\" type=\"number\" name=\"pin_code_no\" value={formValues.pin_code_no} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"City\" name=\"city\" value={formValues.city} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"State\" name=\"state\" value={formValues.state} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"District\" name=\"district\" value={formValues.district} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" name=\"description\" value={formValues.description} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\"/>\r\n                </div> */}\r\n                 \r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                   {formValues.type==\"preview\"?\"\": <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default AddOrEditPincode;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\nimport BrowsePincode from \"./browse\";\r\nimport AddOrEditPincode from \"./form\";\r\n\r\nconst PincodeIndex = () => {\r\n\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n   seteditdata(\"\")\r\n  };\r\n  const handelEdit=(edit)=>{\r\n    let editData={...edit}\r\n    editData.type=\"edit\";\r\n    setSeletedIndex(1)\r\n    seteditdata(editData)\r\n}\r\nconst handelPreview=(preview)=>{\r\n    let previewData={...preview}\r\n    previewData.type=\"preview\";\r\n    setSeletedIndex(1)\r\n    seteditdata(previewData)\r\n    console.log(previewData)\r\n}\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Pincode\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {selectedIndex === 0 ? (\r\n          <BrowsePincode onEdit={handelEdit} onPreviewData={handelPreview}  />\r\n        ) : (\r\n          <AddOrEditPincode onClose={(index) => handleIndex({}, index)} editData={editdata} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PincodeIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_region\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_region\",\r\n        { region_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_region\",\r\n        { region_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"region_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"region_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.region_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.region_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.region_id}\r\n          getRowClassName={(params)=>params.row.region_id%2?\"odd\" :\"even\"}\r\n          \r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        region_id:0,\r\n        region_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                region_name: groupValues.region_name,\r\n                region_id: groupValues.region_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_region\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.editData) {\r\n            setGroupValues(props.editData);\r\n          }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Region ID\" name=\"region_id\" disabled value={groupValues.region_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Region Name\" name=\"region_name\" value={groupValues.region_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type === \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst RegionIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Region\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegionIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_rating\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_rating\",\r\n        { rating_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_rating\",\r\n        { rating_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"rating_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"rating_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.rating_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.rating_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.rating_id}\r\n          getRowClassName={(params)=>params.row.rating_id%2?\"odd\" :\"even\"}\r\n\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    rating_id: 0,\r\n    rating_name: \"\",\r\n    description: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_name: localStorage.getItem(\"userName\"),\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        description: groupValues.description,\r\n        rating_name: groupValues.rating_name,\r\n        rating_id: groupValues.rating_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_rating\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Rating ID\"\r\n              name=\"rating_id\"\r\n              disabled\r\n              value={groupValues.rating_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Rating Name\"\r\n              name=\"rating_name\"\r\n              value={groupValues.rating_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"Description\"\r\n              value={groupValues.description}\r\n              onChange={handleOnChange}\r\n              name=\"description\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst RatingIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Rating\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RatingIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_department\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_department\",\r\n        { department_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_department\",\r\n        { department_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"department_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"department_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.department_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.department_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          getRowClassName={(params)=>params.row.department_id%2?\"odd\" :\"even\"}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.department_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        department_id:0,\r\n        department_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                department_name: groupValues.department_name,\r\n                department_id: groupValues.department_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_department\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Department ID\" name=\"department_id\" disabled value={groupValues.department_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Department Name\" name=\"department_name\" value={groupValues.department_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst DepartmentIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Department\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DepartmentIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_designation\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_designation\",\r\n        { designation_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_designation\",\r\n        { designation_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"designation_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"designation_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.designation_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.designation_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.designation_id}\r\n          getRowClassName={(params)=>params.row.designation_id%2?\"odd\" :\"even\"}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        designation_id:0,\r\n        designation_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                designation_name: groupValues.designation_name,\r\n                designation_id: groupValues.designation_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_designation\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Designation ID\" name=\"designation_id\"disabled value={groupValues.designation_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Designation Name\" name=\"designation_name\" value={groupValues.designation_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst DesignationIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Designation\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DesignationIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_siemens\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_siemens\",\r\n        { se_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_siemens\",\r\n        { se_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"se_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"roll_no\",\r\n              headerName: \"Roll No.\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"Engg_name\",\r\n              headerName: \"Engg Name\",\r\n              width: 450,\r\n            },\r\n           \r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.se_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.se_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.se_id}\r\n          getRowClassName={(params)=>params.row.se_id%2?\"odd\" :\"even\"}\r\n\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        se_id:0,\r\n        engg_name: \"\",\r\n        roll_no: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                roll_no: groupValues.roll_no,\r\n                engg_name: groupValues.engg_name,\r\n                se_id: groupValues.se_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_siemens\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Siemens ID\" name=\"se_id\" disabled value={groupValues.se_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Roll No\" name=\"roll_no\" value={groupValues.roll_no} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Engg Name\" value={groupValues.engg_name} onChange={handleOnChange} name=\"engg_name\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst SiemensIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Siemens\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SiemensIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_supply\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_supply\",\r\n        { item_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_supply\",\r\n        { item_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"item_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Item Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.item_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.item_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.item_id}\r\n          getRowClassName={(params)=>params.row.item_id%2?\"odd\" :\"even\"}\r\n\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        item_id:0,\r\n        item_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                item_name: groupValues.item_name,\r\n                item_id: groupValues.item_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_supply\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.editData) {\r\n            setGroupValues(props.editData);\r\n          }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Supply Item ID\" name=\"item_id\" disabled value={groupValues.item_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Supply Item Name\" name=\"item_name\" value={groupValues.item_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst SupplyItemIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Supply Item\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SupplyItemIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport GroupIndex from \"./group\";\r\nimport PincodeIndex from \"./pincode\";\r\nimport RegionIndex from \"./region\";\r\nimport RatingIndex from \"./rating\";\r\nimport DepartmentIndex from \"./department\";\r\nimport DesignationIndex from \"./designation\";\r\nimport SiemensIndex from \"./siemens\";\r\nimport SupplyItemIndex from \"./supply-item\";\r\n\r\n// const panel = [\r\n//   {\r\n//     name: \"Group\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Pin Code\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Region\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Rating\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Department\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Designation\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Siemens\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Supply Items\",\r\n//     component: \"\",\r\n//   },\r\n// ];\r\n\r\nconst ConfigAccountIndex = ({list}) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <GroupIndex />;\r\n        break;\r\n      case 1:\r\n        return <PincodeIndex />;\r\n        break;\r\n      case 2:\r\n        return <RegionIndex />;\r\n        break;\r\n      case 3:\r\n        return <RatingIndex />;\r\n        break;\r\n      case 4:\r\n        return <DepartmentIndex />;\r\n        break;\r\n      case 5:\r\n        return <DesignationIndex />;\r\n        break;\r\n      case 6:\r\n        return <SiemensIndex />;\r\n        break;\r\n      case 7:\r\n        return <SupplyItemIndex />;\r\n        break;\r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {list.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.display_name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigAccountIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_category\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_category\",\r\n        { p_category_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_category\",\r\n        { p_category_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"p_category_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"p_category_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.p_category_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.p_category_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.p_category_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    console.log(props.editData)\r\n    const [groupValues, setGroupValues] = useState({\r\n        p_category_id:0,\r\n        p_category_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                p_category_name: groupValues.p_category_name,\r\n                p_category_id: groupValues.p_category_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_category\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Category ID\" name=\"p_category_id\"disabled value={groupValues.p_category_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Category Name\" name=\"p_category_name\" value={groupValues.p_category_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst CategoryIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Category\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CategoryIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_pgroup\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_pgroup\",\r\n        { p_group_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_pgroup\",\r\n        { p_group_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"p_group_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"p_group_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.p_group_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.p_group_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.p_group_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        p_group_id:0,\r\n        p_group_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                p_group_name: groupValues.p_group_name,\r\n                p_group_id: groupValues.p_group_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_pgroup\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group ID\" name=\"p_group_id\"disabled value={groupValues.p_group_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Group Name\" name=\"p_group_name\" value={groupValues.p_group_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst GroupIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Group\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GroupIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_item\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_item\",\r\n        { item_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_item\",\r\n        { item_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"item_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.item_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.item_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.item_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        item_id:0,\r\n        item_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                item_name: groupValues.item_name,\r\n                item_id: groupValues.item_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_item\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Item ID\" name=\"item_id\" value={groupValues.item_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Item Name\" name=\"item_name\" value={groupValues.item_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst ItemIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Item\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ItemIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_unit\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_unit\",\r\n        { uom_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_unit\",\r\n        { uom_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"uom_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"uom\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.uom_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.uom_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.uom_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        uom_id:0,\r\n        uom: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                uom: groupValues.uom,\r\n                uom_id: groupValues.uom_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_unit\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" ID\" name=\"uom_id\" value={groupValues.uom_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" Name\" name=\"uom\" value={groupValues.uom} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst UnitIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Unit\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default UnitIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_gg\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_gg\",\r\n        { gg_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_gg\",\r\n        { gg_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"gg_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"gg_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.gg_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.gg_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.gg_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        gg_id:0,\r\n        gg_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                gg_name: groupValues.gg_name,\r\n                gg_id: groupValues.gg_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_gg\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" ID GG\" name=\"gg_id\" value={groupValues.gg_id} disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\" Name GG\" name=\"gg_name\" value={groupValues.gg_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst GGIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New GG\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default GGIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nimport CategoryIndex from \"./category\";\r\nimport GroupIndex from \"./group\";\r\nimport ItemIndex from \"./item\";\r\nimport UnitIndex from \"./unit\";\r\nimport GGIndex from \"./gg\";\r\nimport { buttonLoader } from \"../../../../components/common\";\r\n\r\n// const panel = [\r\n//   {\r\n//     name: \"Category\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Group\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Item\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Unit\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"GG\",\r\n//     component: \"\",\r\n//   },\r\n// ];\r\n\r\nconst ConfigProductIndex = ({list}) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <CategoryIndex />;\r\n        break;\r\n      case 1:\r\n        return <GroupIndex />;\r\n        break;\r\n      case 2:\r\n        return <ItemIndex />;\r\n        break;\r\n      case 3:\r\n        return <UnitIndex />;\r\n        break;\r\n      case 4:\r\n        return <GGIndex />;\r\n        break;\r\n\r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {list.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.display_name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      \r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigProductIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_enq_type\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_enq_type\",\r\n        { enq_type_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_enq_type\",\r\n        { enq_type_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"enq_type_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"enq_type\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            // {\r\n            //   field: \"description\",\r\n            //   headerName: \"Description\",\r\n            //   width: 450,\r\n            // },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.enq_type_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.enq_type_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.enq_type_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_type_id:0,\r\n        enq_type: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_type: groupValues.enq_type,\r\n                enq_type_id: groupValues.enq_type_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_type\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Type ID\" name=\"enq_type_id\"disabled value={groupValues.enq_type_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Type Name\" name=\"enq_type\" value={groupValues.enq_type} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst TypeIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Type\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TypeIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_enq_priority\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_enq_priority\",\r\n        { enq_priority_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_enq_priority\",\r\n        { enq_priority_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"enq_priority_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"enq_priority\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.enq_priority_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.enq_priority_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.enq_priority_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_priority_id:0,\r\n        enq_priority: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_priority: groupValues.enq_priority,\r\n                enq_priority_id: groupValues.enq_priority_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_priority\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Priority ID\" name=\"enq_priority_id\"disabled value={groupValues.enq_priority_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Priority Name\" name=\"enq_priority\" value={groupValues.enq_priority} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst PriorityIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Priority\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PriorityIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_enq_reference\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_enq_reference\",\r\n        { enq_ref_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_enq_reference\",\r\n        { enq_ref_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"enq_ref_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"enq_ref\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n           \r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.enq_ref_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.enq_ref_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.enq_ref_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        enq_ref_id:0,\r\n        enq_ref: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                enq_ref: groupValues.enq_ref,\r\n                enq_ref_id: groupValues.enq_ref_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_reference\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Reference ID\" name=\"enq_ref_id\" value={groupValues.enq_ref_id} disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Reference Name\" name=\"enq_ref\" value={groupValues.enq_ref} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst ReferenceIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Reference\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ReferenceIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_enq_status\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_enq_status\",\r\n        { status_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_enq_status\",\r\n        { status_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"status_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"status_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n          \r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.status_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.status_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.status_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        status_id:0,\r\n        status_name: \"\",\r\n        description: \"\"\r\n\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                status_name: groupValues.status_name,\r\n                status_id: groupValues.status_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_enq_status\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status ID\" name=\"status_id\" value={groupValues.status_id}disabled onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status Name\" name=\"status_name\" value={groupValues.status_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst EnqStatusIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Status\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default EnqStatusIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nimport TypeIndex from \"./type\";\r\nimport PriorityIndex from \"./priority\";\r\nimport ReferenceIndex from \"./reference\";\r\nimport EnqStatusIndex from \"./status\";\r\nconst panel = [\r\n  {\r\n    name: \"Type\",\r\n    component: \"\",\r\n  },\r\n  {\r\n    name: \"Priority\",\r\n    component: \"\",\r\n  },\r\n  {\r\n    name: \"Reference\",\r\n    component: \"\",\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    component: \"\",\r\n  },\r\n];\r\n\r\nconst ConfigEnquiryIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <TypeIndex />;\r\n        break;\r\n      case 1:\r\n        return <PriorityIndex />;\r\n        break;\r\n      case 2:\r\n        return <ReferenceIndex />;\r\n        break;\r\n      case 3:\r\n        return <EnqStatusIndex />;\r\n        break;\r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {panel.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigEnquiryIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_cos_ledger\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_cos_ledger\",\r\n        { ledger_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_cos_ledger\",\r\n        { ledger_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ledger_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"ledger_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.ledger_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.ledger_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.ledger_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        ledger_id:0,\r\n        ledger_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                ledger_name: groupValues.ledger_name,\r\n                ledger_id: groupValues.ledger_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_cos_ledger\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Leader ID\" name=\"ledger_id\"disabled value={groupValues.ledger_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Leader Name\" name=\"ledger_name\" value={groupValues.ledger_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst LedgerIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Ledger\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LedgerIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_cos_finance\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_cos_finance\",\r\n        { finance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_cos_finance\",\r\n        { finance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"finance_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"finance_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.finance_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.finance_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.finance_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        finance_id:0,\r\n        finance_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                finance_name: groupValues.finance_name,\r\n                finance_id: groupValues.finance_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_cos_finance\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n        }\r\n       \r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Finance ID\" name=\"finance_id\"disabled value={groupValues.finance_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Finance Name\" name=\"finance_name\" value={groupValues.finance_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst FinanceIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Finance\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FinanceIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_cos_tab\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_cos_tab\",\r\n        { mtab_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_cos_tab\",\r\n        { mtab_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"mtab_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"mtab_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n         \r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.mtab_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.mtab_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.mtab_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nimport { SimpleTable } from \"../../../../../components/basic-table\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    tab_id: \"\",\r\n    tab_name: \"\",\r\n    mtab_id:0,\r\n    tabArray: [],\r\n  });\r\n  const [groupTab, setgroupTab] = useState({\r\n    tab_name: \"\",\r\n    sequence: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const tabArrayDelet = (e) => {\r\n    const deleteArraytab={...groupValues}\r\n    deleteArraytab.tabArray.splice(deleteArraytab.tabArray.indexOf(e),1)\r\n    setGroupValues(deleteArraytab)\r\n  };\r\n  const listColumn = [\r\n    {\r\n      id: \"tab_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Tab Name\",\r\n    },\r\n    {\r\n      id: \"sequence\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Sequence\",\r\n    },\r\n  ];\r\n  const submitAddBox = () => {\r\n        let arrayList={...groupValues};\r\n    arrayList.tabArray.push(groupTab);\r\n    setGroupValues(arrayList);\r\n  };\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        mtab_id: groupValues.mtab_id,\r\n        mtab_name: groupValues.tab_name,\r\n        tab_id: groupValues.tab_id,\r\n        tabArray:groupValues.tabArray\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_cos_tab\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Tab ID\"\r\n              name=\"tab_id\"\r\n              value={groupValues.tab_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Tab Name*\"\r\n              name=\"tab_name\"\r\n              value={groupValues.group_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {groupValues.tabArray?.length > 0 ? (\r\n          <SimpleTable\r\n            columns={listColumn}\r\n            rows={groupValues.tabArray}\r\n            onDelete={tabArrayDelet}\r\n          />\r\n        ) : null}\r\n        <hr />\r\n        <div className=\"container-fluid\">\r\n          {/* <h1>Add Box:</h1> */}\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-md-3 mb-3\">\r\n              <TextField\r\n                label=\"Tab Name\"\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setgroupTab({ ...groupTab, tab_name: e.target.value });\r\n                }}\r\n                value={groupTab.tab_name}\r\n                variant=\"outlined\"\r\n                name=\"tab_name\"\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n              <TextField\r\n                label=\"Sequence\"\r\n                fullWidth\r\n                onChange={(e) => {\r\n                  setgroupTab({ ...groupTab, sequence: e.target.value });\r\n                }}\r\n                value={groupTab.sequence}\r\n                variant=\"outlined\"\r\n                name=\"sequence\"\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 mb-3 pl-5\">\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"mr-2\"\r\n                // disableElevation\r\n                variant=\"contained\"\r\n                onClick={submitAddBox}\r\n              >\r\n                Add New\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst CostingTabsIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Tabs\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CostingTabsIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\nimport LedgerIndex from \"./ledger\";\r\nimport FinanceIndex from \"./finance\";\r\nimport CostingTabsIndex from \"./tabs\";\r\n\r\nconst panel = [\r\n  {\r\n    name: \"Ledger\",\r\n    component: \"\",\r\n  },\r\n  {\r\n    name: \"Finance\",\r\n    component: \"\",\r\n  },\r\n  {\r\n    name: \"Tabs\",\r\n    component: \"\",\r\n  },\r\n];\r\n\r\nconst ConfigCostingIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <LedgerIndex />;\r\n        break;\r\n      case 1:\r\n        return <FinanceIndex />;\r\n        break;\r\n      case 2:\r\n        return <CostingTabsIndex />;\r\n        break;\r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {panel.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigCostingIndex;\r\n","import { TextField} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_clasue\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_clasue\",\r\n        { ld_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_clasue\",\r\n        { ld_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"ld_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"ld_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.ld_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.ld_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.ld_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        ld_id:0,\r\n        ld_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                ld_name: groupValues.ld_name,\r\n                ld_id: groupValues.ld_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_clasue\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Ld Clause ID\" name=\"ld_id\"disabled value={groupValues.ld_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Ld Clause Name\" name=\"ld_name\" value={groupValues.ld_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst IdClauseIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New LD Clause\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default IdClauseIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_freight\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_freight\",\r\n        { freight_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_freight\",\r\n        { freight_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"freight_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"freight_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.freight_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.freight_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.freight_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\n\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        freight_id:0,\r\n        freight_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                freight_name: groupValues.freight_name,\r\n                freight_id: groupValues.freight_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_freight\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Freight ID\" name=\"freight_id\"disabled value={groupValues.freight_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Freight Name\" name=\"freight_name\" value={groupValues.freight_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst FrightIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Freight\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FrightIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_insurance\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_insurance\",\r\n        { insurance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_insurance\",\r\n        { insurance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"insurance_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"insurance_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.insurance_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.insurance_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.insurance_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    insurance_id:0,\r\n    insurance_name: \"\",\r\n    description: \"\",\r\n  });\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {\r\n        user_name: localStorage.getItem(\"userName\"),\r\n        user_id: localStorage.getItem(\"userId\"),\r\n        description: groupValues.description,\r\n        insurance_name: groupValues.insurance_name,\r\n        insurance_id: groupValues.insurance_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_sale_insurance\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Insurance ID\"\r\n              disabled\r\n              name=\"insurance_id\"\r\n              value={groupValues.insurance_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Insurance Name\"\r\n              name=\"insurance_name\"\r\n              value={groupValues.insurance_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"Description\"\r\n              value={groupValues.description}\r\n              onChange={handleOnChange}\r\n              name=\"description\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst InsuranceIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Insurance\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InsuranceIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_octroi\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_octroi\",\r\n        { octroi_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_octroi\",\r\n        { octroi_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"octroi_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"octroi_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.octroi_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.octroi_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.octroi_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        octroi_id:0,\r\n        octroi_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                octroi_name: groupValues.octroi_name,\r\n                octroi_id: groupValues.octroi_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_octroi\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Octroi ID\" name=\"octroi_id\"disabled value={groupValues.octroi_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Octroi Name\" name=\"octroi_name\" value={groupValues.octroi_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst OctrolIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Octrol\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default OctrolIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_pf\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_pf\",\r\n        { pf_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_pf\",\r\n        { pf_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"pf_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"pf_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.pf_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.pf_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.pf_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        pf_id:0,\r\n        pf_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                pf_name: groupValues.pf_name,\r\n                pf_id: groupValues.pf_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_pf\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Pf ID\" name=\"pf_id\"disabled value={groupValues.pf_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Pf Name\" name=\"pf_name\" value={groupValues.pf_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst Pfindex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Pf\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Pfindex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_loading\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_loading\",\r\n        { loading_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_loading\",\r\n        { loading_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"loading_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"group_loading\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.loading_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.loading_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.loading_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        loading_id:0,\r\n        loading_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                loading_name: groupValues.loading_name,\r\n                loading_id: groupValues.loading_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_loading\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Loading ID\" name=\"loading_id\"disabled value={groupValues.loading_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Loading Name\" name=\"loading_name\" value={groupValues.loading_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst LoadingIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Loading\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_boarding\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_boarding\",\r\n        { boarding_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_boarding\",\r\n        { boarding_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"boarding_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"boarding_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.boarding_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.boarding_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.boarding_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        boarding_id:0,\r\n        boarding_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                boarding_name: groupValues.boarding_name,\r\n                boarding_id: groupValues.boarding_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_boarding\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Boarding ID\" name=\"boarding_id\"disabled value={groupValues.boarding_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Boarding Name\" name=\"boarding_name\" value={groupValues.boarding_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst BoardingIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Boarding\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BoardingIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_travel\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_travel\",\r\n        { travel_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_travel\",\r\n        { travel_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"travel_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"travel_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.travel_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.travel_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.travel_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        travel_id:0,\r\n        travel_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                travel_name: groupValues.travel_name,\r\n                travel_id: groupValues.travel_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_travel\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Travel ID\" name=\"travel_id\"disabled value={groupValues.travel_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Travel Name\" name=\"travel_name\" value={groupValues.travel_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst TravelChargeIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Travel\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TravelChargeIndex;\r\n","import { TextField} from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_conveyance\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_conveyance\",\r\n        { conveyance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_conveyance\",\r\n        { conveyance_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"conveyance_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"conveyance_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.conveyance_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.conveyance_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.conveyance_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        conveyance_id:0,\r\n        conveyance_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                conveyance_name: groupValues.conveyance_name,\r\n                conveyance_id: groupValues.conveyance_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_conveyance\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Conveyance ID\" name=\"conveyance_id\"disabled value={groupValues.conveyance_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Conveyance Name\" name=\"conveyance_name\" value={groupValues.conveyance_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst ConveyanceIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Conceyance\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ConveyanceIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_payment\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_payment\",\r\n        { payment_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_payment\",\r\n        { payment_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"payment_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"payment_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.payment_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.payment_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.payment_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        payment_id:0,\r\n        payment_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                payment_name: groupValues.payment_name,\r\n                payment_id: groupValues.payment_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_payment\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Payment ID\"disabled name=\"payment_id\" value={groupValues.payment_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Payment Name\" name=\"payment_name\" value={groupValues.payment_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst PaymentTermsIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Payment\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default PaymentTermsIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_delivery\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_delivery\",\r\n        { delivery_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_delivery\",\r\n        { delivery_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"delivery_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"delivery_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.delivery_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.delivery_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.delivery_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        delivery_id:0,\r\n        delivery_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                delivery_name: groupValues.delivery_name,\r\n                delivery_id: groupValues.delivery_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_delivery\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Delivery ID\" name=\"delivery_id\"disabled value={groupValues.delivery_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Delivery Name\" name=\"delivery_name\" value={groupValues.delivery_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst DeliveryIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Delivery\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DeliveryIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_validity\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_validity\",\r\n        { validity_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_validity\",\r\n        { validity_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"validity_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"validity_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.validity_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.validity_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.validity_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        validity_id:0,\r\n        validity_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                validity_name: groupValues.validity_name,\r\n                validity_id: groupValues.validity_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_validity\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Validity ID\" name=\"validity_id\"disabled value={groupValues.validity_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Validity Name\" name=\"validity_name\" value={groupValues.validity_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst ValidityIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Validity\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ValidityIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_mode\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_mode\",\r\n        { mode_of_dispatch_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_mode\",\r\n        { mode_of_dispatch_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"mode_of_dispatch_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"mode_of_dispatch_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.mode_of_dispatch_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.mode_of_dispatch_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.mode_of_dispatch_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        mode_of_dispatch_id:0,\r\n        mode_of_dispatch_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                mode_of_dispatch_name: groupValues.mode_of_dispatch_name,\r\n                mode_of_dispatch_id: groupValues.mode_of_dispatch_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_mode\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Mode Of Dispatch ID\" name=\"mode_of_dispatch_id\"disabled value={groupValues.mode_of_dispatch_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Mode Of Dispatch Name\" name=\"mode_of_dispatch_name\" value={groupValues.mode_of_dispatch_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst ModeOfDispatchIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Mode Of Dispatch\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ModeOfDispatchIndex;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_sale_inspection\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_sale_inspection\",\r\n        { inspection_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_sale_inspection\",\r\n        { inspection_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"inspection_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"inspection_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.inspection_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.inspection_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.inspection_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        inspection_id: 0,\r\n        inspection_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                inspection_name: groupValues.inspection_name,\r\n                inspection_id: groupValues.inspection_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_sale_inspection\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n            setGroupValues(props.editData)\r\n            }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Inspection ID\" name=\"inspection_id\"disabled value={groupValues.inspection_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Inspection Name\" name=\"inspection_name\" value={groupValues.inspection_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst InspectionIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Inspection\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InspectionIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IdClauseIndex from \"./ldClause\";\r\nimport FrightIndex from \"./fright\";\r\nimport InsuranceIndex from \"./insurance\";\r\nimport OctrolIndex from \"./octrol\";\r\nimport Pfindex from \"./p&f\";\r\nimport LoadingIndex from \"./loading\";\r\nimport BoardingIndex from \"./boarding\";\r\nimport TravelChargeIndex from \"./travelCharge\";\r\nimport ConveyanceIndex from \"./conveyance\";\r\nimport PaymentTermsIndex from \"./paymentTerms\";\r\nimport DeliveryIndex from \"./delivery\";\r\nimport ValidityIndex from \"./validity\";\r\nimport ModeOfDispatchIndex from \"./modeOfDispatch\";\r\nimport InspectionIndex from \"./inspection\";\r\n\r\n\r\n// const panel = [\r\n//   {\r\n//     name: \"Group\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Pin Code\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Region\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Rating\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Department\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Designation\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Siemens\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Supply Items\",\r\n//     component: \"\",\r\n//   },\r\n// ];\r\n\r\nconst ConfigSalesOrder = ({list}) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <IdClauseIndex/>;\r\n        break;\r\n      case 1:\r\n        return < FrightIndex/>;\r\n        break;\r\n      case 2:\r\n        return <InsuranceIndex />;\r\n        break;\r\n      case 3:\r\n        return <OctrolIndex />;\r\n        break;\r\n      case 4:\r\n        return <Pfindex />;\r\n        break;\r\n      case 5:\r\n        return <LoadingIndex />;\r\n        break;\r\n      case 6:\r\n        return <BoardingIndex/>;\r\n        break;\r\n      case 7:\r\n        return <TravelChargeIndex />;\r\n        break;\r\n        case 8:\r\n          return <ConveyanceIndex />;\r\n          break;\r\n          case 9:\r\n            return <PaymentTermsIndex />;\r\n            break;\r\n            case 10:\r\n              return <DeliveryIndex />;\r\n              break;\r\n              case 11:\r\n                return <ValidityIndex />;\r\n                break;\r\n                case 12:\r\n                  return <ModeOfDispatchIndex />;\r\n                  break;\r\n                  case 13:\r\n                    return <InspectionIndex />;\r\n                    break;\r\n                   \r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {list.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.display_name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigSalesOrder;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_quot\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_quot\",\r\n        { status_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_quot\",\r\n        { status_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"status_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"status_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 450,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.status_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.status_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.status_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        status_id:0,\r\n        status_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                status_name: groupValues.status_name,\r\n                status_id: groupValues.status_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_quot\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status ID\" name=\"status_id\"disabled value={groupValues.status_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Status Name\" name=\"status_name\" value={groupValues.status_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst QuotationIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Status\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default QuotationIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport QuotationIndex from \"./subIndex\";\r\n// const panel = [\r\n//   {\r\n//     name: \"Group\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Pin Code\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Region\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Rating\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Department\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Designation\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Siemens\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Supply Items\",\r\n//     component: \"\",\r\n//   },\r\n// ];\r\n\r\nconst ConfigQuotation = ({list}) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <QuotationIndex />;\r\n        // break;\r\n      // case 1:\r\n      //   return <PincodeIndex />;\r\n      //   break;\r\n      \r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {list.map((tab, index) => {\r\n            return <Tab value={index} key={\"tab\" + index} label={tab.display_name} />;\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigQuotation;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_courier\",\r\n        params,\r\n        \"\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_courier\",\r\n        { courier_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_courier\",\r\n        { courier_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"courier_id\",\r\n              headerName: \"ID\",\r\n              flex: 10,\r\n            },\r\n            {\r\n              field: \"courier_name\",\r\n              headerName: \"Name\",\r\n              width: 450,\r\n            },\r\n            // {\r\n            //   field: \"description\",\r\n            //   headerName: \"Description\",\r\n            //   width: 450,\r\n            // },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.courier_id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"far fa-trash-alt mr-2\"\r\n                    onClick={() => onDelete(params.row.courier_id)}\r\n                  ></i>\r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[10, 15, 25, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={\r\n            browseListData.length > 0\r\n              ? {\r\n                  Pagination: CustomPagination,\r\n                  NoRowsOverlay: CustomNoRowsOverlay,\r\n                }\r\n              : {}\r\n          }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.courier_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CommonController } from '../../../../_redux/controller/common.controller';\r\nimport { showErrorToast, showSuccessToast } from '../../../../components/common';\r\nconst AddOrEditGroup = (props) => {\r\n    const [groupValues, setGroupValues] = useState({\r\n        courier_id:0,\r\n        courier_name: \"\",\r\n        description: \"\"\r\n    });\r\n    const [showMessage, setMessage] = useState({\r\n        type: \"\",\r\n        msg: \"\"\r\n    })\r\n    const insertForm = async () => {\r\n        try {\r\n            let body = {\r\n                // user_name: localStorage.getItem(\"userName\"),\r\n                user_id: localStorage.getItem(\"userId\"),\r\n                description: groupValues.description,\r\n                courier_name: groupValues.courier_name,\r\n                courier_id: groupValues.courier_id\r\n            }\r\n            await CommonController.commonApiCallFilter(\r\n                \"master/insert_courier\",\r\n                body,\r\n                \"post\",\r\n                \"node\"\r\n            ).then(result => {\r\n                if (result.status == 200) {\r\n                    showSuccessToast(result.message)\r\n                    props.onClose(0);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            showErrorToast(err)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(props.editData){\r\n        setGroupValues(props.editData)\r\n        }\r\n    }, [props.editData]);\r\n    const onSave = () => {\r\n        insertForm()\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setGroupValues({\r\n            ...groupValues,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    const onCancelClick = () => {\r\n        props.onClose(0);\r\n    }\r\n    return <React.Fragment>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Courier ID\" name=\"courier_id\"disabled value={groupValues.courier_id} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <TextField label=\"Courier Name\" name=\"courier_name\" value={groupValues.courier_name} onChange={handleOnChange} fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div>\r\n                {/* <div className=\"col-md-4\">\r\n                    <TextField multiline label=\"Description\" value={groupValues.description} onChange={handleOnChange} name=\"description\" fullWidth variant=\"outlined\" size=\"small\" />\r\n                </div> */}\r\n                <div className=\"col-md-12 mt-3 text-right\">\r\n                    <Button variant=\"contained\" className=\"mr-2\" onClick={onCancelClick} disableElevation>Cancel</Button>\r\n                    {groupValues.type == \"preview\" ? \"\" : <Button variant=\"contained\" onClick={onSave} color=\"primary\" disableElevation>Save</Button>}\r\n                </div>\r\n                {showMessage.type != \"\" ? <Alert severity={showMessage.type}>{showMessage.msg}</Alert> : null}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\nexport default AddOrEditGroup;","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst CourierIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n        <Tab value={1} label=\"New Courier\" />\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CourierIndex;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CourierIndex from \"./subIndex\";\r\n// const panel = [\r\n//   {\r\n//     name: \"Group\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Pin Code\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Region\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Rating\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Department\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Designation\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Siemens\",\r\n//     component: \"\",\r\n//   },\r\n//   {\r\n//     name: \"Supply Items\",\r\n//     component: \"\",\r\n//   },\r\n// ];\r\n\r\nconst ConfigCourier = ({ list }) => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n\r\n  const getSelectedComponent = () => {\r\n    switch (selectedIndex) {\r\n      case 0:\r\n        return <CourierIndex />;\r\n      default:\r\n        alert(\"Something went wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <AppBar className=\"rounded light-tab\" position=\"relative\" elevation={0}>\r\n        <Tabs\r\n          className=\"w-100\"\r\n          value={selectedIndex}\r\n          onChange={handleIndex}\r\n          indicatorColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {list.map((tab, index) => {\r\n            return (\r\n              <Tab value={index} key={\"tab\" + index} label={tab.display_name} />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </AppBar>\r\n      <div className=\"customtab-container w-100\">{getSelectedComponent()}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ConfigCourier;\r\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   CommonController,\r\n// } from \"../../../../\";\r\nimport {\r\n  CommonController,\r\n} from \"../../../../_redux/controller/common.controller\";\r\nimport CustomPagination from \"../../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\r\nimport {\r\n  debounce,\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\nconst ConfigGroupBrowse = ({ type, onEdit, onPreviewData }) => {\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n  const handleParams = (event) => {\r\n    debounce(\r\n      setParams({ ...params, [event.target.name]: event.target.value }),\r\n      1000\r\n    );\r\n  };\r\n  const getBrowseListData = async () => {\r\n    const id=localStorage.getItem(\"userId\")\r\n    setLoading(true);\r\n    try {\r\n      await CommonController.commonApiCall(\r\n        \"master/browse_menu\",\r\n        params,\r\n        {user_id:id},\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setBrowseListData(data.data);\r\n            setTotalRecords(data.totalRecords);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    if (param !== 0) {\r\n      setParams({ ...params, pageNo: param });\r\n    }\r\n  };\r\n  const onDelete = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/delete_category\",\r\n        { p_category_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            getBrowseListData();\r\n            showSuccessToast(\"Success Delete\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const onPreview = async (id) => {\r\n    try {\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/preview_category\",\r\n        { p_category_id: id },\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            onPreviewData(...result.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params]);\r\n  return (\r\n    <>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          {/* <DateFilter onDateUpdate={() => getBrowseListData()} /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 400, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"transaction_id\",\r\n              headerName: \"ID\",\r\n              width: 100,\r\n            },\r\n            {\r\n              field: \"display_name\",\r\n              headerName: \"Display Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"transaction_name\",\r\n              headerName: \"Transaction Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"parent_transaction\",\r\n              headerName: \"Parent Name\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"level\",\r\n              headerName: \"Level\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"main_form\",\r\n              headerName: \"Main Form\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"sequence\",\r\n              headerName: \"Sequence\",\r\n              width: 150,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <div className=\"action_btns\">\r\n                  {/* <i\r\n                    className=\"fas fa-search mr-2\"\r\n                    onClick={() => onPreview(params.row.p_category_id)}\r\n                  ></i> */}\r\n                  <i\r\n                    className=\"far fa-edit mr-2\"\r\n                    onClick={() => onEdit(params.row)}\r\n                  ></i>\r\n                 \r\n                </div>\r\n              ),\r\n              width: 150,\r\n            },\r\n          ]}\r\n          // pagination\r\n          \r\n          disableColumnFilter\r\n          // pageSize={params.pageSize}\r\n          // page={params.pageNo}\r\n          // rowsPerPageOptions={[10, 15, 25, 100]}\r\n          getRowClassName={(params) => {\r\n            return params.row.sr_no % 2 === 0 ? \"even\" : \"odd\";\r\n          }}\r\n          // rowCount={totalRecord}\r\n          // paginationMode=\"server\"\r\n          // onPageSizeChange={handlePageSizeChange}\r\n          // onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          // components={\r\n          //   browseListData.length > 0\r\n          //     ? {\r\n          //         Pagination: CustomPagination,\r\n          //         NoRowsOverlay: CustomNoRowsOverlay,\r\n          //       }\r\n          //     : {}\r\n          // }\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n          getRowId={(browseListData) => browseListData.transaction_id}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ConfigGroupBrowse;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Button, MenuItem, Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n} from \"../../../../components/common\";\r\n\r\n\r\nconst AddOrEditGroup = (props) => {\r\n  const [groupValues, setGroupValues] = useState({\r\n    transaction_id: 0,\r\n    transaction_name: \"\",\r\n    display_name: \"\",\r\n    sequence: null,\r\n    parent_id:null,\r\n    main_form:null,\r\n    level:null\r\n  });\r\n  const [listtransection, setlisttransection] = useState([])\r\n  const [showMessage, setMessage] = useState({\r\n    type: \"\",\r\n    msg: \"\",\r\n  });\r\n  const insertForm = async () => {\r\n    try {\r\n      let body = {...groupValues}\r\n        body.user_id= localStorage.getItem(\"userId\")\r\n  \r\n      await CommonController.commonApiCallFilter(\r\n        \"master/insert_menu\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n          showSuccessToast(result.message);\r\n          props.onClose(0);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const listTransection = async () => {\r\n    try {\r\n\r\n      let body = {\r\n        transaction_id: groupValues.transaction_id,\r\n      };\r\n      await CommonController.commonApiCallFilter(\r\n        \"master/list_transection\",\r\n        body,\r\n        \"post\",\r\n        \"node\"\r\n      ).then((result) => {\r\n        if (result.status == 200) {\r\n            setlisttransection(result.data)\r\n        }\r\n      });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (props.editData) {\r\n      setGroupValues(props.editData);\r\n      listTransection()\r\n    }\r\n  }, [props.editData]);\r\n  const onSave = () => {\r\n    insertForm();\r\n  };\r\n  const handleOnChange = (event) => {\r\n    console.log(event.target.value)\r\n    console.log(event.target.name)\r\n    setGroupValues({\r\n      ...groupValues,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onCancelClick = () => {\r\n    props.onClose(0);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Transaction ID\"\r\n              name=\"transaction_id\"\r\n              disabled\r\n              value={groupValues.transaction_id}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              label=\"Display Name\"\r\n              name=\"display_name\"\r\n              value={groupValues.display_name}\r\n              onChange={handleOnChange}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <TextField\r\n              multiline\r\n              label=\"sequence\"\r\n              value={groupValues.sequence}\r\n              onChange={handleOnChange}\r\n              name=\"sequence\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n            <TextField\r\n              multiline\r\n              label=\"Level\"\r\n              value={groupValues.level}\r\n              onChange={handleOnChange}\r\n              name=\"level\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"number\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n            <TextField\r\n            //  id=\"outlined-select-currency\"\r\n             select\r\n             label=\"Parent Id\"\r\n             onChange={handleOnChange}\r\n              name=\"parent_id\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              SelectProps={{\r\n                native: true,\r\n              }}\r\n            >\r\n              <option value={groupValues.parent_id}>{groupValues.parent_transaction}</option>\r\n                {listtransection.map(val=>(\r\n                    <option key={val.transaction_id} value={val.transaction_id}>{val.transaction_name}</option>\r\n                ))}\r\n            </TextField>\r\n          </div>\r\n          <div className=\"col-md-4 py-5\">\r\n          {/* <FormControlLabel control={<Checkbox color=\"primary\" checked={groupValues.main_form ===true}/>} label=\"Main Form\" /> */}\r\n          <FormControlLabel control={<Checkbox color=\"primary\"checked={groupValues.main_form ===true} onChange={(e)=>setGroupValues({...groupValues,main_form:e.target.checked})}/>} label=\"Main Form\" />\r\n          </div>\r\n          <div className=\"col-md-12 mt-3 text-right\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-2\"\r\n              onClick={onCancelClick}\r\n              disableElevation\r\n            >\r\n              Cancel\r\n            </Button>\r\n            {groupValues.type == \"preview\" ? (\r\n              \"\"\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={onSave}\r\n                color=\"primary\"\r\n                disableElevation\r\n              >\r\n                Save\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {showMessage.type != \"\" ? (\r\n            <Alert severity={showMessage.type}>{showMessage.msg}</Alert>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AddOrEditGroup;\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ConfigGroupBrowse from \"./browse\";\r\nimport AddOrEditGroup from \"./form\";\r\nconst MenuStructureIndex = () => {\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [editdata, seteditdata] = useState(\"\");\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n    seteditdata(\"\");\r\n  };\r\n  const handelEdit = (edit) => {\r\n    let editData = { ...edit };\r\n    editData.type = \"edit\";\r\n    setSeletedIndex(1);\r\n    seteditdata(editData);\r\n  };\r\n  const handelPreview = (preview) => {\r\n    let previewData = { ...preview };\r\n    previewData.type = \"preview\";\r\n    setSeletedIndex(1);\r\n    seteditdata(previewData);\r\n  };\r\n  return (\r\n    <div className=\"px-3\">\r\n      <Tabs\r\n        className=\"w-100\"\r\n        value={selectedIndex}\r\n        onChange={handleIndex}\r\n        indicatorColor=\"primary\"\r\n        aria-label=\"scrollable auto tabs example\"\r\n      >\r\n        <Tab value={0} label=\"Browse\" />\r\n       {selectedIndex===1&& <Tab value={1} label=\"Update Menu Structure\" />}\r\n      </Tabs>\r\n      <div className=\"customtab-container w-100 py-3\">\r\n        {/* {selectedIndex === 0 ? <ConfigGroupBrowse onActionClick={(index) => handleIndex({} , index)}/>:<AddOrEditGroup onClose={(index) => handleIndex({} , index)} />} */}\r\n        {selectedIndex === 0 ? (\r\n          <ConfigGroupBrowse\r\n            onEdit={handelEdit}\r\n            onPreviewData={handelPreview}\r\n          />\r\n        ) : (\r\n          <AddOrEditGroup\r\n            onClose={(index) => handleIndex({}, index)}\r\n            editData={editdata}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MenuStructureIndex;\r\n","import { useEffect } from \"react\";\r\nimport { Tab, Tabs } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ConfigAccountIndex from \"./Account\";\r\nimport ConfigProductIndex from \"./product\";\r\nimport ConfigEnquiryIndex from \"./enquiry\";\r\nimport ConfigCostingIndex from \"./costing\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nimport { buttonLoader, showErrorToast } from \"../../../components/common\";\r\nimport ConfigSalesOrder from \"./salesOrder\";\r\nimport ConfigQuotation from \"./quotation\";\r\nimport ConfigCourier from \"./courier\";\r\nimport MenuStructureIndex from \"./menustructure\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst ConfigurationMaster = () => {\r\n  const classes = useStyles();\r\n  const [transectionId, settransectionId] = useState(101)\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n  const [MenuList, setMenuList] = useState([]);\r\n  const [SubMenuList, setSubMenuList] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const [loadingsubMenu, setloadingsubMenu] = useState(true);\r\n  const panel = {\r\n    101: <ConfigAccountIndex list={SubMenuList} />,\r\n    102: <ConfigProductIndex list={SubMenuList} />,\r\n    103: <ConfigEnquiryIndex list={SubMenuList} />,\r\n    104: <ConfigCostingIndex list={SubMenuList} />,\r\n    105: <ConfigQuotation list={SubMenuList} />,\r\n    106: <ConfigSalesOrder list={SubMenuList} />,\r\n    107: <ConfigCourier list={SubMenuList} />,\r\n    144:<MenuStructureIndex/>\r\n  };\r\n  const getThirdMenu = async (menu_id) => {\r\n    try {\r\n      let user_id = { user_id: localStorage.getItem(\"userId\") };\r\n      await CommonController.commonApiCallFilter(\r\n        \"menu/menu_list_level3?menu_id=\" + menu_id,\r\n        user_id,\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setMenuList(data.data);\r\n            setloading(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err.message);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  const getfourthMenu = async (menu_id) => {\r\n    try {\r\n      let user_id = { user_id: localStorage.getItem(\"userId\") };\r\n      await CommonController.commonApiCallFilter(\r\n        \"menu/menu_list_level4?menu_id=\" + menu_id,\r\n        user_id,\r\n        \"post\",\r\n        \"node\"\r\n      )\r\n        .then((data) => {\r\n          if (data.status === 200) {\r\n            setSubMenuList(data.data);\r\n            setloadingsubMenu(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          showErrorToast(err.message);\r\n        });\r\n    } catch (err) {\r\n      showErrorToast(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getThirdMenu(12);\r\n    getfourthMenu(101);\r\n  }, []);\r\n  const handleTransectionID = (tab) => {\r\n    setloadingsubMenu(true);\r\n    getfourthMenu(tab.transaction_id);\r\n    settransectionId(tab.transaction_id)\r\n  };\r\n  const handleIndex = (event, newValue) => {\r\n    setSeletedIndex(newValue);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <div className={\"customtab-panel\"}>\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            variant=\"scrollable\"\r\n            value={selectedIndex}\r\n            onChange={handleIndex}\r\n            indicatorColor=\"primary\"\r\n            className={classes.tabs}\r\n            aria-label=\"Vertical tabs example\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"text-center\">\r\n                {buttonLoader(false, \"Loading...\", \"\")}\r\n              </div>\r\n            ) : null}\r\n            {MenuList.map((tab, index) => {\r\n              return (\r\n                <Tab\r\n                  onClick={()=>handleTransectionID(tab)}\r\n                  className={\"tab\"}\r\n                  value={index}\r\n                  key={\"tab\" + index}\r\n                  label={tab.display_name}\r\n                />\r\n              );\r\n            })}\r\n          </Tabs>\r\n          <div className=\"customtab-container\">\r\n            {loadingsubMenu ? (\r\n              <div className=\"text-center\">\r\n                {buttonLoader(false, \"Loading...\", \"\")}\r\n              </div>\r\n            ) : (\r\n              panel[transectionId]\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ConfigurationMaster;\r\n","import { Checkbox, MenuItem, TextField} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nconst GeneralInfoEmp = ({\n  formData,\n  handleChange,\n  handleDateChange,\n  handleAutoChange,\n  getAutoValue,\n  listValues,\n  onCheckChange,\n}) => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            disabled\n            value={formData.user_id}\n            size=\"small\"\n            name=\"user_id\"\n            label=\"Employee ID\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            onChange={handleChange}\n            name={\"attendance_emp_code\"}\n            value={formData.attendance_emp_code}\n            label=\"Attendance Code\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name={\"user_code\"}\n            size=\"small\"\n            onChange={handleChange}\n            value={formData.user_code}\n            label=\"Employee Code\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name={\"card_no\"}\n            onChange={handleChange}\n            value={formData.card_no}\n            size=\"small\"\n            label=\"Card No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleChange}\n            name={\"first_name\"}\n            size=\"small\"\n            value={formData.first_name}\n            label=\"First Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleChange}\n            name={\"last_name\"}\n            value={formData.last_name}\n            size=\"small\"\n            label=\"Last Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            value={formData.f_h_name}\n            name={\"f_h_name\"}\n            size=\"small\"\n            onChange={handleChange}\n            label=\"Father/Husband Name\"\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name=\"mother_name\"\n            value={formData.mother_name}\n            onChange={handleChange}\n            size=\"small\"\n            label=\"Mother name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            id=\"outlined-select-currency1\"\n            select\n            name=\"m_status\"\n            label=\"Martial Status\"\n            onChange={handleChange}\n            value={formData.m_status}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n          >\n            <MenuItem value={\"Maried\"}>Married</MenuItem>\n            <MenuItem value={\"Unmaried\"}>Unmarried</MenuItem>\n          </TextField>\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Gender\"\n            variant=\"outlined\"\n            name=\"gender\"\n            size=\"small\"\n            value={formData.gender}\n            onChange={handleChange}\n            fullWidth\n          >\n            <MenuItem value={\"Male\"}>Male</MenuItem>\n            <MenuItem value={\"Female\"}>Female</MenuItem>\n          </TextField>\n        </div>\n        {console.log(moment(formData.dob).format())}\n        {console.log(formData.dob)}\n        <div className=\"col-md-4 mb-3\">\n          <DatePicker\n            autoOk\n            variant=\"inline\"\n            format=\"MM/dd/yyyy\"\n            inputVariant=\"outlined\"\n            label=\"Date of Birth (mm/dd/yyyy)\"\n            value={formData.dob === \"\" ? null : moment(formData.dob).format()}\n            name=\"dob\"\n            onChange={(date) => handleDateChange(\"dob\", date)}\n            size=\"small\"\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            size=\"small\"\n            name=\"pt_add1\"\n            value={formData.pt_add1}\n            onChange={handleChange}\n            label=\"Present Address\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name=\"pt_mobile\"\n            value={formData.pt_mobile}\n            onChange={handleChange}\n            size=\"small\"\n            label=\"Mobile No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name=\"pt_phone\"\n            value={formData.pt_phone}\n            onChange={handleChange}\n            size=\"small\"\n            label=\"Phone No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            multiline\n            disabled={formData.pr_check}\n            name=\"pr_add1\"\n            value={formData.pr_add1}\n            onChange={handleChange}\n            size=\"small\"\n            label=\"Permanent Address\"\n          />\n          <p>\n            Same as present address{\" \"}\n            <Checkbox\n              color=\"primary\"\n              checked={formData.pr_check}\n              onChange={(e) => onCheckChange(e)}\n            />{\" \"}\n          </p>\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"pr_phone\"\n            value={formData.pr_phone}\n            onChange={handleChange}\n            label=\"Phone No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"pr_mobile\"\n            value={formData.pr_mobile}\n            onChange={handleChange}\n            label=\"Mobile No.\"\n          />\n        </div>\n\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"short_name\"\n            value={formData.short_name}\n            onChange={handleChange}\n            label=\"Short Name\"\n          />\n        </div>\n\n        <div className=\"col-md-4 mb-3\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo1\"\n            options={listValues.empList}\n            getOptionLabel={(option) => option.value}\n            fullWidth\n            onChange={(event, value) =>\n              handleAutoChange(\"department_name\", value)\n            }\n            value={getAutoValue(\n              \"value\",\n              listValues.empList,\n              formData.department_name\n            )}\n            size=\"small\"\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"Department\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo2\"\n            options={listValues.desgnList}\n            getOptionLabel={(option) => option.value}\n            onChange={(event, value) =>\n              handleAutoChange(\"designation_name\", value)\n            }\n            value={getAutoValue(\n              \"value\",\n              listValues.desgnList,\n              formData.designation_name\n            )}\n            fullWidth\n            size=\"small\"\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"Designation\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <DatePicker\n            autoOk\n            format=\"dd/MM/yyyy\"\n            variant=\"inline\"\n            inputVariant=\"outlined\"\n            label=\"Joining Date\"\n            value={formData.joining_date === \"\" ? null : formData.joining_date}\n            onChange={(date) => handleDateChange(\"joining_date\", date)}\n            size=\"small\"\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <DatePicker\n            autoOk\n            format=\"dd/MM/yyyy\"\n            variant=\"inline\"\n            inputVariant=\"outlined\"\n            label=\"Leaving Date\"\n            value={formData.leaving_date === \"\" ? null : formData.leaving_date}\n            onChange={(date) => handleDateChange(\"leaving_date\", date)}\n            size=\"small\"\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"leaving_reason\"\n            onChange={handleChange}\n            value={formData.leaving_reason}\n            label=\"Leaving Reason\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"dispensary\"\n            onChange={handleChange}\n            value={formData.dispensary}\n            label=\"Dispensary\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            multiline\n            fullWidth\n            size=\"small\"\n            name=\"remarks\"\n            onChange={handleChange}\n            value={formData.remarks}\n            label=\"Remark\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo2\"\n            options={listValues.depInchrList}\n            fullWidth\n            getOptionLabel={(option) => option.value}\n            size=\"small\"\n            onChange={(event, value) =>\n              handleAutoChange(\"department_incharge\", value)\n            }\n            value={getAutoValue(\n              \"value\",\n              listValues.depInchrList,\n              formData.department_incharge\n            )}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"outlined\"\n                label=\"Department Incharge\"\n              />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            multiline\n            fullWidth\n            size=\"small\"\n            name=\"user_name\"\n            onChange={handleChange}\n            value={formData.user_name}\n            label=\"User Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            value={formData.password}\n            label=\"Password\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralInfoEmp;\n","import {TextField } from \"@material-ui/core\";\nimport React from \"react\";\nconst OtherDetails = ({ formData, handleChange }) => {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.first_name}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"first_name\"\n            label=\"First Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.last_name}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"last_name\"\n            label=\"Last Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.email}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"email\"\n            label=\"Email\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.pf_code}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"pf_code\"\n            label=\"P.F.Code\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.esi_code}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"esi_code\"\n            label=\"ESI Code\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.pan_no}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"pan_no\"\n            label=\"PAN No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.salary_p_mode}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"salary_p_mode\"\n            label=\"Salary Payment Mode\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.ctc_per_day}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"ctc_per_day\"\n            label=\"CTC Per Day\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.account_no}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"account_no\"\n            label=\"Account No.\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.bank_name}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"bank_name\"\n            label=\"Bank Name\"\n          />\n        </div>\n        <div className=\"col-md-4 mb-3\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            value={formData.nominee}\n            onChange={handleChange}\n            size=\"small\"\n            name=\"nominee\"\n            label=\"Nominee\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport GeneralInfoEmp from \"./general\";\nimport OtherDetails from \"./other\";\nimport { useSelector } from \"react-redux\";\nconst AddEmployee = ({ onClose }) => {\n  const selectedIdResponse = useSelector(\n    (state) => state.AllReducersMaster.employeeId\n  );\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [listValues, setListValues] = useState({\n    empList: [],\n    desgnList: [],\n    depInchrList: [],\n  });\n\n  const [formData, setFormData] = useState({\n    pr_check: false,\n    user_id: 0,\n    user_code: \"\",\n    attendance_emp_code: \"\",\n    ctc_per_day: \"\",\n    card_no: \"\",\n    short_name: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    f_h_name: \"\",\n    mother_name: \"\",\n    m_status: \"\",\n    gender: \"\",\n    dob: null,\n    pr_add1: \"\",\n    pr_phone: \"\",\n    pr_mobile: \"\",\n    pt_add1: \"\",\n    pt_phone: \"\",\n    pt_mobile: \"\",\n    department_name: \"\",\n    designation_name: \"\",\n    joining_date: null,\n    leaving_date: null,\n    leaving_reason: \"\",\n    dispensary: \"\",\n    remarks: \"\",\n    department_incharge: \"\",\n    user_name: \"\",\n    password: \"\",\n    email: \"\",\n    pf_code: \"\",\n    esi_code: \"\",\n    pan_no: \"\",\n    salary_p_mode: 1,\n    account_no: \"\",\n    bank_name: \"\",\n    nominee: \"\",\n    edit_button: \"\",\n    disable: \"\",\n    login_user_id: \"\",\n    login_user_name: \"\",\n    sign_path: \"\",\n  });\n\n  useEffect(() => {\n    if (selectedIdResponse) {\n      CommonController.commonApiCallFilter(\"Employee/EmployeeMasterPreview\", {\n        user_id: selectedIdResponse,\n      })\n        .then((data) => {\n          // setFormData(data);\n          let tempData = { ...formData };\n          for (let key in formData) {\n            if (data.hasOwnProperty(key)) {\n              tempData[key] = data[key];\n            }\n          }\n          setFormData(tempData);\n        })\n        .catch((err) => {\n          showErrorToast(err);\n        });\n    }\n  }, [selectedIdResponse]);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleDateChange = (name, date) => {\n    setFormData({ ...formData, [name]: date });\n  };\n\n  const handleAutoChange = (name, value) => {\n    setFormData({ ...formData, [name]: value ? value.value : null });\n  };\n\n  const getAutoValue = (key, arr, val) => {\n    const value = arr.filter((x) => x[key] === val);\n    return value && value.length > 0 ? value[0] : null;\n  };\n\n  const handleTabChange = (index) => {\n    setSelectedTab(index);\n  };\n\n  const setPRAddress = (e) => {\n    if (e.target.checked) {\n      setFormData({\n        ...formData,\n        pr_check: e.target.checked,\n        pr_add1: formData.pt_add1,\n      });\n    } else {\n      setFormData({\n        ...formData,\n        pr_check: e.target.checked,\n        pr_add1: \"\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDropdown\")\n      .then((data) => {\n        setListValues({\n          empList: data.empList,\n          desgnList: data.desgnList,\n          depInchrList: data.depInchrList,\n        });\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n  }, []);\n\n  const onNext = () => {\n    if (selectedTab === 0) {\n      setSelectedTab(1);\n    } else {\n      onSubmit();\n    }\n  };\n\n  const onBack = () => {\n    setSelectedTab(0);\n  };\n\n  const onSubmit = () => {\n    CommonController.commonApiCallFilter(\n      \"Employee/EmployeeMasterInsert\",\n      formData\n    )\n      .then((data) => {\n        if (data.valid) {\n          showSuccessToast(\n            `Employee ${\n              selectedIdResponse ? \"updated\" : \"created\"\n            } successfully`\n          );\n        }\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n  };\n\n  return (\n    <div className=\"container-fluid mt-5 pt-5\">\n      {/* {loading && <Loader />} */}\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedTab === 0 ? \"active\" : \"\")}\n            onClick={() => handleTabChange(0)}\n          >\n            General Information\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedTab === 1 ? \"active\" : \"\")}\n            onClick={() => handleTabChange(1)}\n          >\n            Other Details\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content mt-10\">\n        {selectedTab === 0 && (\n          <GeneralInfoEmp\n            formData={formData}\n            handleChange={handleChange}\n            handleDateChange={handleDateChange}\n            handleAutoChange={handleAutoChange}\n            getAutoValue={getAutoValue}\n            listValues={listValues}\n            onCheckChange={setPRAddress}\n          />\n        )}\n        {selectedTab === 1 && (\n          <OtherDetails formData={formData} handleChange={handleChange} />\n        )}\n        <div className=\"w-100 text-right\">\n          {selectedTab === 1 && (\n            <Button\n              variant=\"contained\"\n              onClick={onBack}\n              className=\"mr-3\"\n              color=\"primary\"\n              disableElevation\n            >\n              Back\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            onClick={onNext}\n            color=\"primary\"\n            disableElevation\n          >\n            {selectedTab === 1 ? \"Submit\" : \"Next\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddEmployee;\n","import { Checkbox, TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst EmployeeBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Employee/EmpMasterBrowse\",\n      params,\n      user_id\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"srno\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"code\",\n              headerName: \"Code\",\n              flex: 0.1,\n            },\n            {\n              field: \"empname\",\n              headerName: \"Emp. Name\",\n              flex: 0.1,\n            },\n            {\n              field: \"address\",\n              headerName: \"Address\",\n              flex: 0.1,\n            },\n            {\n              field: \"mobile\",\n              headerName: \"Mobile\",\n              flex: 0.1,\n            },\n            {\n              field: \"email\",\n              headerName: \"Email\",\n              flex: 0.1,\n            },\n            {\n              field: \"department\",\n              headerName: \"Department\",\n              flex: 0.1,\n            },\n            {\n              field: \"designation\",\n              headerName: \"Designation\",\n              flex: 0.1,\n            },\n            {\n              field: \"manager\",\n              headerName: \"Manager\",\n              flex: 0.1,\n            },\n            {\n              field: \"disable\",\n              headerName: \"Disable\",\n              flex: 0.1,\n              renderCell: (params) => {\n                return (\n                  <Checkbox\n                    {...label}\n                    color=\"primary\"\n                    checked={params.row.disable === \"True\"}\n                  />\n                );\n              },\n            },\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onEdit={() => handleEdit(params.row.id)}\n                  onDelete={() => handleDeleteRow(params.row.id)}\n                />\n              ),\n              flex: 0.1,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={{\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay,\n          }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default EmployeeBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  clearSelectedEmployeeId,\n} from \"../../../_redux/actions/masters/all.action\";\nimport AddGodown from \"./addEntry\";\nimport EmployeeBrowse from \"./browse\";\n// import AddMaterialCode from \"./addMaterialCode\";\n\n// import MaterialCodeBrowse from \"./browse\";\n\nconst EmployeeIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    dispatch(clearSelectedEmployeeId());\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Employee\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <EmployeeBrowse onEdit={() => handleIndex(1)} />\n        ) : (\n          <AddGodown onClose={() => handleIndex(0)} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeIndex;\n","import { TextField, Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport {\n  buttonLoader,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport useForceUpdate from \"use-force-update\";\nimport { useSelector } from \"react-redux\";\nconst AddGodown = ({ onClose }) => {\n  const [loading, setLoading] = useState(false);\n  const selectedIdResponse = useSelector(\n    (state) => state.AllReducersMaster.godownId\n  );\n  const [validator, setValidator] = useState(new SimpleReactValidator());\n\n  const forceUpdate = useForceUpdate();\n\n  const [insertParams, setInsertParams] = useState({\n    godown_id: \"0\",\n    godown_name: \"\",\n    address: \"\",\n    user_id: \"\",\n  });\n\n  useEffect(() => {\n    if (selectedIdResponse) {\n      CommonController.commonApiCallFilter(\"Godown/GodownMasterPreview\", {\n        godown_id: selectedIdResponse,\n      }).then((data) => {\n        if (data.godown_id) {\n          setInsertParams({\n            ...insertParams,\n            godown_id: data.godown_id,\n            godown_name: data.godown_name,\n            address: data.address,\n          });\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    }\n  }, [selectedIdResponse]);\n\n  const insertCombo = async () => {\n    if (validator.allValid()) {\n      setLoading(true);\n      CommonController.commonApiCallFilter(\n        \"Godown/GodownMasterInsert\",\n        insertParams\n      ).then((data) => {\n        if (data.valid) {\n          showSuccessToast(\"Successfully Saved\");\n          setLoading(false);\n        } else {\n          showErrorToast(\"Something went wrong\");\n        }\n      });\n    } else {\n      validator.showMessages();\n      // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n      forceUpdate();\n    }\n  };\n\n  return (\n    <div className=\"container-fluid mt-5 pt-5\">\n      {/* {loading && <Loader />} */}\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            label=\"Godown Name*\"\n            value={insertParams.godown_name}\n            onChange={(event) => {\n              setInsertParams({\n                ...insertParams,\n                godown_name: event.target.value,\n              });\n            }}\n          />\n          <p className=\"text-danger\">\n            {validator.message(\n              \"Godown Name\",\n              insertParams.godown_name,\n              \"required\"\n            )}\n          </p>\n        </div>\n        <div className=\"col-md-6\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            multiline\n            label=\"Address\"\n            value={insertParams.address}\n            onChange={(event) => {\n              setInsertParams({ ...insertParams, address: event.target.value });\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"w-100 text-right mt-4\">\n        <Button\n          onClick={() => onClose()}\n          variant=\"contained\"\n          className=\"mr-2\"\n          color=\"primary\"\n          disableElevation\n        >\n          Cancel\n        </Button>\n        {buttonLoader(loading, \"Save\", insertCombo, \"primary\")}\n      </div>\n    </div>\n  );\n};\n\nexport default AddGodown;\n","import { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { selectedGodownId } from \"../../../_redux/actions/masters/all.action\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst GodownBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Godown/BrowseGodownMaster\",\n      params,\n      user_id\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedGodownId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Godown/GodownMasterDelete\", {\n      godown_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"godown_name\",\n              headerName: \"Godown Name\",\n              flex: 0.1,\n            },\n            {\n              field: \"address\",\n              headerName: \"Address\",\n              flex: 0.1,\n            },\n            {\n              field: \"datetime\",\n              headerName: \"Date\",\n              flex: 0.1,\n            },\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onEdit={() => handleEdit(params.row.godown_id)}\n                  onDelete={() => handleDeleteRow(params.row.godown_id)}\n                />\n              ),\n              flex: 0.1,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={{\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay,\n          }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default GodownBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { clearSelectedGodownId } from \"../../../_redux/actions/masters/all.action\";\nimport AddGodown from \"./addEntry\";\n\nimport GodownBrowse from \"./browse\";\n// import AddMaterialCode from \"./addMaterialCode\";\n\n// import MaterialCodeBrowse from \"./browse\";\n\nconst GodownIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Godown\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <GodownBrowse onEdit={() => handleIndex(1)} />\n        ) : (\n          <AddGodown onClose={() => handleIndex(0)} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GodownIndex;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Button,\n  CardContent,\n  Card,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { withStyles } from \"@material-ui/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { buttonLoader, showSuccessToast } from \"../../../components/common\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nconst selectedValues = {\n  editIndex: null,\n  category_id: null,\n  group_id: null,\n  item_id: null,\n  description: null,\n  mlfb_no: \"\",\n  lp_ref: \"\",\n  list_price: \"\",\n  qty: 1,\n  amount: \"\",\n};\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst AddItemGroupMaster = () => {\n  const selectedIdResponse = useSelector(\n    (state) => state.AllReducersMaster.itemGroupId\n  );\n  const [loading, setLoading] = useState(false);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [addedItemList, setAddedItemList] = useState([]);\n  const [formData, setFormData] = useState({\n    product_id: \"0\",\n    category_id: null,\n    p_group_id: null,\n    item_id: null,\n    description: \"\",\n    mlfb_no: \"\",\n    uom_id: null,\n    list_price: \"\",\n    lp_ref: \"\",\n    productQtyItem: [],\n    user_id: localStorage.getItem(\"userId\"),\n  });\n\n  const [dropdownList, setDropDownList] = useState({\n    categoryNameList: [],\n    uomList: [],\n    groupNameList: [],\n    itemNameList: [],\n    descriptionList: [],\n  });\n\n  const [addDropDownList, setAddDropDownList] = useState({\n    categoryNameList: [],\n    groupNameList: [],\n    itemNameList: [],\n    descriptionList: [],\n  });\n\n  const [selectedDropDown, setSelectedDropDown] = useState(selectedValues);\n\n  const [showItemList, setShowItemList] = useState(false);\n\n  const onItemRemove = (index) => {\n    let list = [...addedItemList];\n    list.splice(index, 1);\n    setAddedItemList(list);\n  };\n\n  useEffect(() => {\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemGroupMasterPreview\", {\n      product_id: selectedIdResponse ? selectedIdResponse : 0,\n    }).then((data) => {\n      setDropDownList({\n        ...dropdownList,\n        categoryNameList: data.categoryList,\n        groupNameList: data.groupList,\n        itemNameList: data.itemList,\n        uomList: data.uomList,\n      });\n      setAddDropDownList({\n        ...addDropDownList,\n        categoryNameList: data.categoryList,\n      });\n    });\n  }, [selectedIdResponse]);\n\n  const getFilterGroup = (event, newValue) => {\n    CommonController.commonApiCallFilter(\n      \"ItemGroup/GroupItemDescriptionDDLList\",\n      {\n        category_id: newValue.id,\n      }\n    ).then((data) => {\n      setAddDropDownList({\n        ...addDropDownList,\n        groupNameList: data.objList.groupList,\n        descriptionList: data.objList.descList,\n      });\n      setSelectedDropDown({ ...selectedDropDown, category_id: newValue });\n    });\n  };\n\n  const getFilterItems = (event, newValue) => {\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemDescriptionDDLList\", {\n      category_id: selectedDropDown.category_id.id,\n      group_id: newValue.id,\n    }).then((data) => {\n      setAddDropDownList({\n        ...addDropDownList,\n        itemNameList: data.objList.itemList,\n        descriptionList: data.objList.descList,\n      });\n      setSelectedDropDown({ ...selectedDropDown, group_id: newValue });\n    });\n  };\n\n  const getFilterDescription = (event, newValue) => {\n    CommonController.commonApiCallFilter(\"ItemGroup/DescriptionDDLList\", {\n      category_id: selectedDropDown.category_id.id,\n      group_id: selectedDropDown.group_id.id,\n      item_id: newValue.id,\n    }).then((data) => {\n      setAddDropDownList({\n        ...addDropDownList,\n        descriptionList: data.mList.descList,\n      });\n      setSelectedDropDown({ ...selectedDropDown, item_id: newValue });\n    });\n  };\n\n  const getFilterValues = (event, newValue) => {\n    CommonController.commonApiCallFilter(\"itemGroup/MlfbLpListPriceObj\", {\n      category_id: selectedDropDown.category_id.id,\n      group_id: selectedDropDown.group_id.id,\n      item_id: selectedDropDown.item_id.id,\n      description: newValue.hasOwnProperty(\"description\")\n        ? newValue.description\n        : newValue.value,\n    }).then((data) => {\n      setSelectedDropDown({\n        ...selectedDropDown,\n        description: newValue,\n        mlfb_no: data.mList.mlfb_no,\n        lp_ref: data.mList.lp_ref,\n        list_price: data.mList.list_price,\n      });\n    });\n  };\n\n  const onItemAdd = () => {\n    let selected = { ...selectedDropDown };\n    selected.amount = selected.qty * selected.list_price;\n    setAddedItemList([...addedItemList, selected]);\n    setShowItemList(false);\n    setSelectedDropDown(selectedValues);\n  };\n\n  const handleFormData = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const handleFormDataList = (name, value) => {\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const getItemById = (id, list, key) => {\n    const item = list.filter((x) => x[key] === id);\n\n    return item.length > 0 ? item[0] : null;\n  };\n\n  const onAddItemInsert = () => {\n    setLoading(true);\n    let tempData = { ...formData };\n    let arr = [];\n    addedItemList.forEach((element) => {\n      let obj = {\n        category_id: element.category_id.id,\n        group_id: element.group_id.id,\n        item_id: element.item_id.id,\n        description: element.description.value,\n        mlfb_no: element.mlfb_no,\n        lp_ref: element.lp_ref,\n        list_price: element.list_price,\n        qty: element.qty,\n        amount: element.amount,\n      };\n      arr.push(obj);\n    });\n    tempData.productQtyItem = arr;\n    CommonController.commonApiCallFilter(\n      \"ItemGroup/ItemGroupMasterInsert\",\n      tempData\n    ).then((data) => {\n      if (data.valid) {\n        showSuccessToast(data.msg);\n        setLoading(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      {dataLoading && <Loader />}\n      <div className=\"row mb-5\">\n        <div className=\"col-md-4\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Product ID\"\n            disabled\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            name=\"mlfb_no\"\n            onChange={handleFormData}\n            value={formData.mlfb_no}\n            label=\"MLFB No.\"\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={dropdownList.categoryNameList}\n            getOptionLabel={(option) => option.value}\n            size=\"small\"\n            value={getItemById(\n              formData.category_id,\n              dropdownList.categoryNameList,\n              \"id\"\n            )}\n            onChange={(event, value) =>\n              handleFormDataList(\"category_id\", value.id)\n            }\n            fullWidth\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"Category Name\" />\n            )}\n          />\n        </div>\n      </div>\n      <div className=\"row mb-5\">\n        <div className=\"col-md-4\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={dropdownList.uomList}\n            getOptionLabel={(option) => option.value}\n            size=\"small\"\n            fullWidth\n            value={getItemById(formData.uom_id, dropdownList.uomList, \"id\")}\n            onChange={(event, value) => handleFormDataList(\"uom_id\", value.id)}\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"UOM\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={dropdownList.groupNameList}\n            getOptionLabel={(option) => option.value}\n            size=\"small\"\n            fullWidth\n            value={getItemById(\n              formData.p_group_id,\n              dropdownList.groupNameList,\n              \"id\"\n            )}\n            onChange={(event, value) =>\n              handleFormDataList(\"p_group_id\", value.id)\n            }\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"Group Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            name=\"list_price\"\n            value={formData.list_price}\n            onChange={handleFormData}\n            label=\"List Price\"\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            options={dropdownList.itemNameList}\n            getOptionLabel={(option) => option.value}\n            size=\"small\"\n            fullWidth\n            value={getItemById(\n              formData.item_id,\n              dropdownList.itemNameList,\n              \"id\"\n            )}\n            onChange={(event, value) => handleFormDataList(\"item_id\", value.id)}\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" label=\"Item Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            value={formData.lp_ref}\n            label=\"LP Reference\"\n            name=\"lp_ref\"\n            onChange={handleFormData}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            multiline\n            value={formData.description}\n            name=\"description\"\n            onChange={handleFormData}\n            label=\"Description\"\n          />\n        </div>\n      </div>\n      {!showItemList && (\n        <div className=\"my-4 text-right\">\n          <Button\n            variant=\"contained\"\n            className=\"mr-2\"\n            color=\"primary\"\n            disableElevation\n            onClick={() => setShowItemList(true)}\n          >\n            Add New Item\n          </Button>\n        </div>\n      )}\n      <TableContainer className=\"mt-4\" component={Paper}>\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Category</StyledTableCell>\n              <StyledTableCell>Group </StyledTableCell>\n              <StyledTableCell>Item</StyledTableCell>\n              <StyledTableCell>Description</StyledTableCell>\n              <StyledTableCell>MLFB No</StyledTableCell>\n              <StyledTableCell>LP Ref.</StyledTableCell>\n              <StyledTableCell>Qty</StyledTableCell>\n              <StyledTableCell>List Price</StyledTableCell>\n              <StyledTableCell>Amount</StyledTableCell>\n              <StyledTableCell>Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {addedItemList.length > 0 ? (\n              addedItemList.map((item, index) => {\n                return (\n                  <TableRow key={item.category_id.id}>\n                    {\" \"}\n                    <TableCell>{item.category_id.value}</TableCell>\n                    <TableCell>{item.group_id.value}</TableCell>\n                    <TableCell>{item.item_id.value}</TableCell>\n                    <TableCell>\n                      {item.description.hasOwnProperty(\"description\")\n                        ? item.description.description\n                        : item.description.value}\n                    </TableCell>\n                    <TableCell>{item.mlfb_no}</TableCell>\n                    <TableCell>{item.lp_ref}</TableCell>\n                    <TableCell>{item.qty}</TableCell>\n                    <TableCell>{item.list_price}</TableCell>\n                    <TableCell>{item.amount}</TableCell>\n                    <TableCell>\n                      {\" \"}\n                      <ActionButtons\n                        onEdit={() => {\n                          setSelectedDropDown(addedItemList[index]);\n                          setShowItemList(true);\n                        }}\n                        onDelete={() => onItemRemove(index)}\n                      />\n                    </TableCell>\n                  </TableRow>\n                );\n              })\n            ) : (\n              <TableRow>\n                <TableCell colSpan={12} className=\"text-center\">\n                  No Items\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {showItemList && (\n        <Card className=\"mt-4\">\n          <CardContent>\n            <div className=\"row\">\n              <div className=\"col-md-4 mb-4\">\n                <Autocomplete\n                  disablePortal\n                  disableClearable\n                  id=\"combo-box-demo\"\n                  value={selectedDropDown.category_id}\n                  options={addDropDownList.categoryNameList}\n                  size=\"small\"\n                  getOptionLabel={(option) => option.value}\n                  fullWidth\n                  onChange={getFilterGroup}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Category\"\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <Autocomplete\n                  disablePortal\n                  disableClearable\n                  id=\"combo-box-demo\"\n                  value={selectedDropDown.group_id}\n                  getOptionLabel={(option) => option.value}\n                  options={addDropDownList.groupNameList}\n                  size=\"small\"\n                  onChange={getFilterItems}\n                  fullWidth\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Group\" />\n                  )}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <Autocomplete\n                  disablePortal\n                  disableClearable\n                  id=\"combo-box-demo\"\n                  value={selectedDropDown.item_id}\n                  options={addDropDownList.itemNameList}\n                  getOptionLabel={(option) => option.value}\n                  onChange={getFilterDescription}\n                  size=\"small\"\n                  fullWidth\n                  renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" label=\"Item\" />\n                  )}\n                />\n              </div>\n\n              <div className=\"col-md-4 mb-4\">\n                <Autocomplete\n                  disablePortal\n                  disableClearable\n                  id=\"combo-box-demo\"\n                  value={selectedDropDown.description}\n                  options={addDropDownList.descriptionList}\n                  getOptionLabel={(option) =>\n                    option.hasOwnProperty(\"description\")\n                      ? option.description\n                      : option.value\n                  }\n                  size=\"small\"\n                  fullWidth\n                  onChange={getFilterValues}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      variant=\"outlined\"\n                      label=\"Description\"\n                    />\n                  )}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  disabled\n                  label=\"MLFB\"\n                  fullWidth\n                  value={selectedDropDown?.mlfb_no}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  disabled\n                  label=\"LP Ref.\"\n                  fullWidth\n                  value={selectedDropDown?.lp_ref}\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label=\"Qty\"\n                  value={selectedDropDown.qty}\n                  fullWidth\n                  onChange={(e) =>\n                    setSelectedDropDown({\n                      ...selectedDropDown,\n                      qty: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label=\"List Price\"\n                  fullWidth\n                  value={selectedDropDown?.list_price}\n                  onChange={(e) =>\n                    setSelectedDropDown({\n                      ...selectedDropDown,\n                      list_price: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <div className=\"col-md-4 mb-4\">\n                <TextField\n                  size=\"small\"\n                  variant=\"outlined\"\n                  disabled\n                  label=\"Amount\"\n                  fullWidth\n                  value={\n                    selectedDropDown.qty !== \"\"\n                      ? selectedDropDown.qty * selectedDropDown.list_price\n                      : \"\"\n                  }\n                />\n              </div>\n              <div className=\"col-md-12 mb-4 text-right\">\n                <Button\n                  variant=\"contained\"\n                  className=\"mr-2\"\n                  color=\"primary\"\n                  disableElevation\n                  onClick={onItemAdd}\n                >\n                  Submit\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  className=\"mr-2\"\n                  color=\"primary\"\n                  disableElevation\n                  onClick={() => {\n                    setShowItemList(false);\n                    setSelectedDropDown(selectedValues);\n                  }}\n                >\n                  Close\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n      {buttonLoader(loading, \"Submit\", onAddItemInsert, \"primary\")}\n    </div>\n  );\n};\n\nexport default AddItemGroupMaster;\n","import { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  selectedItemGroupId,\n} from \"../../../_redux/actions/masters/all.action\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst ItemGroupBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"ItemGroup/BrowseItemGroupMaster\",\n      params,\n      user_id\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedItemGroupId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"ItemGroup/ItemGroupMasterDelete\", {\n      item_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n            },\n            {\n              field: \"category_name\",\n              headerName: \"Category\",\n              flex: 0.1,\n            },\n            {\n              field: \"p_group_name\",\n              headerName: \"Group\",\n              flex: 0.1,\n            },\n            {\n              field: \"item_name\",\n              headerName: \"Item\",\n              flex: 0.1,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              flex: 0.1,\n            },\n            {\n              field: \"mlfb_no\",\n              headerName: \"MLFB No.\",\n              flex: 0.1,\n            },\n\n            {\n              field: \"uom\",\n              headerName: \"UOM\",\n              flex: 0.1,\n            },\n            {\n              field: \"list_price\",\n              headerName: \"List Price\",\n              flex: 0.1,\n            },\n            {\n              field: \"lp_ref\",\n              headerName: \"LP Ref.\",\n              flex: 0.1,\n            },\n            {\n              field: \"datetime\",\n              headerName: \"Datetime\",\n              flex: 0.1,\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onEdit={() => handleEdit(params.row.product_id)}\n                  onDelete={() => handleDeleteRow(params.row.product_id)}\n                />\n              ),\n              flex: 0.1,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={{\n            Pagination: CustomPagination,\n            NoRowsOverlay: CustomNoRowsOverlay,\n          }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ItemGroupBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AddItemGroupMaster from \"./addItem\";\nimport ItemGroupBrowse from \"./browse\";\n// import AddMaterialCode from \"./addMaterialCode\";\n// import MaterialCodeBrowse from \"./browse\";\nconst ItemGroupIndex = () => {\n  const [selectedIndex, setSeletedIndex] = useState(0);\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              //   dispatch(clearSelectedComboId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              //   dispatch(clearSelectedComboId());\n              handleIndex(1);\n            }}\n          >\n            New Item Group\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {\n          selectedIndex === 0 ? (\n            <ItemGroupBrowse onEdit={() => handleIndex(1)} />\n          ) : (\n            <AddItemGroupMaster />\n          )\n          //   <AddComboMLFB onClose={() => handleIndex(0)} />\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ItemGroupIndex;\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const searchMaterialCodeData = createAction(\r\n  \"SEARCH_MATERIALCODE_MASTER_DATA\",\r\n  (filters, params) => ({\r\n    payload: { filters, params },\r\n  })\r\n);\r\n\r\nexport const searchMaterialCodeDataSuccess = createAction(\r\n  \"SEARCH_MATERIALCODE_MASTER_DATA_SUCCESS\",\r\n  (data) => ({\r\n    payload: data,\r\n  })\r\n);\r\n\r\nexport const searchPartyName = createAction(\r\n  \"SEARCH_PARTY_NAME_LIST\",\r\n  (filters) => ({\r\n    payload: { filters },\r\n  })\r\n);\r\n\r\nexport const searchPartyNameSuccess = createAction(\r\n  \"SEARCH_PARTY_NAME_LIST_SUCCESS\",\r\n  (data) => ({\r\n    payload: data,\r\n  })\r\n);\r\n\r\nexport const materialCodeEditId = createAction(\r\n  \"MATERIAL_CODE_EDIT_ID\",\r\n  (id) => ({\r\n    payload: id,\r\n  })\r\n);\r\n\r\nexport const clearMaterialCodeEditId = createAction(\r\n  \"CLEAR_MATERIAL_CODE_EDIT_ID\"\r\n);\r\n","import { userService } from \"../../../services\";\r\n\r\nexport const MaterialCodeMasterController = {\r\n  getMaterialCodeBrowse,\r\n  getPartyNameList,\r\n  insertMaterialCode,\r\n  getMaterialDetailById,\r\n  deleteMaterialCode,\r\n};\r\n\r\nasync function getMaterialCodeBrowse(filters, params) {\r\n  try {\r\n    let apiEndpoint = `MaterialCode/BrowseMaterialCode?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getPartyNameList(filters) {\r\n  try {\r\n    let apiEndpoint = `/Dropdown/GetListCompanyMaterialCode`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function insertMaterialCode(filters) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodeInsert`;\r\n    let response = await userService.post(apiEndpoint, filters);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function getMaterialDetailById(payload) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodePreview`;\r\n    let response = await userService.post(apiEndpoint, payload);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n\r\nasync function deleteMaterialCode(payload) {\r\n  try {\r\n    let apiEndpoint = `/MaterialCode/MaterialCodeDelete`;\r\n    let response = await userService.post(apiEndpoint, payload);\r\n\r\n    if (response) {\r\n      return response.data;\r\n    } else {\r\n      if (response.data.status !== 500) {\r\n        alert(response.data);\r\n      }\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.log(\"error\", error);\r\n    return null;\r\n  }\r\n}\r\n","import {\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { SimpleTable } from \"../../../components/basic-table\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport { TablePicker } from \"../../../components/table-picker\";\r\n// import { TablePicker } from \"../../../components/table-picker\";\r\nimport { searchPartyName } from \"../../../_redux/actions/masters/materialcode.action\";\r\nimport { MaterialCodeMasterController } from \"../../../_redux/controller/Masters/materialcode.controller\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#1280cf\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst userId = localStorage.getItem(\"userId\");\r\n\r\nconst AddMaterialCode = ({ onCancel }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const partyNameListResponse = useSelector(\r\n    (state) => state.MaterialCodeMaster.partyNameList\r\n  );\r\n  const selectedMaterialCodeId = useSelector(\r\n    (state) => state.MaterialCodeMaster.selectedMaterialId\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [partyNameList, setPartyNameList] = useState([]);\r\n  const [selectedParty, setSelectedParty] = useState(null);\r\n  const [selectedCustomerList, setSelectedCustomerList] = useState([]);\r\n  const [showPickCustomer, setPickCustomer] = useState(false);\r\n  const [showPickItems, setPickItems] = useState(false);\r\n  const [selectedItemsList, setSelectedItemsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(partyNameListResponse)) {\r\n      setPartyNameList(partyNameListResponse);\r\n    }\r\n  }, [partyNameListResponse]);\r\n\r\n  useEffect(() => {\r\n    if (selectedMaterialCodeId && selectedMaterialCodeId.tran_id) {\r\n      setLoading(true);\r\n      MaterialCodeMasterController.getMaterialDetailById(\r\n        selectedMaterialCodeId\r\n      ).then((data) => {\r\n        if (data.tran_id) {\r\n          if (partyNameList.length > 0) {\r\n            var indx = partyNameList.findIndex(\r\n              (x) => x.id === data.customer_id\r\n            );\r\n\r\n            if (indx > -1) {\r\n              setSelectedParty(partyNameList[indx]);\r\n            }\r\n\r\n            setSelectedCustomerList(\r\n              renameKeyObj(\"customer_id\", \"company_id\", data.codeCustomerItem)\r\n            );\r\n            setSelectedItemsList(data.codeProductItem);\r\n          }\r\n        }\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 2000);\r\n      });\r\n    }\r\n  }, [selectedMaterialCodeId, partyNameList]);\r\n\r\n  const renameKeyObj = (from, to, arr) => {\r\n    var temp = arr;\r\n    var newArr = [];\r\n    for (const item of temp) {\r\n      item[to] = item[from];\r\n      delete item[from];\r\n      newArr.push(item);\r\n    }\r\n    return newArr;\r\n  };\r\n\r\n  // const newArrayOfObj = selectedCustomerList.map(\r\n  //   ({ company_id: customer_id, ...rest }) => ({\r\n  //     customer_id,\r\n  //     ...rest,\r\n  //   })\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   setNewCustomerList(newArrayOfObj);\r\n  // }, [newArrayOfObj]);\r\n\r\n  const validateMaterialCode = () => {\r\n    var validateObj = selectedItemsList.filter((x) => {\r\n      if (!x.hasOwnProperty(\"material_code\") || x.material_code === \"\") {\r\n        return x;\r\n      } else if (!x.hasOwnProperty(\"unit_price\") || isNaN(x.unit_price)) {\r\n        return x;\r\n      }\r\n    });\r\n\r\n    return validateObj;\r\n  };\r\n\r\n  const insertMaterialCode = () => {\r\n    const validateList = validateMaterialCode();\r\n    if (selectedCustomerList.length < 1) {\r\n      showErrorToast(\"Pick Customer\");\r\n    } else if (selectedItemsList.length < 1) {\r\n      showErrorToast(\"Pick Item\");\r\n    } else if (validateList.length > 0) {\r\n      showErrorToast(\"Fill the required fields\");\r\n    } else {\r\n      setLoading(true);\r\n      var param = {\r\n        tran_id: selectedMaterialCodeId ? selectedMaterialCodeId.tran_id : \"0\",\r\n        customer_id: selectedParty.id,\r\n        user_id: userId,\r\n\r\n        codeCustomerItem: filterCustomerList(),\r\n        codeProductItem: filterProductList(),\r\n      };\r\n\r\n      MaterialCodeMasterController.insertMaterialCode(param).then((data) => {\r\n        if (data.valid) {\r\n          showSuccessToast(data.type);\r\n          onCancel();\r\n        } else {\r\n          showErrorToast(data.type);\r\n        }\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 2000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const filterProductList = () => {\r\n    var newList = [];\r\n    for (const item of selectedItemsList) {\r\n      var list = {\r\n        product_id: item.product_id,\r\n        material_code: item.material_code,\r\n        lp_ref: item.lp_ref,\r\n        list_price: item.list_price,\r\n        dis_per: item.dis_per,\r\n        unit_price: item.unit_price,\r\n      };\r\n      newList.push(list);\r\n    }\r\n\r\n    return newList;\r\n  };\r\n\r\n  const filterCustomerList = () => {\r\n    var newList = [];\r\n    for (const customer of selectedCustomerList) {\r\n      var list = {\r\n        customer_id: customer.company_id,\r\n      };\r\n      newList.push(list);\r\n    }\r\n\r\n    return newList;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(searchPartyName());\r\n  }, []);\r\n\r\n  const customerListColumn = [\r\n    {\r\n      id: \"company_id\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"\",\r\n    },\r\n    {\r\n      id: \"company_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Company Name\",\r\n    },\r\n    {\r\n      id: \"short_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Short Name\",\r\n    },\r\n    {\r\n      id: \"group_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Group Name\",\r\n    },\r\n    { id: \"address\", numeric: false, disablePadding: false, label: \"Address\" },\r\n    { id: \"city\", numeric: false, disablePadding: false, label: \"City\" },\r\n    {\r\n      id: \"district\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"District\",\r\n    },\r\n    { id: \"state\", numeric: false, disablePadding: false, label: \"State\" },\r\n    { id: \"pin_code\", numeric: false, disablePadding: false, label: \"Pincode\" },\r\n  ];\r\n\r\n  const supplyItemsColumn = [\r\n    {\r\n      id: \"product_id\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"\",\r\n    },\r\n    {\r\n      id: \"category_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Category Name\",\r\n    },\r\n    {\r\n      id: \"p_group_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Group Name\",\r\n    },\r\n    {\r\n      id: \"item_name\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Item Name\",\r\n    },\r\n    {\r\n      id: \"description\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Description\",\r\n    },\r\n    { id: \"mlfb_no\", numeric: false, disablePadding: false, label: \"MLFB\" },\r\n    {\r\n      id: \"grade\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"Grade\",\r\n    },\r\n    { id: \"lp_ref\", numeric: false, disablePadding: false, label: \"LP Ref\" },\r\n    {\r\n      id: \"list_price\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"List Price\",\r\n    },\r\n  ];\r\n\r\n  const selectedCustomerColumns = [\r\n    {\r\n      id: \"company_name\",\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: \"Company Name\",\r\n    },\r\n    {\r\n      id: \"city\",\r\n      numeric: false,\r\n      disablePadding: false,\r\n      label: \"City\",\r\n    },\r\n  ];\r\n\r\n  const togglePickCustomer = () => setPickCustomer(!showPickCustomer);\r\n  const togglePickItems = () => setPickItems(!showPickItems);\r\n\r\n  const handleAddedCustomer = (row) => {\r\n    var tempselected = [...selectedCustomerList];\r\n    var tempIndex = tempselected.findIndex(\r\n      (x) => x.company_id === row.company_id\r\n    );\r\n    if (tempIndex > -1) {\r\n      tempselected.splice(tempIndex, 1);\r\n      setSelectedCustomerList(tempselected);\r\n    }\r\n  };\r\n\r\n  const handleAddedItems = (row) => {\r\n    var tempselected = [...selectedItemsList];\r\n    var tempIndex = tempselected.findIndex(\r\n      (x) => x.product_id === row.product_id\r\n    );\r\n    if (tempIndex > -1) {\r\n      tempselected.splice(tempIndex, 1);\r\n      setSelectedItemsList(tempselected);\r\n    }\r\n  };\r\n\r\n  const handlePickCustomer = (data) => {\r\n    setSelectedCustomerList(data);\r\n    setPickCustomer(false);\r\n  };\r\n\r\n  const handlePickItems = (data) => {\r\n    setSelectedItemsList(data);\r\n    setPickItems(false);\r\n  };\r\n\r\n  const handleProductChange = (event, id) => {\r\n    console.log(id);\r\n    var tempNewList = [...selectedItemsList];\r\n    var tempIndx = tempNewList.findIndex((x) => x.product_id === id);\r\n    if (tempIndx > -1) {\r\n      var element = tempNewList[tempIndx];\r\n      element[event.target.name] = event.target.value;\r\n      tempNewList[tempIndx] = element;\r\n    } else {\r\n      var element = {\r\n        product_id: id,\r\n      };\r\n      element[event.target.name] = event.target.value;\r\n      tempNewList.push(element);\r\n    }\r\n    setSelectedItemsList(tempNewList);\r\n  };\r\n  const calculateDisPer = (event, item) => {\r\n    var tempNewList = [...selectedItemsList];\r\n    var tempIndx = tempNewList.findIndex(\r\n      (x) => x.product_id === item.product_id\r\n    );\r\n    if (tempIndx > -1) {\r\n      var element = tempNewList[tempIndx];\r\n      element.unit_price = parseInt(event.target.value);\r\n      element.dis_per =\r\n        ((parseInt(item.list_price) - element.unit_price) /\r\n          parseInt(item.list_price)) *\r\n        100;\r\n    } else {\r\n      var element = {\r\n        product_id: item.product_id,\r\n      };\r\n      element.unit_price = parseInt(event.target.value);\r\n      element.dis_per =\r\n        ((parseInt(item.list_price) - element.unit_price) /\r\n          parseInt(item.list_price)) *\r\n        100;\r\n      tempNewList.push(element);\r\n    }\r\n    setSelectedItemsList(tempNewList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loader />}\r\n      <div className=\"container-fluid mt-4\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={partyNameList}\r\n              onChange={(event, newValue) => setSelectedParty(newValue)}\r\n              getOptionLabel={(option) => option.value}\r\n              value={selectedParty}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Party Name\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          {!showPickCustomer && (\r\n            <div className=\"col-md-3 ml-auto text-right\">\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"mr-2\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                onClick={togglePickCustomer}\r\n              >\r\n                Pick Customer\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                onClick={togglePickItems}\r\n                disableElevation\r\n                variant=\"contained\"\r\n              >\r\n                Pick Item\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        {showPickCustomer && (\r\n          <TablePicker\r\n            selectedItems={selectedCustomerList}\r\n            columns={customerListColumn}\r\n            url={\"MaterialCode/MaterialCodePickCustomer\"}\r\n            onSubmit={handlePickCustomer}\r\n            onPickerClose={togglePickCustomer}\r\n          />\r\n        )}\r\n\r\n        {showPickItems && (\r\n          <TablePicker\r\n            selectedItems={selectedItemsList}\r\n            columns={supplyItemsColumn}\r\n            url={\"MaterialCode/MaterialCodePickProduct\"}\r\n            onSubmit={handlePickItems}\r\n            onPickerClose={togglePickItems}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"container-fluid mt-5 pt-5\">\r\n        <h4>Selected Customer List</h4>\r\n        <Divider />\r\n        <SimpleTable\r\n          columns={selectedCustomerColumns}\r\n          rows={selectedCustomerList}\r\n          onDelete={handleAddedCustomer}\r\n        />\r\n      </div>\r\n      <div className=\"container-fluid mt-5 pt-5\">\r\n        <h4>Selected Items List</h4>\r\n        <Divider />\r\n        <TableContainer className=\"mt-4\" component={Paper}>\r\n          <Table size=\"small\" sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>MLFB</StyledTableCell>\r\n                <StyledTableCell>Item Name</StyledTableCell>\r\n                <StyledTableCell>Material Code</StyledTableCell>\r\n                <StyledTableCell>Lp Ref.</StyledTableCell>\r\n                <StyledTableCell>List Price</StyledTableCell>\r\n                <StyledTableCell>Dis. %</StyledTableCell>\r\n                <StyledTableCell>Unit Price</StyledTableCell>\r\n                <StyledTableCell>Actions</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {rows.lenght > 0 ? (\r\n                rows.map((row) => (\r\n                  <TableRow\r\n                    key={rows[columns[0].id]}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    {columns.map((col, index) => {\r\n                      if (columns[index + 1]) {\r\n                        return (\r\n                          <TableCell key={\"row_id\" + index} scope=\"row\">\r\n                            {row[columns[index + 1].id]}\r\n                          </TableCell>\r\n                        );\r\n                      }\r\n                    })}\r\n\r\n                    <TableCell scope=\"row\">\r\n                      <ActionButtons\r\n                        onPreview={onPreview}\r\n                        onEdit={onEdit}\r\n                        onDelete={onDelete}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              ) : (\r\n                <TableCell className=\"text-center\" colSpan={12}>\r\n                  No Records Found\r\n                </TableCell>\r\n              )} */}\r\n\r\n              {selectedItemsList.length > 0 ? (\r\n                selectedItemsList.map((item, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                      key={index}\r\n                    >\r\n                      <TableCell scope=\"row\">{item.mlfb_no}</TableCell>\r\n                      <TableCell scope=\"row\" style={{ width: 150 }}>\r\n                        {item.item_name}\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          name=\"material_code\"\r\n                          value={item.material_code}\r\n                          onChange={(event) =>\r\n                            handleProductChange(event, item.product_id)\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          name=\"lp_ref\"\r\n                          value={item.lp_ref}\r\n                          disabled={true}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          name=\"list_price\"\r\n                          value={item.list_price}\r\n                          disabled={true}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          name=\"dis_per\"\r\n                          value={\r\n                            isNaN(item.dis_per)\r\n                              ? \"\"\r\n                              : parseFloat(item.dis_per).toFixed(2)\r\n                          }\r\n                          disabled={true}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          name=\"unit_price\"\r\n                          value={isNaN(item.unit_price) ? \"\" : item.unit_price}\r\n                          onChange={(event) => calculateDisPer(event, item)}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell scope=\"row\">\r\n                        <ActionButtons\r\n                          onDelete={() => handleAddedItems(item)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              ) : (\r\n                <TableRow>\r\n                  <TableCell colSpan={12} className=\"text-center\">\r\n                    No Records\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <div className=\"w-100 mt-3 text-right\">\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"mr-2\"\r\n            onClick={insertMaterialCode}\r\n            disableElevation\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => onCancel()}\r\n            disableElevation\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMaterialCode;\r\n","import { TextField } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport CustomPagination from \"../../../components/CustomPagination\";\r\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\r\nimport { Loader } from \"../../../components/loader\";\r\nimport {\r\n  materialCodeEditId,\r\n  searchMaterialCodeData,\r\n} from \"../../../_redux/actions/masters/materialcode.action\";\r\nimport { MaterialCodeMasterController } from \"../../../_redux/controller/Masters/materialcode.controller\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\n\r\nconst user_id = {\r\n  user_id: localStorage.getItem(\"userId\"),\r\n};\r\n\r\nconst MaterialCodeBrowse = ({ onEditMaterial }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [browseListData, setBrowseListData] = useState([]);\r\n  const [totalRecord, setTotalRecords] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const user_id = {\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  };\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 15,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const [filter, setFilter] = useState({\r\n    fromDate: null,\r\n    toDate: null,\r\n    user_id: localStorage.getItem(\"userId\"),\r\n  });\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handleDateChange = (type, date) => {\r\n    setFilter({ ...filter, [type]: date });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getBrowseListData();\r\n  }, [params, filter]);\r\n\r\n  const getBrowseListData = async () => {\r\n    setLoading(true);\r\n    await CommonController.commonApiCall(\r\n      \"MaterialCode/BrowseMaterialCode\",\r\n      params,\r\n      filter\r\n    )\r\n      .then((data) => {\r\n        setBrowseListData(data.data);\r\n        setTotalRecords(data.recordsFiltered);\r\n      })\r\n      .catch((err) => {\r\n        showErrorToast(err);\r\n      });\r\n    setLoading(false);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    setParams({ ...params, pageNo: param });\r\n  };\r\n\r\n  const handleEditMaterial = (id) => {\r\n    dispatch(materialCodeEditId({ tran_id: id }));\r\n    onEditMaterial();\r\n  };\r\n\r\n  const deleteMaterialData = (id = null) => {\r\n    if (id) {\r\n      setLoading(true);\r\n      MaterialCodeMasterController.deleteMaterialCode({ tran_id: id }).then(\r\n        (data) => {\r\n          if (data.valid) {\r\n            showSuccessToast(\"Deleted Successfully\");\r\n            dispatch(searchMaterialCodeData(user_id, params));\r\n          } else {\r\n            showErrorToast(\"Something went wrong\");\r\n          }\r\n          setTimeout(() => {\r\n            setLoading(false);\r\n          }, 1000);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <Loader />}\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-1 d-flex align-items-center\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <TextField\r\n              fullWidth\r\n              id=\"outlined-basic\"\r\n              size=\"small\"\r\n              onKeyUp={handleParams}\r\n              name=\"filter_value\"\r\n              label=\"Search\"\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"From Date\"\r\n              value={filter.fromDate}\r\n              format=\"dd/MM/yyyy\"\r\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <DatePicker\r\n              label=\"To Date\"\r\n              value={filter.toDate}\r\n              onChange={(date) => handleDateChange(\"toDate\", date)}\r\n              animateYearScrolling\r\n              inputVariant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          columns={[\r\n            {\r\n              field: \"tran_id\",\r\n              headerName: \"ID\",\r\n              flex: 0,\r\n            },\r\n            {\r\n              field: \"customer\",\r\n              headerName: \"Customer\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"add_by\",\r\n              headerName: \"Add By\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"datetime\",\r\n              headerName: \"Date\",\r\n              flex: 0.1,\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEditMaterial(params.row.tran_id)}\r\n                  onDelete={() => deleteMaterialData(params.row.tran_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[15, 25, 50, 100]}\r\n          rowCount={totalRecord}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={loading}\r\n          rowHeight={30}\r\n          components={{\r\n            Pagination: CustomPagination,\r\n            NoRowsOverlay: CustomNoRowsOverlay,\r\n          }}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          rows={browseListData}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MaterialCodeBrowse;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearMaterialCodeEditId } from \"../../../_redux/actions/masters/materialcode.action\";\r\nimport AddMaterialCode from \"./addMaterialCode\";\r\nimport MaterialCodeBrowse from \"./browse\";\r\n\r\nconst MaterialCodeIndex = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSeletedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSeletedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n      <ul className=\"nav nav-tabs nav-tabs-line\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n            onClick={() => handleIndex(0)}\r\n          >\r\n            Browse\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n            onClick={() => handleIndex(1)}\r\n          >\r\n            Add Material Code\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\">\r\n        {selectedIndex === 0 ? (\r\n          <MaterialCodeBrowse onEditMaterial={() => handleIndex(1)} />\r\n        ) : (\r\n          <AddMaterialCode\r\n            onCancel={() => {\r\n              handleIndex(0);\r\n              dispatch(clearMaterialCodeEditId());\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaterialCodeIndex;\r\n","import {\n  Checkbox,\n  FormControlLabel,\n  FormGroup,\n  TextField,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nconst GeneralProduct = ({\n  handleChange,\n  formData,\n  handleAutoChange,\n  handleCheckChange,\n}) => {\n  const [categoryList, setCategoryList] = useState([]);\n  const [groupList, setGroupList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [ggList, setGGList] = useState([]);\n  const [uomList, setUomList] = useState([]);\n\n  useEffect(() => {\n    CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\")\n      .then((data) => setCategoryList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetpgroupList\")\n      .then((data) => setGroupList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetItemList\")\n      .then((data) => setItemList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetGGList\")\n      .then((data) => setGGList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetUomList\")\n      .then((data) => setUomList(data))\n      .catch((err) => showErrorToast(err));\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <FormGroup className=\"flex-row justify-content-end\">\n            <FormControlLabel\n              label=\"Edit\"\n              checked={formData.edit === \"True\"}\n              control={<Checkbox color=\"primary\" />}\n              onChange={(e) => handleCheckChange(\"edit\", e.target.checked)}\n            />\n            <FormControlLabel\n              checked={formData.deactivate === \"True\"}\n              control={<Checkbox color=\"primary\" />}\n              onChange={(e) =>\n                handleCheckChange(\"deactivate\", e.target.checked)\n              }\n              label=\"Hide\"\n            />\n            <FormControlLabel\n              checked={formData.serial === \"True\"}\n              control={<Checkbox color=\"primary\" />}\n              onChange={(e) => handleCheckChange(\"serial\", e.target.checked)}\n              label=\"Multiple Line\"\n            />\n            <FormControlLabel\n              checked={formData.siemens_product === \"True\"}\n              control={<Checkbox color=\"primary\" />}\n              onChange={(e) =>\n                handleCheckChange(\"siemens_product\", e.target.checked)\n              }\n              label=\"Siemen Product\"\n            />\n          </FormGroup>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            value={formData.product_id}\n            label=\"Product ID\"\n            disabled\n            fullWidth\n          />\n        </div>\n        <div className=\"col-md-3 mb-5 \">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            label=\"ERP Code\"\n            value={formData.product_code}\n            name=\"product_code\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            size=\"small\"\n            getOptionLabel={(option) => option.value}\n            options={categoryList}\n            onChange={(event, value) =>\n              handleAutoChange(\"category_id\", \"category_name\", value)\n            }\n            value={\n              formData.category_id !== \"\"\n                ? { id: formData.category_id, value: formData.category_name }\n                : \"\"\n            }\n            fullWidth\n            renderInput={(params) => (\n              <TextField variant=\"outlined\" {...params} label=\"Category Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            size=\"small\"\n            options={groupList}\n            getOptionLabel={(option) => option.value}\n            onChange={(event, value) =>\n              handleAutoChange(\"p_group_id\", \"p_group_name\", value)\n            }\n            value={\n              formData.p_group_id !== \"\"\n                ? { id: formData.p_group_id, value: formData.p_group_name }\n                : \"\"\n            }\n            fullWidth\n            renderInput={(params) => (\n              <TextField variant=\"outlined\" {...params} label=\"Group Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            size=\"small\"\n            options={itemList}\n            onChange={(event, value) =>\n              handleAutoChange(\"item_id\", \"item_name\", value)\n            }\n            value={\n              formData.item_id !== \"\"\n                ? { id: formData.item_id, value: formData.item_name }\n                : \"\"\n            }\n            getOptionLabel={(option) => option.value}\n            fullWidth\n            renderInput={(params) => (\n              <TextField variant=\"outlined\" {...params} label=\"Item Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            size=\"small\"\n            options={ggList}\n            getOptionLabel={(option) => option.value}\n            onChange={(event, value) =>\n              handleAutoChange(\"gg_id\", \"gg_name\", value)\n            }\n            value={\n              formData.gg_id !== \"\"\n                ? { id: formData.gg_id, value: formData.gg_name }\n                : \"\"\n            }\n            fullWidth\n            renderInput={(params) => (\n              <TextField variant=\"outlined\" {...params} label=\"GG Name\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            label=\"Description\"\n            value={formData.description}\n            name=\"description\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"mlfb_no\"\n            value={formData.mlfb_no}\n            onChange={handleChange}\n            label=\"MLFB No. *\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"grade\"\n            value={formData.grade}\n            onChange={handleChange}\n            label=\"HSN / SAC\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"tax_rate\"\n            value={formData.tax_rate}\n            onChange={handleChange}\n            label=\"Tax Rate\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <Autocomplete\n            disablePortal\n            id=\"combo-box-demo\"\n            size=\"small\"\n            options={uomList}\n            getOptionLabel={(option) => option.value}\n            onChange={(event, value) =>\n              handleAutoChange(\"uom_id\", \"uom\", value)\n            }\n            value={\n              formData.uom_id !== \"\"\n                ? { id: formData.uom_id, value: formData.uom }\n                : \"\"\n            }\n            fullWidth\n            renderInput={(params) => (\n              <TextField variant=\"outlined\" {...params} label=\"UOM\" />\n            )}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            name=\"qty\"\n            onChange={handleChange}\n            fullWidth\n            size=\"small\"\n            value={formData.qty}\n            label=\"Qty\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            name=\"package\"\n            onChange={handleChange}\n            value={formData.package}\n            size=\"small\"\n            label=\"Package\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"list_price\"\n            value={formData.list_price}\n            onChange={handleChange}\n            label=\"List Price\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            name=\"margin\"\n            onChange={handleChange}\n            value={formData.margin}\n            fullWidth\n            size=\"small\"\n            label=\"Margin\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"pur_rate\"\n            value={formData.pur_rate}\n            onChange={handleChange}\n            label=\"Purchase Rate\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"reorder_level\"\n            value={formData.reorder_level}\n            onChange={handleChange}\n            label=\"Re-Order Level Qty.\"\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            name=\"lp_ref\"\n            value={formData.lp_ref}\n            onChange={handleChange}\n            label=\"LP Reference\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GeneralProduct;\n","import { MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nconst OtherInformation = ({ formData, handleChange }) => {\n  const [diList, setDiList] = useState([]);\n  const [doList, setDoList] = useState([]);\n  const [aiList, setAiList] = useState([]);\n  const [aoList, setAoList] = useState([]);\n  const [fcList, setFcList] = useState([]);\n  const [fmList, setFmList] = useState([]);\n\n  console.log(formData);\n\n  useEffect(() => {\n    CommonController.commonApiCallFilter(\"Dropdown/GetProductDi\")\n      .then((data) => setDiList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetProductDo\")\n      .then((data) => setDoList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetProductAi\")\n      .then((data) => setAiList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetProductAo\")\n      .then((data) => setAoList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetUomProductFc\")\n      .then((data) => setFcList(data))\n      .catch((err) => showErrorToast(err));\n    CommonController.commonApiCallFilter(\"Dropdown/GetProductFm\")\n      .then((data) => setFmList(data))\n      .catch((err) => showErrorToast(err));\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Digital Input\"\n            variant=\"outlined\"\n            name=\"di\"\n            size=\"small\"\n            value={formData.di}\n            onChange={handleChange}\n            fullWidth\n          >\n            {diList.length > 0 &&\n              diList.map((di) => {\n                return (\n                  <MenuItem key={di.value} value={di.value}>\n                    {di.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            name=\"di_value\"\n            value={formData.di_value}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Digital Output\"\n            variant=\"outlined\"\n            name=\"do\"\n            size=\"small\"\n            value={formData.Do}\n            onChange={handleChange}\n            fullWidth\n          >\n            {doList.length > 0 &&\n              doList.map((_do) => {\n                return (\n                  <MenuItem key={_do.value} value={_do.value}>\n                    {_do.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            name=\"do_value\"\n            value={formData.do_value}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Analog Input\"\n            variant=\"outlined\"\n            name=\"ai\"\n            size=\"small\"\n            value={formData.ai}\n            onChange={handleChange}\n            fullWidth\n          >\n            {aiList.length > 0 &&\n              aiList.map((ai) => {\n                return (\n                  <MenuItem key={ai.value} value={ai.value}>\n                    {ai.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            name=\"ai_value\"\n            value={formData.ai_value}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Analog Output\"\n            variant=\"outlined\"\n            name=\"ao\"\n            size=\"small\"\n            value={formData.ao}\n            onChange={handleChange}\n            fullWidth\n          >\n            {aiList.length > 0 &&\n              aoList.map((ao) => {\n                return (\n                  <MenuItem key={ao.value} value={ao.value}>\n                    {ao.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            value={formData.ao_value}\n            name=\"ao_value\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Front Connector\"\n            variant=\"outlined\"\n            name=\"fc\"\n            size=\"small\"\n            value={formData.fc}\n            onChange={handleChange}\n            fullWidth\n          >\n            {fcList.length > 0 &&\n              fcList.map((fc) => {\n                return (\n                  <MenuItem key={fc.value} value={fc.value}>\n                    {fc.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            name=\"fc_value\"\n            value={formData.fc_value}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            id=\"outlined-select-currency2\"\n            select\n            label=\"Front Connector\"\n            variant=\"outlined\"\n            name=\"fm\"\n            size=\"small\"\n            value={formData.fm}\n            onChange={handleChange}\n            fullWidth\n          >\n            {fmList.length > 0 &&\n              fmList.map((fm) => {\n                return (\n                  <MenuItem key={fm.value} value={fm.value}>\n                    {fm.value}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3 mb-5\">\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Value\"\n            fullWidth\n            name=\"fm_value\"\n            value={formData.fm_value}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OtherInformation;\n","import React, { useEffect, useState } from \"react\";\nimport GeneralProduct from \"./general\";\nimport { Button } from \"@material-ui/core\";\nimport OtherInformation from \"./other\";\nimport { useSelector } from \"react-redux\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\n\nconst AddNewProduct = () => {\n  const selectedIdResponse = useSelector(\n    (state) => state.AllReducersMaster.productId\n  );\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const [formData, setFormData] = useState({\n    product_id: \"\",\n    product_code: \"\",\n    category_id: \"\",\n    category_name: \" \",\n    p_group_name: \"\",\n    p_group_id: \"\",\n    item_id: \"\",\n    item_name: \"\",\n    gg_id: \"\",\n    description: \" \",\n    mlfb_no: \"\",\n    grade: \"\",\n    tax_rate: \"\",\n    uom_id: \"\",\n    uom: \"\",\n    package: \"\",\n    qty: \"\",\n    list_price: \"\",\n    margin: \"\",\n    pur_rate: \"\",\n    reorder_level: \"\",\n    lp_ref: \"\",\n    di: \"\",\n    di_value: \"\",\n    ai: \"\",\n    ai_value: \"\",\n    fc: \"\",\n    fc_value: \"\",\n    do: \"\",\n    do_value: \"\",\n    ao: \"\",\n    ao_value: \"\",\n    fm: \"\",\n    fm_value: \"\",\n    edit: \"0\",\n    deactivate: \"0\",\n    serial: \"1\",\n    siemens_product: \"0\",\n    user_id: localStorage.getItem(\"userId\"),\n    user_name: \"\",\n  });\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleCheckChange = (key, value) => {\n    setFormData({ ...formData, [key]: value ? \"True\" : \"False\" });\n  };\n\n  const handleAutoChange = (key1, key2, value) => {\n    console.log(key1, key2, value);\n    setFormData({ ...formData, [key1]: value.id, [key2]: value.value });\n  };\n\n  const onNext = () => {\n    if (selectedTab === 0) {\n      setSelectedTab(1);\n    } else {\n      onSubmit();\n    }\n  };\n\n  const onSubmit = () => {\n    CommonController.commonApiCallFilter(\n      \"Product/ProductMasterInsert\",\n      formData\n    )\n      .then((data) => {\n        if (data.valid) {\n          showSuccessToast(\n            selectedIdResponse\n              ? \"Product updated successfully\"\n              : \"Product inserted successfully\"\n          );\n        } else {\n          showErrorToast(\"something went wrong\");\n        }\n      })\n      .catch((err) => showErrorToast(\"something went wrong\"));\n  };\n\n  const onBack = () => {\n    setSelectedTab(0);\n  };\n\n  useEffect(() => {\n    if (selectedIdResponse) {\n      CommonController.commonApiCallFilter(\"Product/PreviewProductMaster\", {\n        product_id: selectedIdResponse,\n      })\n        .then((data) => {\n          // setFormData(data);\n          let tempData = { ...formData };\n          for (let key in formData) {\n            if (data.hasOwnProperty(key)) {\n              tempData[key] = data[key];\n            }\n          }\n          setFormData(tempData);\n        })\n        .catch((err) => {\n          showErrorToast(err);\n        });\n    }\n  }, [selectedIdResponse]);\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      {/* {loading && <Loader />} */}\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedTab === 0 ? \"active\" : \"\")}\n            onChange={() => setSelectedTab(0)}\n          >\n            General Information\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedTab === 1 ? \"active\" : \"\")}\n            onChange={() => setSelectedTab(1)}\n          >\n            Technical Information\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content mt-10\">\n        {selectedTab === 0 && (\n          <GeneralProduct\n            formData={formData}\n            handleChange={handleChange}\n            handleAutoChange={handleAutoChange}\n            handleCheckChange={handleCheckChange}\n          />\n        )}\n        {selectedTab === 1 && (\n          <OtherInformation formData={formData} handleChange={handleChange} />\n        )}\n        <div className=\"w-100 text-right\">\n          {selectedTab === 1 && (\n            <Button\n              variant=\"contained\"\n              onClick={onBack}\n              className=\"mr-3\"\n              color=\"primary\"\n              disableElevation\n            >\n              Back\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            onClick={onNext}\n            color=\"primary\"\n            disableElevation\n          >\n            {selectedTab === 1 ? \"Submit\" : \"Next\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewProduct;\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const getProductListBrowse = createAction(\r\n    \"GET_PRODUCT_BROWSE_LIST\",\r\n    (params,filters) => ({\r\n        payload: {params,filters},\r\n    }),\r\n);\r\n\r\nexport const getProductListBrowseSuccess = createAction(\r\n    \"GET_PRODUCT_BROWSE_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const getCategoryList = createAction(\r\n    \"GET_CATEGORY_LIST\"\r\n);\r\n\r\nexport const getCategoryListSuccess = createAction(\r\n    \"GET_CATEGORY_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n\r\nexport const getLPRefList = createAction(\r\n    \"GET_LP_REF_LIST\"\r\n);\r\n\r\nexport const getLPRefListSuccess = createAction(\r\n    \"GET_LP_REF_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n\r\nexport const getGGNameList = createAction(\r\n    \"GET_GG_NAME_LIST\"\r\n);\r\n\r\nexport const getGGNameListSuccess = createAction(\r\n    \"GET_GG_NAME_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const updateProductVerifiedStatus = createAction(\r\n    \"UPDATE_PRODUCT_VERIFIED_STATUS\",\r\n    (param) => ({\r\n        payload: {param},\r\n    }),\r\n);\r\n\r\nexport const updateProductVerifiedStatusSuccess = createAction(\r\n    \"UPDATE_PRODUCT_VERIFIED_STATUS_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const updateProductListPrice = createAction(\r\n    \"UPDATE_PRODUCT_LIST_PRICE\",\r\n    (param) => ({\r\n        payload: {param},\r\n    }),\r\n);\r\n\r\nexport const updateProductLPRef = createAction(\r\n    \"UPDATE_PRODUCT_LP_REF\",\r\n    (param) => ({\r\n        payload: {param},\r\n    }),\r\n);\r\n\r\nexport const updateProductMovingNonMoving = createAction(\r\n    \"UPDATE_PRODUCT_MOVING_NON\",\r\n    (param) => ({\r\n        payload: {param},\r\n    }),\r\n);\r\n\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FormControl, InputLabel } from \"@material-ui/core\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ActionButtons from \"../../../components/action-buttons\";\r\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\r\nimport { selectedProductId } from \"../../../_redux/actions/masters/all.action\";\r\nimport {\r\n  getCategoryList,\r\n  getGGNameList,\r\n  getLPRefList,\r\n  getProductListBrowse,\r\n  updateProductListPrice,\r\n  updateProductLPRef,\r\n  updateProductMovingNonMoving,\r\n  updateProductVerifiedStatus,\r\n} from \"../../../_redux/actions/masters/product.action\";\r\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\r\nconst BrowseProductMaster = ({ onEdit }) => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsloading] = useState(false);\r\n  const stateLoading = useSelector((state) => state.ProductMaster.isLoading);\r\n  const getProductListResponse = useSelector(\r\n    (state) => state.ProductMaster.productList\r\n  );\r\n  const getCategoryListResponse = useSelector(\r\n    (state) => state.ProductMaster.categoryList\r\n  );\r\n  const getLpRefListResponse = useSelector(\r\n    (state) => state.ProductMaster.lpRefList\r\n  );\r\n  const getGGNameListResponse = useSelector(\r\n    (state) => state.ProductMaster.ggNameList\r\n  );\r\n  const [categoryList, setCategoryList] = useState([]);\r\n  const [lpRefList, setLpRefList] = useState([]);\r\n  const [ggNameList, setGGNameList] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [productList, setProductList] = useState([]);\r\n  const [tempVerifed, setTempVerified] = useState([]);\r\n\r\n  const [productMasterFilter, setProductMasterFilter] = useState({\r\n    user_id: localStorage.getItem(\"userId\"),\r\n    moving_non_moving: \"all\",\r\n    category: selectedCategory ? selectedCategory.value : \"\",\r\n    group: \"\",\r\n    gg_name: \"\",\r\n    item_name: \"\",\r\n    lp_ref: \"\",\r\n    status: \"\",\r\n    siemens_product: \"\",\r\n  });\r\n\r\n  const [params, setParams] = useState({\r\n    pageNo: 1,\r\n    pageSize: 10,\r\n    filter_value: \"\",\r\n    sort_column: \"\",\r\n    sort_order: \"\",\r\n  });\r\n\r\n  const handleFilters = (event) => {\r\n    setProductMasterFilter({\r\n      ...productMasterFilter,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleCategory = (event, value) => {\r\n    setSelectedCategory(value);\r\n    setProductMasterFilter({\r\n      ...productMasterFilter,\r\n      category: value ? value.value : \"\",\r\n    });\r\n  };\r\n\r\n  const handleParams = (event) => {\r\n    setTimeout(() => {\r\n      setParams({ ...params, [event.target.name]: event.target.value });\r\n    }, 800);\r\n  };\r\n\r\n  const handlePageSizeChange = (param) => {\r\n    setParams({ ...params, pageSize: param.pageSize });\r\n  };\r\n  const handlePageChange = (param) => {\r\n    console.log(param);\r\n    setParams({ ...params, pageNo: param.page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductListBrowse(params, productMasterFilter));\r\n    dispatch(getCategoryList());\r\n    dispatch(getLPRefList());\r\n    dispatch(getGGNameList());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductListBrowse(params, productMasterFilter));\r\n  }, [productMasterFilter, params]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getProductListResponse) {\r\n      setProductList(getProductListResponse.data);\r\n    }\r\n  }, [getProductListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getCategoryListResponse) {\r\n      setCategoryList(getCategoryListResponse);\r\n    }\r\n  }, [getCategoryListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getLpRefListResponse) {\r\n      setLpRefList(getLpRefListResponse);\r\n    }\r\n  }, [getLpRefListResponse, stateLoading]);\r\n\r\n  useEffect(() => {\r\n    setIsloading(stateLoading);\r\n    if (getGGNameListResponse) {\r\n      setGGNameList(getGGNameListResponse);\r\n    }\r\n  }, [getGGNameListResponse, stateLoading]);\r\n\r\n  const updateVerifiedStatus = (value, id) => {\r\n    var temp = [...tempVerifed];\r\n    var tempIndex = temp.indexOf(id);\r\n    const param = {\r\n      product_id: id,\r\n      edit: value ? \"1\" : \"0\",\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n\r\n    if (tempIndex > -1) {\r\n      temp.splice(tempIndex, 1);\r\n    } else {\r\n      if (value) {\r\n        temp.push(id);\r\n      }\r\n    }\r\n    dispatch(updateProductVerifiedStatus(param));\r\n    setTimeout(() => {\r\n      dispatch(getProductListBrowse(params, productMasterFilter));\r\n    }, 3000);\r\n  };\r\n\r\n  const updateListPriceValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      list_price: parseFloat(event.target.value.replace(\",\", \"\")).toFixed(2),\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductListPrice(params));\r\n  };\r\n\r\n  const updateProductLPRefValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      lp_ref: event.target.value,\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductLPRef(params));\r\n  };\r\n\r\n  const updateProductMovingNonValue = (param, event) => {\r\n    const params = {\r\n      product_id: param.row.product_id,\r\n      moving_non_moving: event.target.value,\r\n      user_id: localStorage.getItem(\"userId\"),\r\n    };\r\n    dispatch(updateProductMovingNonMoving(params));\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    dispatch(selectedProductId(id));\r\n    onEdit();\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\r\n      product_id: id,\r\n    }).then((data) => {\r\n      if (data.valid) {\r\n        showSuccessToast(\"Record Deleted Successfully\");\r\n        dispatch(getProductListBrowse(params, productMasterFilter));\r\n      } else {\r\n        showErrorToast(\"Something went wrong\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"filter_box mb-5\">\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"d-flex align-items-center mr-5\">\r\n            <h4 className=\"mb-0\">Filters</h4>\r\n          </div>\r\n          <div className=\"row w-100\">\r\n            <div className=\"col-md-2\">\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                className=\"mb-3\"\r\n                options={categoryList}\r\n                getOptionLabel={(option) => option.value}\r\n                fullWidth\r\n                onChange={handleCategory}\r\n                value={selectedCategory || null}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    size=\"small\"\r\n                    label=\"Category\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-1\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Group\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"group_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={\"\"}\r\n                  onChange={handleFilters}\r\n                  label=\"Group\"\r\n                >\r\n                  <MenuItem value=\"\">All</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Item Name\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"item_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={\"\"}\r\n                  label=\"Item Name\"\r\n                >\r\n                  <MenuItem value=\"\">All</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Lp. Ref.\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"lp_ref\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.lp_ref}\r\n                  onChange={handleFilters}\r\n                  label=\"Lp. Ref.\"\r\n                >\r\n                  <MenuItem value={\"\"}>None</MenuItem>\r\n                  {lpRefList.length > 0\r\n                    ? lpRefList.map((ref, index) => {\r\n                        return (\r\n                          <MenuItem key={\"ref\" + index} value={ref.value}>\r\n                            {ref.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  GG Name\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"gg_name\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.gg_name}\r\n                  onChange={handleFilters}\r\n                  label=\"GG Name\"\r\n                >\r\n                  <MenuItem value={\"\"}>None</MenuItem>\r\n                  {ggNameList.length > 0\r\n                    ? ggNameList.map((gg, index) => {\r\n                        return (\r\n                          <MenuItem key={\"ggName\" + index} value={gg.id}>\r\n                            {gg.value}\r\n                          </MenuItem>\r\n                        );\r\n                      })\r\n                    : null}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Siemens Product\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"siemens_product\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.siemens_product}\r\n                  onChange={handleFilters}\r\n                  label=\"Siemens Product\"\r\n                >\r\n                  <MenuItem value={\"\"}>All</MenuItem>\r\n                  <MenuItem value={\"Siemens\"}>Siemens </MenuItem>\r\n                  <MenuItem value={\"Non-Siemens\"}>Non-Siemens</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <FormControl fullWidth size=\"small\" variant=\"outlined\">\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Verified\r\n                </InputLabel>\r\n                <Select\r\n                  name=\"verified\"\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={productMasterFilter.verified}\r\n                  onChange={handleFilters}\r\n                  label=\"Verified\"\r\n                >\r\n                  <MenuItem value={\"\"}>All</MenuItem>\r\n                  <MenuItem value={\"1\"}>Verified</MenuItem>\r\n                  <MenuItem value={\"0\"}>Not Verified</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <TextField\r\n                fullWidth\r\n                id=\"outlined-basic\"\r\n                size=\"small\"\r\n                onKeyUp={handleParams}\r\n                name=\"filter_value\"\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-2 text-right\">\r\n              <Button color=\"primary\" disableElevation variant=\"contained\">\r\n                Export Excel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ height: 500, width: \"100%\" }}>\r\n        <DataGrid\r\n          pagination\r\n          disableColumnFilter\r\n          pageSize={params.pageSize}\r\n          page={params.pageNo}\r\n          rowsPerPageOptions={[15, 25, 50, 100]}\r\n          rowCount={getProductListResponse?.recordsFiltered}\r\n          paginationMode=\"server\"\r\n          onPageSizeChange={handlePageSizeChange}\r\n          onPageChange={handlePageChange}\r\n          loading={isLoading}\r\n          rowHeight={30}\r\n          initialState={{}}\r\n          components={{}}\r\n          onSortModelChange={(sort) => {\r\n            if (sort.length > 0) {\r\n              setParams({\r\n                ...params,\r\n                sort_column: sort[0].field,\r\n                sort_order: sort[0].sort,\r\n              });\r\n            }\r\n          }}\r\n          columns={[\r\n            {\r\n              field: \"id\",\r\n              headerName: \"ID\",\r\n              width: 70,\r\n            },\r\n            {\r\n              field: \"product_code\",\r\n              headerName: \"ERP Code\",\r\n              width: 180,\r\n            },\r\n            {\r\n              field: \"category_name\",\r\n              headerName: \"Category\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"group\",\r\n              headerName: \"Group\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"item_name\",\r\n              headerName: \"Item Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"description\",\r\n              headerName: \"Description\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"mlfb_no\",\r\n              headerName: \"MLFB No.\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"list_price\",\r\n              headerName: \"List Price\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  defaultValue={params.row.list_price}\r\n                  onBlur={(event) => updateListPriceValue(params, event)}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"grade\",\r\n              headerName: \"HSN\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"tax_rate\",\r\n              headerName: \"Tax Rate\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"lp_ref\",\r\n              headerName: \"L.P. Ref.\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  defaultValue={params.row.lp_ref}\r\n                  onBlur={(event) => updateProductLPRefValue(params, event)}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"gg_name\",\r\n              headerName: \"GG Name\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"siemens_product\",\r\n              headerName: \"Siemens Product\",\r\n              width: 200,\r\n            },\r\n            {\r\n              field: \"moving_non_moving\",\r\n              headerName: \"Moving\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <select\r\n                  className=\"form-control\"\r\n                  onChange={(event) =>\r\n                    updateProductMovingNonValue(params, event)\r\n                  }\r\n                  defaultValue={params.row.moving_non_moving}\r\n                >\r\n                  <option value=\"Old\">Old</option>\r\n                  <option value=\"New\">New</option>\r\n                  <option value=\"Panel\">Panel</option>\r\n                  <option value=\"Asset\">Asset</option>\r\n                </select>\r\n              ),\r\n            },\r\n            {\r\n              field: \"edit\",\r\n              headerName: \"Verified\",\r\n              width: 200,\r\n              renderCell: (params) => (\r\n                <FormControlLabel\r\n                  className={\"formControlLabel\"}\r\n                  control={\r\n                    <Checkbox\r\n                      defaultChecked={params.row.edit === \"True\"}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      onChange={(event) =>\r\n                        updateVerifiedStatus(\r\n                          event.target.checked,\r\n                          params.row.product_id\r\n                        )\r\n                      }\r\n                      inputProps={{\r\n                        \"aria-label\": \"checkbox with small size\",\r\n                      }}\r\n                    />\r\n                  }\r\n                  label={\r\n                    <span\r\n                      className={\r\n                        \"font_13 \" +\r\n                        (params.row.edit === \"True\" ||\r\n                        tempVerifed.indexOf(params.row.id) > -1\r\n                          ? \"text-success\"\r\n                          : \"text-danger\")\r\n                      }\r\n                    >\r\n                      {isLoading\r\n                        ? \"Updating\"\r\n                        : params.row.edit === \"True\" ||\r\n                          tempVerifed.indexOf(params.row.id) > -1\r\n                        ? \"Verified\"\r\n                        : \"Not Verified\"}\r\n                    </span>\r\n                  }\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              field: \"\",\r\n              headerName: \"Actions\",\r\n              renderCell: (params) => (\r\n                <ActionButtons\r\n                  onEdit={() => handleEdit(params.row.product_id)}\r\n                  onDelete={() => handleDeleteRow(params.row.product_id)}\r\n                />\r\n              ),\r\n              flex: 0.1,\r\n            },\r\n          ]}\r\n          rows={productList}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default BrowseProductMaster;\r\n","import React, { useState } from \"react\";\r\nimport AddNewProduct from \"./addProduct\";\r\nimport BrowseProductMaster from \"./browse\";\r\n\r\nconst ProductMasterIndex = () => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const handleIndex = (index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\r\n        <ul className=\"nav nav-tabs nav-tabs-line\">\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\r\n              onClick={() => handleIndex(0)}\r\n            >\r\n              Browse\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\r\n              onClick={() => handleIndex(1)}\r\n            >\r\n              New Product\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"tab-content\">\r\n          {selectedIndex === 0 ? (\r\n            <BrowseProductMaster onEdit={() => handleIndex(1)} />\r\n          ) : (\r\n            <AddNewProduct />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductMasterIndex;\r\n","import {\n  Checkbox,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { withStyles } from \"@material-ui/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\nconst UserRightList = () => {\n  const [menuList, setMenuList] = useState({first_menu:[],second_menu:[],third_menu:[]});\n  const [selectedMenu, setSelectedMenu] = useState({\n    first_menu:\"\",\n    second_menu:\"\",\n    third_menu:\"\"\n  });\n  const [userRightList, setUserRightList] = useState([]);\n  const [selectedUserRight, setSelectedUserRight] = useState([]);\n  const [filteredArray, setFilteredArray] = useState([]);\n  const getMenuList = (id,menu) => {\n    CommonController.commonApiCallFilter(\"user/transaction_menu_list\",{parent_id:id},\"post\",\"node\")\n      .then((data) => setMenuList({...menuList,[menu]:data.data}))\n      .catch((err) => {\n        showErrorToast(err);\n      });\n  };\n  const getUserRightList = (id) => {\n    CommonController.commonApiCallFilter(\n      \"user/get_transaction_right\",{transaction_id:id},\"post\",\"node\"\n    )\n      .then((data) => {\n        setUserRightList(data.data);\n        setFilteredArray(data.data);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n  };\n  const onSearch = (e) => {\n    console.log(e.target.value)\n    console.log(e.code)\n    if (e.code === \"Enter\") {\n      const items = userRightList.filter((x) => x.employee ===e.target.value);\n\n      if (items.length > 0) {\n        setFilteredArray(items);\n      }\n    }\n  };\n  useEffect(() => {\n    getMenuList(0,\"first_menu\");\n  }, []);\n  const handleFirstMenu = (event, value) => {\n    console.log(value)\n    setSelectedMenu({...selectedMenu,[event.target.id.split(\"-\")[0]]:value,third_menu:\"\",second_menu:\"\"});\n    if (value.transaction_id) {\n      getMenuList(value.transaction_id,\"second_menu\")\n    }\n  };\n  const handleSecondMenu = (event, value) => {\n    setSelectedMenu({...selectedMenu,[event.target.id.split(\"-\")[0]]:value,third_menu:\"\"});\n    if (value.transaction_id) {\n      getMenuList(value.transaction_id,\"third_menu\");\n    }\n  };\n  const handleThirdMenu = (event, value) => {\n    setSelectedMenu({...selectedMenu,[event.target.id.split(\"-\")[0]]:value});\n    if (value.transaction_id) {\n      getUserRightList(value.transaction_id);\n    }\n  };\n  const onUserRightChange = (obj, key, checked) => {\n    let selected = [...selectedUserRight];\n    let item = obj;\n    item[key] = checked ? true : false;\n    let filteredIndex = selectedUserRight.findIndex(\n      (x) => x.user_id === obj.user_id\n    );\n    if (filteredIndex > -1) {\n      selected[filteredIndex][key] = checked ? true : false;\n      setSelectedUserRight(selected);\n    } else {\n      setSelectedUserRight([...selectedUserRight, item]);\n    }\n  };\n  const onSave = () => {\n  const body={\n      user_id:localStorage.getItem(\"userId\"),\n      transaction_id:selectedMenu.third_menu.transaction_id,\n      transaction_name:selectedMenu.third_menu.transaction_name,\n      userRight:selectedUserRight\n    }\n    CommonController.commonApiCallFilter(\"user/update_user_right\",body,\"post\",\"node\")\n      .then((data) => {\n        if (data.status===200) {\n          showSuccessToast(\"User updated successfully\");\n        } else {\n          showErrorToast(\"something went wrong\");\n        }\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <div className=\"container-fluid p-4\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <Autocomplete\n              disablePortal\n              id=\"first_menu\"\n              options={menuList.first_menu}\n              getOptionLabel={(option) => option.transaction_name}\n              fullWidth\n              onChange={handleFirstMenu}\n              value={selectedMenu.first_menu}\n              size=\"small\"\n              renderInput={(params) => (\n                <TextField {...params} variant=\"outlined\" label=\"First Menu\" />\n              )}\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <Autocomplete\n              disablePortal\n              id=\"second_menu\"\n              options={menuList.second_menu}\n              getOptionLabel={(option) => option.transaction_name}\n              fullWidth\n              onChange={handleSecondMenu}\n              value={selectedMenu.second_menu}\n              size=\"small\"\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Second Menu\"\n                />\n              )}\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <Autocomplete\n              disablePortal\n              id=\"third_menu\"\n              options={menuList.third_menu}\n              getOptionLabel={(option) => option.transaction_name}\n              fullWidth\n              onChange={handleThirdMenu}\n              value={selectedMenu.third_menu}\n              size=\"small\"\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"outlined\"\n                  label=\"Third Menu\"\n                />\n              )}\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              label=\"Search\"\n              onKeyDown={onSearch}\n            />\n          </div>\n        </div>\n        <Paper style={{ width: \"100%\", overflow: \"hidden\" }}>\n          <TableContainer className=\"mt-4\" style={{ maxHeight: 440 }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Transaction</StyledTableCell>\n                  <StyledTableCell>View</StyledTableCell>\n                  <StyledTableCell>New</StyledTableCell>\n                  <StyledTableCell>Edit</StyledTableCell>\n                  <StyledTableCell>Delete</StyledTableCell>\n                  <StyledTableCell>Print</StyledTableCell>\n                  <StyledTableCell>Approve</StyledTableCell>\n                  {/* <StyledTableCell>Revise</StyledTableCell>\n                  <StyledTableCell>Allocation</StyledTableCell>\n                  <StyledTableCell>High Priority</StyledTableCell> */}\n                  <StyledTableCell>Special Column</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {filteredArray.map((menu, index) => {\n                  return (\n                    <TableRow\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                      key={index}\n                    >\n                      <TableCell>{menu.employee}</TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"view_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.view_right ==true}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"insert_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.insert_right ===true}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"edit_button\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.edit_button ===true}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"delete_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.delete_right ===true}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"print_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.print_right ===true}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"approve_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.approve_right ===true}\n                        />\n                      </TableCell>\n                      {/* <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"revise_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.revise_right == \"True\"}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"allocation_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.allocation_right == \"True\"}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"high_priority_right\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.high_priority_right == \"True\"}\n                        />\n                      </TableCell> */}\n                      <TableCell>\n                        <Checkbox\n                          onChange={(event) =>\n                            onUserRightChange(\n                              menu,\n                              \"special_column\",\n                              event.target.checked\n                            )\n                          }\n                          color=\"primary\"\n                          checked={menu.special_column ===true}\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n        <div className=\"w-100 mt-3 text-right\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onSave}\n            disableElevation\n          >\n            Update\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserRightList;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch, useParams } from \"react-router-dom\";\r\nimport AccountsMaster from \"../pages/Master/Accounts_Master/index\";\r\nimport ComboMLFBIndex from \"../pages/Master/combomlfb\";\r\nimport ConfigurationMaster from \"../pages/Master/Configuration\";\r\nimport EmployeeIndex from \"../pages/Master/employee\";\r\nimport GodownIndex from \"../pages/Master/godown\";\r\nimport ItemGroupIndex from \"../pages/Master/item Group\";\r\nimport MaterialCodeIndex from \"../pages/Master/Material Code\";\r\nimport ProductMasterIndex from \"../pages/Master/Product\";\r\nimport UserRightList from \"../pages/Master/user rights/browse\";\r\nimport { getAccountMasterFiltersList } from \"../_redux/actions/masters/account.action\";\r\nconst Masters = () => {\r\n  const dispatch=useDispatch()\r\n  useEffect(()=>{\r\n    dispatch(getAccountMasterFiltersList());\r\n  },[])\r\n  const [menuList, setmenuList] = useState({\r\n    firstMenu: [],\r\n    secondMenu: [],\r\n    thirdMenu: [],\r\n  });\r\n  const selectedSubMenu = window.location.pathname\r\n    .split(\"/\")\r\n    .filter((val) => val !== \"\")[2];\r\n  const menuLength = window.location.pathname.split(\"/\").length;\r\n  console.log(menuLength)\r\n  // const firstMenu = useSelector((state) => state.common.userRightList);\r\n  // const secondMenu = useSelector((state) => state.common.userRightListSecond);\r\n  // const thirdMenu = useSelector((state) => state.common.userRightListThird);\r\n  // useEffect(() => {\r\n  //   setmenuList({\r\n  //     firstMenu: firstMenu.data,\r\n  //     secondMenu: secondMenu.data,\r\n  //     thirdMenu: thirdMenu.data,\r\n  //   });\r\n  // }, [firstMenu, secondMenu, thirdMenu]);\r\n\r\n  // const [data]=firstMenu.data.map((val)=>{return `${val.display_name.toLowerCase()}/${btoa(val.transaction_id)}`})\r\n  // console.log(data)\r\n  // console.log(...firstMenu.data.map((val)=>{return `${val.transaction_name.toLowerCase()}/${btoa(val.transaction_id)}`})+\"/\")\r\n  // console.log(...secondMenu.data.map((val)=>{return `${val.transaction_name.toLowerCase()}/${btoa(val.transaction_id)}`}))\r\n  // console.log(thirdMenu.data.map((val)=>{return `${val.transaction_name.toLowerCase()}/${btoa(val.transaction_id)}`}))\r\n  // console.log(atob(\"OQ==\"))\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* {thirdMenu.status===200&& */}\r\n      <Switch>\r\n        <Route path=\"/masters/1/account-master/9/customer/15\" strict>\r\n          <AccountsMaster accountType=\"Customer\" browse_id={1}/>\r\n        </Route>\r\n        <Route path=\"/masters/1/account-master/9/supplier/16\" strict>\r\n          {\" \"}\r\n          <AccountsMaster accountType=\"Supplier\"browse_id={2} />\r\n        </Route>\r\n        <Route\r\n          path=\"/masters/1/configuration-master/12\"\r\n          exact\r\n          component={ConfigurationMaster}\r\n        />\r\n        <Route\r\n          path=\"/masters/1/product-master/10/sl/17\"\r\n          exact\r\n          component={ProductMasterIndex}\r\n        />\r\n        <Route\r\n          path=\"/masters/1/product-master/10/non-sl/18\"\r\n          exact\r\n          component={ProductMasterIndex}\r\n        />\r\n        <Route\r\n          path=\"/masters/1/material-code/13/customer/19\"\r\n          exact\r\n          component={MaterialCodeIndex}\r\n        />\r\n        <Route\r\n          path=\"/masters/1/material-code/13/supplier/20\"\r\n          exact\r\n          component={MaterialCodeIndex}\r\n        />\r\n        <Route\r\n          path=\"/masters/item-group-master\"\r\n          exact\r\n          component={ItemGroupIndex}\r\n        />\r\n        <Route path=\"/masters/combined-mlfb\" exact component={ComboMLFBIndex} />\r\n\r\n        <Route path=\"/masters/godown-master\" exact component={GodownIndex} />\r\n        <Route path=\"/masters/1/user-right/14\" exact component={UserRightList} />\r\n        <Route\r\n          path=\"/masters/1/employee-master/11/employee/21\"\r\n          exact\r\n          component={EmployeeIndex}\r\n        />\r\n        <Route\r\n          path=\"/masters/1/employee-master/11/user-rights/22\"\r\n          exact\r\n          component={UserRightList}\r\n        />\r\n        {/* {(menuLength<=3||selectedSubMenu===\"account-master\")&&<Redirect to=\"/masters/1/account-master/9/customer/15\" from=\"/masters\" />}  */}\r\n        {(selectedSubMenu===\"account-master\")&&<Redirect to=\"/masters/1/account-master/9/customer/15\" from=\"/masters\" />} \r\n       {selectedSubMenu===\"product-master\"&&<Redirect to=\"/masters/1/product-master/10/sl/17\" from=\"/masters\" />} \r\n       {selectedSubMenu===\"employee-master\"&&<Redirect to=\"/masters/1/employee-master/11/employee/21\" from=\"/masters\" />} \r\n       {selectedSubMenu===\"configuration-master\"&&<Redirect to=\"/masters/1/configuration-master/12\" from=\"/masters\" />} \r\n       {selectedSubMenu===\"material-code\"&&<Redirect to=\"/masters/1/material-code/13/customer/19\" from=\"/masters\" />} \r\n       {selectedSubMenu===\"user-right\"&&<Redirect to=\"/masters/1/user-right/14\" from=\"/masters\" />} \r\n      </Switch>\r\n      {/* } */}\r\n    </div>\r\n  );\r\n};\r\nexport default Masters;\r\n","import { DatePicker } from \"@material-ui/pickers\";\nimport { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst AttendanceBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    from_date: new Date().setDate(new Date().getDate() - 1),\n    to_date: new Date(),\n    emp_id: \"1\",\n  });\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      let body = { ...bodyParam };\n      body.from_date = moment(bodyParam.from_date).format(\"DD-MM-yyyy\");\n      body.to_date = moment(bodyParam.to_date).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\n        \"Attandance/EmpAttandanceBrowse\",\n        params,\n        body,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam, [name]: date });\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"Date\"\n                value={bodyParam.from_date}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"from_date\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"Date\"\n                value={bodyParam.to_date}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"to_date\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                size=\"small\"\n                onKeyUp={handleParams}\n                name=\"filter_value\"\n                label=\"Search\"\n                variant=\"outlined\"\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"srno\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"emp_code\",\n                headerName: \"Emp Code\",\n                flex: 0.1,\n              },\n              {\n                field: \"emp_name\",\n                headerName: \"Emp Name\",\n                flex: 0.1,\n              },\n              {\n                field: \"in_time\",\n                headerName: \"In Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"out_time\",\n                headerName: \"Out Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"m_in_time\",\n                headerName: \"Req. In Time\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"m_out_time\",\n                headerName: \"Req. Out Time\",\n                flex: 0.1,\n              },\n              {\n                field: \"remarks\",\n                headerName: \"Remarks\",\n                flex: 0.1,\n              },\n            ]}\n            pagination\n            getRowId={(row) => row.srno}\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={browseListData}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AttendanceBrowse;\n","import { Button, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../components/common\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\n\nconst ChangePassword = () => {\n  const [formData, setFormData] = useState({\n    oldpass: \"\",\n    newpass: \"\",\n    confpass: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n    errors: {},\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const validateForm = () => {\n    let errors = { ...formData.errors };\n    if (formData.oldpass == \"\") {\n      errors.oldpass = \"Please enter old password\";\n    } else {\n      delete errors.oldpass;\n    }\n    if (formData.newpass == \"\") {\n      errors.newpass = \"Please enter new password\";\n    } else {\n      delete errors.newpass;\n    }\n    if (formData.confpass == \"\") {\n      errors.confpass = \"Please enter confirm password\";\n    } else {\n      delete errors.confpass;\n    }\n    console.log(errors);\n    setFormData({ ...formData, errors: errors });\n    return Object.keys(errors).length !== 0;\n  };\n\n  const onSubmit = async () => {\n    try {\n      setLoading(true);\n      if (!validateForm()) {\n        await CommonController.commonApiCallFilter(\n          \"Profile/UpdateEmployeePassword\",\n          formData,\n          \"post\"\n        ).then((data) => {\n          if (data.valid) {\n            showSuccessToast(\"Password changed successfully \");\n          } else {\n            showErrorToast(data.msg);\n          }\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  return (\n    <div className=\"card shadow\">\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              value={formData.oldpass}\n              name=\"oldpass\"\n              type=\"password\"\n              label=\"Old Password\"\n              onChange={handleChange}\n            />\n            {formData.errors && (\n              <p className=\"mb-0 text-danger\">{formData.errors.oldpass}</p>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              name=\"newpass\"\n              type=\"password\"\n              value={formData.newpass}\n              label=\"New Password\"\n              onChange={handleChange}\n            />\n            {formData.errors && (\n              <p className=\"mb-0 text-danger\">{formData.errors.newpass}</p>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <TextField\n              variant=\"outlined\"\n              fullWidth\n              size=\"small\"\n              name=\"confpass\"\n              value={formData.confpass}\n              label=\"Conf. Password\"\n              onChange={handleChange}\n            />\n            {formData.errors && (\n              <p className=\"mb-0 text-danger\">{formData.errors.confpass}</p>\n            )}\n          </div>\n          <div className=\"col-md-12 mt-5\">\n            <Button\n              disable={loading}\n              variant=\"contained\"\n              onClick={onSubmit}\n              disableElevation\n              color=\"primary\"\n            >\n              {loading ? \"Processing...\" : \"Update Password\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangePassword;\n","import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\n\nconst Profile = () => {\n  return (\n    <div className=\"container-fluid \">\n      <div className=\"card shadow\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                disabled\n                name=\"p\"\n                label=\"Employee ID\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Employee Code\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Card No.\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"First Name\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Last Name\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Father/Husband Name\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Mother Name\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Martial Status\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Gender\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Date of Birth\"\n              />\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Present Address\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-6\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Phone No.\"\n              />\n            </div>\n            <div className=\"col-md-3 mb-6\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Mobile No.\"\n              />\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Permanent Address\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Phone No.\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                label=\"Mobile No.\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport AttendanceBrowse from \"../pages/Profile/attendance\";\nimport ChangePassword from \"../pages/Profile/changePassword\";\nimport Profile from \"../pages/Profile/profile\";\n\nconst ProfileLayout = () => {\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n        <Route exact path=\"/profile/profile\" component={Profile} />\n        <Route\n          exact\n          path=\"/profile/change-password\"\n          component={ChangePassword}\n        />\n        <Route exact path=\"/profile/attendance\" component={AttendanceBrowse} />\n\n        <Redirect from=\"/profile\" to=\"/profile/profile\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default ProfileLayout;\n","import {\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\nconst SalesIssueBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesIssueBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesIssueBrowse from \"./browse\";\n\n\nconst SalesIssueIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n            >\n            New Marketing Visit\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesIssueBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesIssueIndex;\n","import {\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesMarketingBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesMarketingBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesMarketingBrowse from \"./browse\";\n\nconst SalesMarketingIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n\n            New Marketing Visit\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesMarketingBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesMarketingIndex;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesQuotationBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesQuotationBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesQuotationBrowse from \"./browse\";\n\n\n\nconst SalesQuotationIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Quotation\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesQuotationBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesQuotationIndex;\n","import { TextField, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport DateFilter from \"../../../components/dateFilter\";\nconst SalesCostingBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: \"\",\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Costing/SalesCostingBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n          \n         \n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}       \n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n            },\n            {\n              field: \"riv\",\n              headerName: \"Costing No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"status_name\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesCostingBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesCostingBrowse from \"./browse\";\n\nconst SalesCostingIndex = () => {\n  const [selectedIndex, setSeletedIndex] = useState(0);\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Costing\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesCostingBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesCostingIndex;\n","import {\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DateFilter from \"../../../components/dateFilter\";\nconst SalesEnquiryBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  // const handleDateChange = (type, date) => {\n  //   setBodyParam({ ...bodyParam, [type]: date });\n  // };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n          \n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesEnquiryBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport SalesEnquiryBrowse from \"./browse\";\n\nconst SalesIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Sales Enquiry\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesEnquiryBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesIndex;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../../components/common\";\nimport CustomPagination from \"../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\nimport { Loader } from \"../../../../components/loader\";\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesSiDiBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesSiDiBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesSiDiBrowse from \"./browse\";\n\nimport SalesEnquiryBrowse from \"./browse\";\n\nconst SalesSiDiIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New SL DI\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesSiDiBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesSiDiIndex;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../../components/common\";\nimport CustomPagination from \"../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\nimport { Loader } from \"../../../../components/loader\";\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesSlSoPosBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                      \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                      \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesSlSoPosBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesSlSoPosBrowse from \"./browse\";\n\nimport SalesEnquiryBrowse from \"./browse\";\n\nconst SalesSlSoPosIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New SO POS\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesSlSoPosBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesSlSoPosIndex;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../../components/common\";\nimport CustomPagination from \"../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\nimport { Loader } from \"../../../../components/loader\";\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesSlSoPosSummariseBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesSlSoPosSummariseBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesSlSoPosSummariseBrowse from \"./browse\";\n\nimport SalesEnquiryBrowse from \"./browse\";\n\nconst SalesSlSoPosSummariseIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New SO POS Summarize\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesSlSoPosSummariseBrowse/>\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesSlSoPosSummariseIndex;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../../components/common\";\nimport CustomPagination from \"../../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../../components/customRowComponent\";\nimport { Loader } from \"../../../../components/loader\";\nimport { CommonController } from \"../../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SoDetailBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SoDetailBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SoDetailBrowse from \"./browse\";\n\nconst SoDetail = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New So Detail\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SoDetailBrowse />\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SoDetail;\n","import {\n  Checkbox,\n  TextField,\n  Button,\n  MenuItem,\n  List,\n  Avatar,\n  ListItemAvatar,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  getBrowseUserRight,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ActionButtons from \"../../../components/action-buttons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedEmployeeId } from \"../../../_redux/actions/masters/all.action\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst label = { inputProps: { \"aria-label\": \"Checkbox\" } };\nconst SalesSoAmdBrowse = ({ onEdit }) => {\n  const dispatch = useDispatch();\n\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [markEng, setMarkEng] = useState(null);\n  const [remarks, setRemarks] = useState({\n    status_id: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 15,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"desc\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    user_id: localStorage.getItem(\"userId\"),\n    chk_All: \"1\",\n    company_name: \"\",\n    type: \"all\",\n    status: \"all\",\n    mark_engg: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const toggleRemarks = () => {\n    setRemarksModal(!remarksModal);\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    await CommonController.commonApiCall(\n      \"Sales/SalesEnquiryBrowse\",\n      params,\n      bodyParam\n    )\n      .then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, tran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Sales/CloseSalesEnquiry\",\n      {\n        enquiry_id: id,\n      },\n      \"get\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  const getMarkEngList = () => {\n    CommonController.commonApiCallFilter(\"Dropdown/SalesEnquiryDropdown\").then(\n      (data) => setMarkEng(data.employeeList)\n    );\n  };\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param.pageSize });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param.page });\n  };\n\n  const handleDateChange = (type, date) => {\n    setBodyParam({ ...bodyParam, [type]: date });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n    getMarkEngList();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, getuserRightListResponse, bodyParam]);\n\n  const handleEdit = (id) => {\n    dispatch(selectedEmployeeId(id));\n    onEdit();\n  };\n\n  const handleDeleteRow = (id) => {\n    CommonController.commonApiCallFilter(\"Employee/EmployeeMasterDelete\", {\n      employee_id: id,\n    }).then((data) => {\n      if (data.valid) {\n        showSuccessToast(\"Record Deleted Successfully\");\n        getBrowseListData();\n      } else {\n        showErrorToast(\"Something went wrong\");\n      }\n    });\n  };\n\n  const saveRemarks = () => {\n    setLoading(true);\n    try {\n      CommonController.commonApiCallFilter(\n        \"Sales/UpdateSalesEnquiryRemarks\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleParams(e);\n                }\n              }}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"From Date\"\n              value={bodyParam.fromDate}\n              format=\"dd/MM/yyyy\"\n              onChange={(date) => handleDateChange(\"fromDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <DatePicker\n              label=\"To Date\"\n              value={bodyParam.toDate}\n              onChange={(date) => handleDateChange(\"toDate\", date)}\n              animateYearScrolling\n              inputVariant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  handleBodyParam(e);\n                }\n              }}\n              name=\"party_name\"\n              label=\"Company Name\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"type\"\n              select\n              label=\"Type\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Spares</MenuItem>\n              <MenuItem value={\"projects\"}>Projects</MenuItem>\n              <MenuItem value={\"service\"}>Service</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-1\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"status\"\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"spares\"}>Close</MenuItem>\n              <MenuItem value={\"spares\"}>Open</MenuItem>\n            </TextField>\n          </div>\n          <div className=\"col-md-2 mt-3\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              select\n              name=\"mark_engg\"\n              label=\"Marketing Eng.\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {markEng &&\n                markEng.map((eng, indx) => {\n                  return (\n                    <MenuItem value={eng.value} key={indx}>\n                      {eng.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n        </div>\n      </div>\n      {/* Update remarks modal */}\n\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status_id\"\n            onChange={onRemarkChange}\n            label=\"Enquiry Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"remarks\"\n            onChange={onRemarkChange}\n            label=\"Remarks*\"\n            fullWidth\n          />\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar>\n                        <ImageIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.user_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.remarks}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks == \"\" || remarks.status_id == \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              width: 80,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n              renderCell: (params) => {\n                return moment(params.row.date).format(\"DD/MM/yyyy\");\n              },\n            },\n            {\n              field: \"enquiry_no\",\n              headerName: \"Enquiry No\",\n              width: 120,\n            },\n            {\n              field: \"company_id\",\n              headerName: \"Comp Id\",\n              width: 100,\n            },\n            {\n              field: \"company_name\",\n              headerName: \"Company Name\",\n              width: 200,\n            },\n            {\n              field: \"description\",\n              headerName: \"Description\",\n              width: 200,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 100,\n            },\n            {\n              field: \"priority_name\",\n              headerName: \"Priority Name\",\n              width: 100,\n            },\n            {\n              field: \"reference_name\",\n              headerName: \"Reference\",\n              width: 120,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"employee_name\",\n              headerName: \"Employee Name\",\n              width: 150,\n            },\n            {\n              field: \"mark_engg\",\n              headerName: \"Marketing Eng.\",\n              width: 150,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 150,\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        {param.row.remarks}\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n            },\n\n            {\n              field: \"\",\n              headerName: \"Actions\",\n              renderCell: (params) => (\n                <ActionButtons\n                  onPreview={\n                    getBrowseUserRight(getuserRightListResponse)?.view_right ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onEdit={\n                    getBrowseUserRight(getuserRightListResponse)?.edit_button ==\n                    \"True\"\n                      ? () => handleEdit(params.row.id)\n                      : null\n                  }\n                  onDelete={\n                    getBrowseUserRight(getuserRightListResponse)\n                      ?.delete_right == \"True\"\n                      ? () => handleDeleteRow(params.row.id)\n                      : null\n                  }\n                />\n              ),\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          //components={{\n          //Pagination: CustomPagination,\n          //NoRowsOverlay: CustomNoRowsOverlay,\n          //       }}\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SalesSoAmdBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SalesSoAmdBrowse from \"./browse\";\n\nconst SalesSoAmdIndex = () => {\n  const dispatch = useDispatch();\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New SO Amendment\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SalesSoAmdBrowse/>\n        ) : (\n          <h2>Sales Enquiry Form</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SalesSoAmdIndex;\n","import React from \"react\";\r\nimport { BrowserRouter, Redirect, Switch, Route } from \"react-router-dom\";\r\nimport SalesIssueIndex from \"../pages/Sales/issues\";\r\nimport SalesMarketingIndex from \"../pages/Sales/marketingVisit\";\r\nimport SalesQuotationIndex from \"../pages/Sales/quotation\";\r\nimport SalesCostingIndex from \"../pages/Sales/Sales Costing\";\r\nimport SalesIndex from \"../pages/Sales/Sales Enquiry\";\r\nimport SalesSiDiIndex from \"../pages/Sales/salesOrder/slDI\";\r\nimport SalesSlSoPosIndex from \"../pages/Sales/salesOrder/slSoPos\";\r\nimport SalesSlSoPosSummariseIndex from \"../pages/Sales/salesOrder/slSoPosSummarise\";\r\nimport SoDetail from \"../pages/Sales/salesOrder/soDetail\";\r\nimport SalesSoAmdIndex from \"../pages/Sales/soAmedment\";\r\n\r\nconst Sales = () => {\r\n  const selectedSubMenu = window.location.pathname.split(\"/\")[2];\r\n  const menuLength=window.location.pathname.split('/').length;\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Switch>\r\n        <Route exact path=\"/sales/enquiry\" component={SalesIndex} />\r\n        <Route exact path=\"/sales/costing\" component={SalesCostingIndex} />\r\n        <Route exact path=\"/sales/quotation\" component={SalesQuotationIndex} />\r\n        <Route exact path=\"/sales/sales-order-amendment\" component={SalesSoAmdIndex} />\r\n        <Route exact path=\"/sales/marketing-visit\" component={SalesMarketingIndex} />\r\n        <Route exact path=\"/sales/issues\" component={SalesIssueIndex} />\r\n        <Route exact path=\"/sales/sales-order/so-details\" component={SoDetail} />\r\n        <Route exact path=\"/sales/sales-order/sl-so-pos\" component={SalesSlSoPosIndex} />\r\n        <Route exact path=\"/sales/sales-order/non-sl-so-pos\" component={SalesSlSoPosIndex} />\r\n        <Route exact path=\"/sales/sales-order/so-pos-summarize\" component={SalesSlSoPosSummariseIndex} />\r\n        <Route exact path=\"/sales/sales-order/sl-di\" component={SalesSiDiIndex} />\r\n        <Route exact path=\"/sales/sales-order/non-sl-di\" component={SalesSiDiIndex} />\r\n       \r\n       {(menuLength<=2||selectedSubMenu===\"enquiry\")&& <Redirect from=\"/sales\" to=\"/sales/enquiry\" />}\r\n       {(selectedSubMenu===\"costing\")&& <Redirect from=\"/sales\" to=\"/sales/costing\" />}\r\n       {(selectedSubMenu===\"quotation\")&& <Redirect from=\"/sales\" to=\"/sales/quotation\" />}\r\n       {(selectedSubMenu===\"sales-order-amendment\")&& <Redirect from=\"/sales\" to=\"/sales/sales-order-amendment\" />}\r\n       {(selectedSubMenu===\"marketing-visit\")&& <Redirect from=\"/sales\" to=\"/sales/marketing-visit\" />}\r\n       {(selectedSubMenu===\"issues\")&& <Redirect from=\"/sales\" to=\"/sales/issues\" />}\r\n       {(selectedSubMenu===\"sales-order\")&& <Redirect from=\"/sales\" to=\"/sales/sales-order/so-details\" />}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import { DatePicker } from \"@material-ui/pickers\";\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst ItemLedgerBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    sdate: new Date(new Date().getTime() - 24 * 60 * 60 * 1000),\n    edate: new Date(),\n    product_id: \"\",\n  });\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const getProductList = async () => {\n    await CommonController.commonApiCallFilter(\n      \"Dropdown/GetProductMlfb\",\n      {}\n    ).then((data) => setMLFBList(data));\n  };\n\n  const handleDateChange = (name, date) => {\n    setBodyParam({ ...bodyParam, [name]: date });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getProductList();\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam, [name]: value });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      let body = { ...bodyParam };\n      body.sdate = moment(bodyParam.sdate).format(\"DD-MM-yyyy\");\n      body.edate = moment(bodyParam.edate).format(\"DD-MM-yyyy\");\n      await CommonController.commonApiCall(\n        \"Stock/NewDailyLedgerReportInStock\",\n        params,\n        body,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"From Date\"\n                value={bodyParam.sdate}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"sdate\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"To Date\"\n                value={bodyParam.edate}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(\"edate\", date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                minDate={bodyParam.sdate}\n                fullWidth\n              />\n            </div>\n\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo2\"\n                options={mlfbList}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue}\n                onChange={(event, value) => {\n                  handleAutoChange(\"product_id\", value ? value.id : null);\n                  setSelectedValue(value);\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"MLFB No.\"\n                  />\n                )}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"id\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"entry_type\",\n                headerName: \"Entry Type\",\n                flex: 0.1,\n              },\n              {\n                field: \"comp_id\",\n                headerName: \"Comp Id\",\n                flex: 0.1,\n              },\n              {\n                field: \"tran_no\",\n                headerName: \"Tran No\",\n                flex: 0.1,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"party\",\n                headerName: \"Party\",\n                flex: 0.1,\n              },\n              {\n                field: \"in_qty\",\n                headerName: \"In Qty\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"out_qty\",\n                headerName: \"Out Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n              {\n                field: \"balance\",\n                headerName: \"Balance\",\n                flex: 0.1,\n                align: \"right\",\n              },\n            ]}\n            pagination\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={browseListData}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ItemLedgerBrowse;\n","import { TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\n\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst SerialLedgerBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    product_id: \"\",\n    serial_no: \"\",\n    category_id: \"\",\n  });\n  const [categoryList, setCategoryList] = useState([]);\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState({\n    category: \"\",\n    mlfb: \"\",\n  });\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n  const getMLFBList = async (id) => {\n    await CommonController.commonApiCallFilter(\n      `Dropdown/GetMlfbListInStock`,\n      {\n        category_id: id,\n      },\n      \"get\"\n    ).then((data) => setMLFBList(data));\n  };\n\n  const getCategoryList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(\n      (data) => setCategoryList(data)\n    );\n  };\n\n  useEffect(() => {\n    getCategoryList();\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [bodyParam]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam, [name]: value });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"Stock/ProductLedgerSerialNoReport\",\n        params,\n        bodyParam,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={categoryList}\n                onChange={(event, value) => {\n                  setSelectedValue({ ...selectedValue, category: value });\n                  handleAutoChange(\"category_id\", value ? value.id : null);\n                  if (value) {\n                    getMLFBList(value.id);\n                  }\n                }}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.category}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Category\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo2\"\n                options={mlfbList}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.mlfb}\n                onChange={(event, value) => {\n                  handleAutoChange(\"product_id\", value ? value.id : null);\n                  setSelectedValue({ ...selectedValue, mlfb: value });\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"MLFB No.\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2\">\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                name=\"serial_no\"\n                label=\"Serial No\"\n                onChange={(e) =>\n                  setBodyParam({ ...bodyParam, serial_no: e.target.value })\n                }\n                value={bodyParam.serial_no}\n              />\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"id\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"entry_type\",\n                headerName: \"Entry Type\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"tran_no\",\n                headerName: \"Tran No\",\n                flex: 0.1,\n              },\n              {\n                field: \"date\",\n                headerName: \"Date\",\n                flex: 0.1,\n              },\n              {\n                field: \"party\",\n                headerName: \"Party\",\n                flex: 0.1,\n              },\n              {\n                field: \"mlfb_no\",\n                headerName: \"In Qty\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"serial_no\",\n                headerName: \"Out Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n            ]}\n            pagination\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={[]}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SerialLedgerBrowse;\n","import { DatePicker } from \"@material-ui/pickers\";\nimport { Button, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { FormControlLabel, FormGroup, Checkbox } from \"@mui/material\";\nimport { CommonController } from \"../../_redux/controller/common.controller\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport CustomPagination from \"../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../components/customRowComponent\";\nimport { showErrorToast } from \"../../components/common\";\nimport moment from \"moment\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\n\nconst StockBrowse = () => {\n  const [bodyParam, setBodyParam] = useState({\n    date: new Date(),\n    zero: false,\n    category_id: \"\",\n    product_id: \"\",\n    siemens_product: \"\",\n  });\n\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n\n  const [categoryList, setCategoryList] = useState([]);\n  const [mlfbList, setMLFBList] = useState([]);\n  const [selectedValue, setSelectedValue] = useState({\n    category: \"\",\n    mlfb: \"\",\n  });\n\n  const handleChange = (e) => {\n    if (e.target.name === \"zero\") {\n      setBodyParam({ ...bodyParam, [e.target.name]: e.target.checked });\n    } else {\n      setBodyParam({ ...bodyParam, [e.target.name]: e.target.value });\n    }\n  };\n\n  const handleDateChange = (date) => {\n    setBodyParam({ ...bodyParam, date: date });\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getMLFBList = async (id) => {\n    await CommonController.commonApiCallFilter(\n      `Dropdown/GetMlfbListInStock`,\n      {\n        category_id: id,\n      },\n      \"get\"\n    ).then((data) => setMLFBList(data));\n  };\n\n  const getCategoryList = async () => {\n    await CommonController.commonApiCallFilter(\"Dropdown/GetCategoryList\").then(\n      (data) => setCategoryList(data)\n    );\n  };\n\n  useEffect(() => {\n    getCategoryList();\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params]);\n\n  const handleAutoChange = (name, value) => {\n    setBodyParam({ ...bodyParam, [name]: value });\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      let body = { ...bodyParam };\n      body.date = moment(bodyParam.date).format(\"DD-MM-yyyy\");\n      body.zero = bodyParam.zero ? \"0\" : \"\";\n      await CommonController.commonApiCall(\n        \"Stock/NewDailyStockReportInStock\",\n        params,\n        body,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"card card-custom gutter-b  px-7 py-3\">\n        <div className=\"filter_box mb-5\">\n          <div className=\"row\">\n            <div className=\"col-md-1 d-flex align-items-center\">\n              <h4 className=\"mb-0\">Filters</h4>\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <DatePicker\n                label=\"Date\"\n                value={bodyParam.date}\n                format=\"dd/MM/yyyy\"\n                onChange={(date) => handleDateChange(date)}\n                animateYearScrolling\n                inputVariant=\"outlined\"\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo\"\n                options={categoryList}\n                onChange={(event, value) => {\n                  setSelectedValue({ ...selectedValue, category: value });\n                  handleAutoChange(\"category_id\", value ? value.id : null);\n                  if (value) {\n                    getMLFBList(value.id);\n                  }\n                }}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.category}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Category\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <Autocomplete\n                disablePortal\n                id=\"combo-box-demo2\"\n                options={mlfbList}\n                fullWidth\n                getOptionLabel={(option) => option.value}\n                value={selectedValue.mlfb}\n                onChange={(event, value) => {\n                  handleAutoChange(\"product_id\", value ? value.id : null);\n                  setSelectedValue({ ...selectedValue, mlfb: value });\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"MLFB No.\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"col-md-2 mb-5 mb-md-0\">\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                size=\"small\"\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n                name=\"siemens_product\"\n                select\n                label=\"Siemen Product\"\n                variant=\"outlined\"\n              >\n                <MenuItem value={\"siemens\"}>Siemens</MenuItem>\n                <MenuItem value={\"non-siemens\"}>Non-Siemens</MenuItem>\n              </TextField>\n            </div>\n            <div className=\"col-md-1 mb-5 mb-md-0\">\n              <FormGroup>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label=\"Zero\"\n                  name=\"zero\"\n                  checked={bodyParam.zero}\n                  onChange={handleChange}\n                />\n              </FormGroup>\n            </div>\n            <div className=\"col-md-2\">\n              <TextField\n                variant=\"outlined\"\n                size=\"small\"\n                name=\"filter_value\"\n                label=\"Search\"\n                onChange={handleParams}\n                value={params.filter_value}\n              />\n            </div>\n            <div className=\"col-md-12 text-right\">\n              <Button\n                variant=\"contained\"\n                onClick={getBrowseListData}\n                disableElevation\n              >\n                Refresh\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div style={{ height: 400, width: \"100%\" }}>\n          <DataGrid\n            columns={[\n              {\n                field: \"id\",\n                headerName: \"Sr. no\",\n                flex: 0,\n                hide: true,\n              },\n              {\n                field: \"erp_code\",\n                headerName: \"ERP Code\",\n                flex: 0.1,\n              },\n              {\n                field: \"category\",\n                headerName: \"Category\",\n                flex: 0.1,\n              },\n              {\n                field: \"group\",\n                headerName: \"Group\",\n                flex: 0.1,\n              },\n              {\n                field: \"item\",\n                headerName: \"Item\",\n                flex: 0.1,\n              },\n              {\n                field: \"mlfb\",\n                headerName: \"MLFB\",\n                flex: 0.1,\n              },\n              {\n                field: \"description\",\n                headerName: \"Description\",\n                flex: 0.1,\n              },\n\n              {\n                field: \"store_qty\",\n                headerName: \"Store Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n              {\n                field: \"di_qty\",\n                headerName: \"DI Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n              {\n                field: \"open_qty\",\n                headerName: \"Open Qty\",\n                flex: 0.1,\n                align: \"right\",\n              },\n            ]}\n            pagination\n            disableColumnFilter\n            pageSize={params.pageSize}\n            page={params.pageNo}\n            rowsPerPageOptions={[10, 15, 25, 100]}\n            rowCount={totalRecord}\n            paginationMode=\"server\"\n            onPageSizeChange={handlePageSizeChange}\n            onPageChange={handlePageChange}\n            loading={loading}\n            rowHeight={30}\n            components={\n              browseListData.length > 0\n                ? {\n                    Pagination: CustomPagination,\n                    NoRowsOverlay: CustomNoRowsOverlay,\n                  }\n                : {}\n            }\n            onSortModelChange={(sort) => {\n              if (sort.length > 0) {\n                setParams({\n                  ...params,\n                  sort_column: sort[0].field,\n                  sort_order: sort[0].sort,\n                });\n              }\n            }}\n            rows={browseListData}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StockBrowse;\n","import React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport ItemLedgerBrowse from \"../pages/Stock/itemLedgerBrowse\";\nimport SerialLedgerBrowse from \"../pages/Stock/serialLedgerBrowse\";\n\nimport StockBrowse from \"../pages/Stock/stockBrowse\";\n\nconst Stock = () => {\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n        <Route exact path=\"/stock/stock-report\" component={StockBrowse} />\n        <Route exact path=\"/stock/item-ledger\" component={ItemLedgerBrowse} />\n        <Route\n          exact\n          path=\"/stock/serial-no-traking\"\n          component={SerialLedgerBrowse}\n        />\n\n        <Redirect from=\"/stock\" to=\"/stock/stock\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Stock;\n","import { Button, MenuItem, TextField } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  buttonLoader,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport {\n  getUserRightList,\n} from \"../../../_redux/actions/common.action\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\n\nconst AddSupportTicket = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [userRightListArr, setUserRightList] = useState([]);\n  const getuserRightListResponse = useSelector(\n    (state) => state.common.userRightList\n  );\n  const [attachments, setAttachments] = useState({\n    attach_file: null,\n    attach_file1: null,\n    attach_file2: null,\n  });\n  const [subMenuList, setSubMenuList] = useState([]);\n  useEffect(() => {\n    dispatch(getUserRightList());\n    // dispatch(getUserFilterList());\n  }, []);\n  // const groupBy = (array, key) => {\n  //   // Return the end result\n  //   return array.reduce((result, currentValue) => {\n  //     // If an array already present for key, push it to the array. Else create an array and push the object\n  //     (result[currentValue[key]] = result[currentValue[key]] || []).push(\n  //       currentValue\n  //     );\n  //     // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n  //     return result;\n  //   }, {}); // empty object is the initial value for result object\n  // };\n  useEffect(() => {\n    if (getuserRightListResponse.length > 0) {\n      setUserRightList(getuserRightListResponse);\n    }\n  }, [getuserRightListResponse]);\n  const handleMenuChange = (id) => {\n    var tempMenuIndex = userRightListArr.findIndex((x) => x.menu_id === id);\n    if (tempMenuIndex > -1) {\n      setSubMenuList(userRightListArr[tempMenuIndex].transaction_lst);\n    }\n    setFormData({\n      ...formData,\n      menu: userRightListArr[tempMenuIndex].menu_id,\n      menu_name: userRightListArr[tempMenuIndex].menu_name,\n    });\n  };\n\n  const [formData, setFormData] = useState({\n    tran_id: \"\",\n    ticket_no: \"\",\n    date: \"\",\n    menu: \"\",\n    menu_name: \"\",\n    transaction: \"\",\n    type: \"\",\n    priority: \"\",\n    details: \"\",\n    attach_file: \"\",\n    attach_file1: \"\",\n    attach_file2: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n\n  const {\n    date,\n    ticket_no,\n    menu,\n    transaction,\n    details,\n\n    type,\n    priority,\n  } = formData;\n\n  useEffect(() => {\n    getSupportTicketData();\n  }, []);\n\n  const getSupportTicketData = async () => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"Ticket/SupportTicketPreview\",\n        formData,\n        \"post\"\n      ).then((data) => {\n        setFormData({\n          ...formData,\n          date: data.date,\n          ticket_no: data.ticket_no,\n        });\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const handleFormData = (event) => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  const handleFileChange = (e) => {\n    if (e.target.files.length > 0) {\n      setAttachments({ ...attachments, [e.target.name]: e.target.files[0] });\n      setFormData({ ...formData, [e.target.name]: e.target.files[0].name });\n    } else {\n      setAttachments({ ...attachments, [e.target.name]: null });\n      setFormData({ ...formData, [e.target.name]: \"\" });\n    }\n  };\n\n  const generateTicket = async () => {\n    try {\n      if (validateForm()) {\n        let formdata = new FormData();\n        for (var key in attachments) {\n          if (attachments.hasOwnProperty(key) && attachments[key]) {\n            formdata.append(key, attachments[key]);\n          }\n        }\n        await CommonController.commonApiFile(\n          \"Ticket/TicketImageInsert\",\n          formdata\n        );\n        await CommonController.commonApiCallFilter(\n          \"Ticket/SupportTicketInsert\",\n          formData\n        ).then((data) => {\n          if (data.valid) {\n            showSuccessToast(\"Ticket Generated Successfully\");\n          } else {\n            showErrorToast(data.msg);\n          }\n        });\n      }\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const validateForm = () => {\n    let errors = {};\n    if (formData.menu === \"\") {\n      errors.menu = \"Menu required\";\n    } else {\n      delete errors.menu;\n    }\n\n    console.log(formData.type);\n    if (formData.type === \"\") {\n      errors.type = \"Type required\";\n    } else {\n      delete errors.type;\n    }\n\n    const valid = Object.keys(errors).length === 0 ? true : false;\n    setErrors(errors);\n    return valid;\n  };\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-4 mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            disabled\n            size=\"small\"\n            name=\"date\"\n            label=\"Date\"\n            variant=\"outlined\"\n            value={date}\n            onChange={handleFormData}\n          />\n        </div>\n        <div className=\"col-md-4  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"ticket_no\"\n            label=\"Ticket No\"\n            disabled\n            variant=\"outlined\"\n            value={ticket_no}\n            onChange={handleFormData}\n          />\n        </div>\n        <div className=\"col-md-4  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"generated_by\"\n            disabled\n            label=\"Generated By\"\n            value={localStorage.getItem(\"userName\")}\n            variant=\"outlined\"\n            onChange={handleFormData}\n          />\n        </div>\n        <div className=\"col-md-3  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"menu\"\n            select\n            label=\"Menu*\"\n            value={menu}\n            variant=\"outlined\"\n            onChange={(e) => {\n              handleMenuChange(e.target.value);\n            }}\n          >\n            <MenuItem value={\"\"}>None</MenuItem>\n            {userRightListArr.length > 0 &&\n              userRightListArr.map((menu, index) => {\n                return (\n                  <MenuItem key={index} value={menu.menu_id}>\n                    {menu.menu_name}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n          {errors.menu && <p className=\"text-danger mb-0\">{errors.menu}</p>}\n        </div>\n        <div className=\"col-md-3  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"transaction\"\n            select\n            label=\"Transaction\"\n            value={transaction}\n            variant=\"outlined\"\n            onChange={handleFormData}\n          >\n            {subMenuList.length > 0 &&\n              subMenuList.map((transaction, index) => {\n                return (\n                  <MenuItem key={index} value={transaction.transaction_name}>\n                    {transaction.transaction_name}\n                  </MenuItem>\n                );\n              })}\n          </TextField>\n        </div>\n        <div className=\"col-md-3  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"type\"\n            select\n            label=\"Type*\"\n            value={type}\n            variant=\"outlined\"\n            onChange={handleFormData}\n          >\n            <MenuItem value={\"New Development\"}>New Development</MenuItem>\n            <MenuItem value={\"Modification\"}>Modification</MenuItem>\n            <MenuItem value={\"Problem\"}>Problem</MenuItem>\n            <MenuItem value={\"Other\"}>Other</MenuItem>\n          </TextField>\n          {errors.type && <p className=\"text-danger mb-0\">{errors.type}</p>}\n        </div>\n        <div className=\"col-md-3  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"priority\"\n            select\n            label=\"Priority\"\n            variant=\"outlined\"\n            value={priority}\n            onChange={handleFormData}\n          >\n            <MenuItem value={\"High\"}>High</MenuItem>\n            <MenuItem value={\"Medium\"}>Medium</MenuItem>\n            <MenuItem value={\"Low\"}>Low</MenuItem>\n          </TextField>\n        </div>\n        <div className=\"col-md-12  mb-5\">\n          <TextField\n            fullWidth\n            id=\"outlined-basic\"\n            size=\"small\"\n            name=\"details\"\n            multiline\n            label=\"Details\"\n            value={details}\n            onChange={handleFormData}\n            variant=\"outlined\"\n          />\n        </div>\n        <div className=\"col-md-1\">\n          <label className=\"font-weight-bold\">Attachment</label>\n        </div>\n        <div className=\"col-md-3\">\n          <input\n            type=\"file\"\n            name=\"attach_file\"\n            onChange={handleFileChange}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-md-3\">\n          <input\n            type=\"file\"\n            name=\"attach_file1\"\n            onChange={handleFileChange}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-md-3\">\n          <input\n            type=\"file\"\n            name=\"attach_file2\"\n            onChange={handleFileChange}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-md-12 mt-5 text-right\">\n          <Button\n            variant=\"contained\"\n            className=\"mr-2\"\n            color=\"primary\"\n            disableElevation\n          >\n            Cancel\n          </Button>\n          {buttonLoader(loading, \"Save\", generateTicket, \"primary\")}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddSupportTicket;\n","import {\n  TextField,\n  MenuItem,\n  ListItem,\n  ListItemText,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  DialogContent,\n  List,\n  ListItemAvatar,\n  Avatar,\n} from \"@material-ui/core\";\nimport { Button } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport DateFilter from \"../../../components/dateFilter\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst SupportTicketBrowse = (props) => {\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [remarksModal, setRemarksModal] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [remarksList, setRemarksList] = useState(null);\n  const [remarkLoading, setRemarkLoading] = useState(false);\n  const [attachedFile, setAttachedFile] = useState(null);\n  const [remarks, setRemarks] = useState({\n    mtran_id: \"\",\n    comments: \"\",\n    status: \"\",\n    attach_file: \"\",\n    rit_user: localStorage.getItem(\"userName\"),\n    user_id: localStorage.getItem(\"userId\"),\n  });\n\n  const [empList, setEmpList] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n  const [bodyParam, setBodyParam] = useState({\n    user_id: 1,\n    generated_by: \"\",\n    status: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const onRemarkChange = (event) => {\n    setRemarks({ ...remarks, [event.target.name]: event.target.value });\n  };\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"Ticket/SupportTicketBrowse\",\n        params,\n        bodyParam,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const getEmployeeList = async () => {\n    try {\n      await CommonController.commonApiCallFilter(\n        `Dropdown/GetEmpListInSupport`,\n        { user_id: localStorage.getItem(\"userId\") },\n        \"get\"\n      ).then((data) => {\n        setEmpList(data);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n  useEffect(() => {\n    getBrowseListData();\n    getEmployeeList();\n  }, []);\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n  const toggleRemarks = () => setRemarksModal(!remarksModal);\n  const saveRemarks = async () => {\n    setLoading(true);\n    try {\n      let formdata = new FormData();\n      formdata.append(\"file\", attachedFile);\n      await CommonController.commonApiFile(\n        \"Ticket/TicketImageInsert\",\n        formdata\n      );\n      await CommonController.commonApiCallFilter(\n        \"Ticket/TicketCommentInsert\",\n        remarks\n      ).then((data) => {\n        if (data.valid) {\n          getBrowseListData();\n          showSuccessToast(\"Remarks Updated Successfully\");\n          setRemarksModal(false);\n        } else {\n          showErrorToast(data.msg);\n        }\n      });\n    } catch (err) {\n      showErrorToast(\"Something went wrong\");\n    }\n    setLoading(false);\n  };\n\n  const getRemarkList = async (id) => {\n    setRemarks({ ...remarks, mtran_id: id });\n    setRemarkLoading(true);\n    await CommonController.commonApiCallFilter(\n      \"Ticket/GetTicketComment\",\n      {\n        mtran_id: id,\n      },\n      \"post\"\n    )\n      .then((data) => {\n        setRemarksList(data);\n        setRemarksModal(true);\n      })\n      .catch((err) => {\n        showErrorToast(err);\n      });\n    setRemarkLoading(false);\n  };\n\n  return (\n    <>\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"generated_by\"\n              select\n              label=\"Generated By\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"\"}>None</MenuItem>\n              {empList &&\n                empList.map((emp, index) => {\n                  return (\n                    <MenuItem key={index} value={emp.value}>\n                      {emp.value}\n                    </MenuItem>\n                  );\n                })}\n            </TextField>\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onChange={(e) => {\n                handleBodyParam(e);\n              }}\n              name=\"status\"\n              select\n              label=\"Status\"\n              variant=\"outlined\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"open\"}>Open</MenuItem>\n              <MenuItem value={\"close\"}>Close</MenuItem>\n            </TextField>\n          </div>\n        </div>\n      </div>\n      <Dialog\n        open={remarksModal}\n        fullWidth\n        onClose={toggleRemarks}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Add Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            variant=\"outlined\"\n            className=\"mb-4\"\n            size=\"small\"\n            fullWidth\n            id=\"select-1\"\n            select\n            name=\"status\"\n            onChange={onRemarkChange}\n            label=\"Status*\"\n          >\n            <MenuItem value={\"0\"}>Close</MenuItem>\n            <MenuItem value={\"1\"}>Open</MenuItem>\n          </TextField>\n          <TextField\n            variant=\"outlined\"\n            multiline\n            size=\"small\"\n            name=\"comment\"\n            onChange={onRemarkChange}\n            label=\"Comments*\"\n            fullWidth\n          />\n          <div className=\"form-group mt-3\">\n            <label>Upload Attachment</label>\n            <input\n              className=\"form-control\"\n              id=\"files\"\n              onChange={(e) => {\n                if (e.target.files.length > 0) {\n                  setAttachedFile(e.target.files[0]);\n                  setRemarks({\n                    ...remarks,\n                    attach_file: e.target.files[0].name,\n                  });\n                } else {\n                  setAttachedFile(null);\n                  setRemarks({\n                    ...remarks,\n                    attach_file: \"\",\n                  });\n                }\n              }}\n              type=\"file\"\n            />\n          </div>\n          <List>\n            {remarksList &&\n              remarksList.length > 0 &&\n              remarksList.map((remark, index) => {\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      {remark.attach_file !== \"\" ? (\n                        <img\n                          src={\n                            \"https://diagapi.quickgst.in/Support_Attachment/\" +\n                            remark.attach_file\n                          }\n                        />\n                      ) : (\n                        <Avatar>\n                          <ImageIcon />\n                        </Avatar>\n                      )}\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={remark.emp_name}\n                      secondary={\n                        <p className=\"mb-0\">\n                          {remark.comments}{\" \"}\n                          <span className=\"float-right\">{remark.datetime}</span>\n                        </p>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={toggleRemarks} color=\"primary\">\n            Close\n          </Button>\n          <Button\n            onClick={saveRemarks}\n            disabled={\n              remarks.remarks === \"\" || remarks.status_id === \"\" || loading\n            }\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n              hide: true,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n            },\n            {\n              field: \"ticket_no\",\n              headerName: \"Ticket No\",\n              width: 120,\n            },\n            {\n              field: \"menu\",\n              headerName: \"Menu\",\n              width: 120,\n            },\n            {\n              field: \"transaction\",\n              headerName: \"Transaction\",\n              width: 170,\n            },\n            {\n              field: \"type\",\n              headerName: \"Type\",\n              width: 150,\n            },\n            {\n              field: \"priority\",\n              headerName: \"Priority\",\n              width: 100,\n            },\n            {\n              field: \"details\",\n              headerName: \"Details\",\n              width: 200,\n            },\n            {\n              field: \"generated_by\",\n              headerName: \"Generated By\",\n              width: 130,\n            },\n            {\n              field: \"status\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 170,\n            },\n            {\n              field: \"attachments\",\n              headerName: \"Attachments\",\n              width: 100,\n            },\n\n            {\n              field: \"\",\n              headerName: \"\",\n              renderCell: (param) => {\n                return (\n                  <>\n                    {remarkLoading ? (\n                      <img src=\"/asset/images/circle.gif\" width={20} />\n                    ) : (\n                      <Button\n                        className=\"text-lowercase\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getRemarkList(param.row.tran_id);\n                        }}\n                      >\n                        Comment\n                      </Button>\n                    )}\n                  </>\n                );\n              },\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SupportTicketBrowse;\n","import React, { useState } from \"react\";\nimport AddSupportTicket from \"./addTicket\";\nimport SupportTicketBrowse from \"./browse\";\nconst SupportTicketIndex = () => {\n  const [selectedIndex, setSeletedIndex] = useState(0);\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n         \n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n         \n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Ticket\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? <SupportTicketBrowse /> : <AddSupportTicket />}\n      </div>\n    </div>\n  );\n};\n\nexport default SupportTicketIndex;\n","import { TextField, Button, MenuItem } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast, showSuccessToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { Loader } from \"../../../components/loader\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport DateFilter from \"../../../components/dateFilter\";\n\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst SupportTicketApprovalBrowse = (props) => {\n  const history = useHistory();\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  const [empList, setEmpList] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"\",\n  });\n  const [bodyParam, setBodyParam] = useState({\n    menu: \"\",\n    transaction: \"\",\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"TicketCommercialApproval/TicketCommercialApprovalBrowse\",\n        params,\n        bodyParam,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n\n  return (\n    <>\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={() => getBrowseListData()} />\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleBodyParam}\n              name=\"menu\"\n              label=\"Menu\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2 \">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleBodyParam}\n              name=\"transaction\"\n              label=\"Transaction\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n              hide: true,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n            },\n            {\n              field: \"ticket_no\",\n              headerName: \"Ticket No\",\n              width: 120,\n              renderCell: (param) => {\n                return (\n                  <button\n                    className=\"btn btn-link\"\n                    onClick={() => {\n                      history.push({\n                        pathname: \"/support/ticket-commercial\",\n                        state: {\n                          index: 1,\n                          id: param.row.tran_id,\n                        },\n                      });\n                    }}\n                  >\n                    {param.row.ticket_no}\n                  </button>\n                );\n              },\n            },\n            {\n              field: \"menu\",\n              headerName: \"Menu\",\n              width: 120,\n            },\n            {\n              field: \"transaction\",\n              headerName: \"Transaction\",\n              width: 170,\n            },\n\n            {\n              field: \"details\",\n              headerName: \"Details\",\n              width: 200,\n            },\n            {\n              field: \"charges\",\n              headerName: \"Charges\",\n              width: 130,\n            },\n            {\n              field: \"remarks\",\n              headerName: \"Status\",\n              width: 100,\n            },\n            {\n              field: \"approved_charges\",\n              headerName: \"Approved Charges\",\n              width: 170,\n            },\n            {\n              field: \"approved_remarks\",\n              headerName: \"Approved Remarks\",\n              width: 170,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SupportTicketApprovalBrowse;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBrowseUserRight } from \"../../../components/common\";\nimport SupportTicketApprovalBrowse from \"./browse\";\n\nconst SupportTicketApprovalIndex = () => {\n  const userRight = useSelector((state) => state.common.userRightList);\n\n  const [selectedIndex, setSeletedIndex] = useState(0);\n\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        {getBrowseUserRight(userRight)?.insert_right === \"True\" && (\n          <li className=\"nav-item\">\n            <a\n              className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n              onClick={() => {\n                // dispatch(clearSelectedGodownId());\n                handleIndex(1);\n              }}\n            >\n              New Ticket Approval\n            </a>\n          </li>\n        )}\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? <SupportTicketApprovalBrowse /> : \"\"}\n      </div>\n    </div>\n  );\n};\n\nexport default SupportTicketApprovalIndex;\n","import { Button } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  buttonLoader,\n  showErrorToast,\n  showSuccessToast,\n} from \"../../../components/common\";\nimport { TablePicker } from \"../../../components/table-picker\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nconst AddTicketCommercial = ({ changeTab, previewId, ...props }) => {\n  const [selectedTicket, setSelectedTicket] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [showPicker, setShowPicker] = useState(false);\n  const togglePicker = () => setShowPicker(!showPicker);\n  const [errors, setErrors] = useState({});\n  const [formData, setFormData] = useState({\n    tran_id: previewId ? previewId : \"0\",\n    ticket_id: \"\",\n    date: moment().format(\"DD-MM-yyyy\"),\n    charges: \"\",\n    remarks: \"\",\n    user_id: localStorage.getItem(\"userId\"),\n  });\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const validateForm = () => {\n    let errors = {};\n    if (formData.charges === \"\") {\n      errors.charges = \"Charges required\";\n    } else {\n      delete errors.charges;\n    }\n    if (formData.remarks ===\"\") {\n      errors.remarks = \"Remarks required\";\n    } else {\n      delete errors.remarks;\n    }\n\n    const valid = Object.keys(errors).length === 0 ? true : false;\n    setErrors(errors);\n    return valid;\n  };\n\n  const onSubmit = async () => {\n    try {\n      setLoading(true);\n      if (validateForm()) {\n        await CommonController.commonApiCallFilter(\n          \"TicketCommercial/TicketCommericialInsert\",\n          formData,\n          \"post\"\n        ).then((data) => {\n          if (data.valid) {\n            showSuccessToast(\"Ticket Commercial Successfully\");\n            changeTab(0);\n          } else {\n            showErrorToast(data.msg);\n          }\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  const getTicketById = async () => {\n    try {\n      await CommonController.commonApiCallFilter(\n        \"TicketCommercial/TicketCommericialPreview\",\n        { tran_id: previewId },\n        \"post\"\n      ).then((data) => {\n        setSelectedTicket(data);\n        setFormData({\n          ...formData,\n          charges: data.charges,\n          remarks: data.remarks,\n          ticket_id: data.ticket_id,\n        });\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n  };\n\n  useEffect(() => {\n    if (previewId) {\n      getTicketById();\n    }\n  }, [previewId]);\n\n  const newColumns = [\n    {\n      id: \"id\",\n      label: \"Sr. no\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"date\",\n      label: \"Date\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"ticket_no\",\n      label: \"Ticket No\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"menu\",\n      label: \"Menu\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"transaction\",\n      label: \"Transaction\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"type\",\n      label: \"Type\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"priority\",\n      label: \"Priority\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"details\",\n      label: \"Details\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"generated_by\",\n      label: \"Generated By\",\n      numeric: false,\n      disablePadding: true,\n    },\n    {\n      id: \"status\",\n      label: \"Status\",\n      numeric: false,\n      disablePadding: true,\n    },\n  ];\n\n  const handlePickTicket = (ticket) => {\n    setFormData({ ...formData, ticket_id: String(ticket.id) });\n    setSelectedTicket(ticket);\n    setShowPicker(false);\n  };\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-12 text-right\">\n          {!showPicker && (\n            <Button\n              variant=\"contained\"\n              onClick={togglePicker}\n              disableElevation\n              color=\"primary\"\n            >\n              Pick Ticket\n            </Button>\n          )}\n          {showPicker && (\n            <TablePicker\n              selectedItems={selectedTicket}\n              columns={newColumns}\n              type=\"single\"\n              url={\"TicketCommercial/PickTicketInCommercial\"}\n              onSubmit={handlePickTicket}\n              onPickerClose={togglePicker}\n            />\n          )}\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Ticket Date</label>\n            <p>\n              {selectedTicket && selectedTicket.date !== \"\"\n                ? selectedTicket.date\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Ticket No.</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.ticket_no !== \"\"\n                ? selectedTicket.ticket_no\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Generated By</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.generated_by !== \"\"\n                ? selectedTicket.generated_by\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Menu</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.menu !== \"\"\n                ? selectedTicket.menu\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Transaction</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.transaction !== \"\"\n                ? selectedTicket.transaction\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Type</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.type !== \"\"\n                ? selectedTicket.type\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Priority</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.priority !==\"\"\n                ? selectedTicket.priority\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Details</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.details !== \"\"\n                ? selectedTicket.details\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Date</label>\n            <input\n              type=\"text\"\n              className=\"form-control w-75\"\n              value={formData.date}\n              disabled\n            />\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Charges</label>\n            <input\n              type=\"text\"\n              className=\"form-control w-75\"\n              name=\"charges\"\n              value={formData.charges}\n              onChange={handleChange}\n            />\n            {errors.charges && <p className=\"text-danger\">{errors.charges}</p>}\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Remarks</label>\n            <textarea\n              type=\"text\"\n              value={formData.remarks}\n              name=\"remarks\"\n              onChange={handleChange}\n              className=\"form-control w-75\"\n            ></textarea>\n            {errors.remarks && <p className=\"text-danger\">{errors.remarks}</p>}\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Approved Date</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.approved_date !== \"\"\n                ? selectedTicket.approved_date\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Approved Charges</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.approved_charges !== \"\"\n                ? selectedTicket.approved_charges\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"form-group\">\n            <label className=\"font-weight-bold\">Approved Remarks</label>\n            <p>\n              {\" \"}\n              {selectedTicket && selectedTicket.approved_remarks !== \"\"\n                ? selectedTicket.approved_remarks\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"col-md-12 text-right\">\n          <Button\n            variant=\"contained\"\n            onClick={() => changeTab(0)}\n            className=\"mr-2\"\n            disableElevation\n          >\n            Cancel\n          </Button>\n          {buttonLoader(loading, \"Submit\", onSubmit, \"primary\")}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTicketCommercial;\n","import { TextField } from \"@material-ui/core\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { showErrorToast } from \"../../../components/common\";\nimport CustomPagination from \"../../../components/CustomPagination\";\nimport CustomNoRowsOverlay from \"../../../components/customRowComponent\";\nimport { CommonController } from \"../../../_redux/controller/common.controller\";\nimport DateFilter from \"../../../components/dateFilter\";\nconst user_id = {\n  user_id: localStorage.getItem(\"userId\"),\n};\nconst SupportTicketCommericialBrowse = ({ selectedPreviewId }) => {\n  const [browseListData, setBrowseListData] = useState([]);\n  const [totalRecord, setTotalRecords] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pageNo: 1,\n    pageSize: 10,\n    filter_value: \"\",\n    sort_column: \"\",\n    sort_order: \"DESC\",\n  });\n\n  const [bodyParam, setBodyParam] = useState({\n    menu: \"\",\n    transaction: \"\",\n    fromDate: null,\n    toDate: null,\n  });\n\n  const handleParams = (event) => {\n    setTimeout(() => {\n      setParams({ ...params, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const handleBodyParam = (event) => {\n    setTimeout(() => {\n      setBodyParam({ ...bodyParam, [event.target.name]: event.target.value });\n    }, 800);\n  };\n\n  const getBrowseListData = async () => {\n    setLoading(true);\n    try {\n      await CommonController.commonApiCall(\n        \"TicketCommercial/TicketCommericialBrowse\",\n        params,\n        bodyParam,\n        user_id\n      ).then((data) => {\n        setBrowseListData(data.data);\n        setTotalRecords(data.recordsFiltered);\n      });\n    } catch (err) {\n      showErrorToast(err);\n    }\n    setLoading(false);\n  };\n\n  const handlePageSizeChange = (param) => {\n    setParams({ ...params, pageSize: param });\n  };\n  const handlePageChange = (param) => {\n    setParams({ ...params, pageNo: param });\n  };\n\n  useEffect(() => {\n    getBrowseListData();\n  }, []);\n\n  useEffect(() => {\n    getBrowseListData();\n  }, [params, bodyParam]);\n\n  return (\n    <>\n      {/* {loading && <Loader />} */}\n      <div className=\"filter_box mb-5\">\n        <div className=\"row\">\n          <div className=\"col-md-1 d-flex align-items-center\">\n            <h4 className=\"mb-0\">Filters</h4>\n          </div>\n          <div className=\"col-md-2\">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleParams}\n              name=\"filter_value\"\n              label=\"Search\"\n              variant=\"outlined\"\n            />\n          </div>\n          <DateFilter onDateUpdate={getBrowseListData} />\n          <div className=\"col-md-2 \">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleBodyParam}\n              name=\"menu\"\n              label=\"Menu\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div className=\"col-md-2 \">\n            <TextField\n              fullWidth\n              id=\"outlined-basic\"\n              size=\"small\"\n              onKeyUp={handleBodyParam}\n              name=\"transaction\"\n              label=\"Transaction\"\n              variant=\"outlined\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid\n          columns={[\n            {\n              field: \"id\",\n              headerName: \"Sr. no\",\n              flex: 0,\n              hide: true,\n            },\n            {\n              field: \"date\",\n              headerName: \"Date\",\n              width: 100,\n            },\n            {\n              field: \"ticket_date\",\n              headerName: \"Ticket Date\",\n              width: 120,\n            },\n            {\n              field: \"ticket_no\",\n              headerName: \"Ticket No\",\n              width: 120,\n              renderCell: (param) => {\n                return (\n                  <button\n                    className=\"btn btn-link\"\n                    onClick={() => selectedPreviewId(param.row.tran_id)}\n                  >\n                    {param.row.ticket_no}\n                  </button>\n                );\n              },\n            },\n            {\n              field: \"menu\",\n              headerName: \"Menu\",\n              width: 120,\n            },\n            {\n              field: \"transaction\",\n              headerName: \"Transaction\",\n              width: 170,\n            },\n\n            {\n              field: \"details\",\n              headerName: \"Details\",\n              width: 200,\n            },\n            {\n              field: \"charges\",\n              headerName: \"Charges\",\n              width: 130,\n            },\n\n            {\n              field: \"remarks\",\n              headerName: \"Remarks\",\n              width: 170,\n            },\n            {\n              field: \"approved_charges\",\n              headerName: \"Approved Charges\",\n              width: 100,\n            },\n            {\n              field: \"approved_remarks\",\n              headerName: \"Approved Remarks\",\n              width: 100,\n            },\n          ]}\n          pagination\n          disableColumnFilter\n          pageSize={params.pageSize}\n          page={params.pageNo}\n          rowsPerPageOptions={[10, 15, 25, 100]}\n          rowCount={totalRecord}\n          paginationMode=\"server\"\n          onPageSizeChange={handlePageSizeChange}\n          onPageChange={handlePageChange}\n          loading={loading}\n          rowHeight={30}\n          components={\n            browseListData.length > 0\n              ? {\n                  Pagination: CustomPagination,\n                  NoRowsOverlay: CustomNoRowsOverlay,\n                }\n              : {}\n          }\n          onSortModelChange={(sort) => {\n            if (sort.length > 0) {\n              setParams({\n                ...params,\n                sort_column: sort[0].field,\n                sort_order: sort[0].sort,\n              });\n            }\n          }}\n          rows={browseListData}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default SupportTicketCommericialBrowse;\n","import React, { useState } from \"react\";\nimport AddTicketCommercial from \"./addCommericial\";\nimport SupportTicketCommericialBrowse from \"./tcBrowse\";\nconst SupportTicketCommercialIndex = (props) => {\n  const approvalObj = props.location.state;\n  const [selectedIndex, setSeletedIndex] = useState(\n    approvalObj ? approvalObj.index : 0\n  );\n  const [selectedId, setSelectedId] = useState(null);\n  const handleIndex = (index) => {\n    setSeletedIndex(index);\n  };\n  return (\n    <div className=\"card card-custom gutter-b  px-7 py-3\">\n      <ul className=\"nav nav-tabs nav-tabs-line\">\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 0 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(0);\n            }}\n          >\n            Browse\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            className={`nav-link ` + (selectedIndex === 1 ? \"active\" : \"\")}\n            onClick={() => {\n              // dispatch(clearSelectedGodownId());\n              handleIndex(1);\n            }}\n          >\n            New Commercial\n          </a>\n        </li>\n      </ul>\n      <div className=\"tab-content\">\n        {selectedIndex === 0 ? (\n          <SupportTicketCommericialBrowse\n            selectedPreviewId={(id) => {\n              setSelectedId(id);\n              handleIndex(1);\n            }}\n          />\n        ) : (\n          <AddTicketCommercial\n            previewId={approvalObj ? approvalObj.id : selectedId}\n            changeTab={handleIndex}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SupportTicketCommercialIndex;\n","import React, { useEffect } from 'react';\r\nimport MainLayout from '../layouts/layout';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { checkAuthOTP, getDecryptUserId } from '../_redux/actions/auth.action';\r\n\r\n\r\n\r\n\r\nconst SwitchApp = (props) => {\r\nconst isAuthorisedByUrl = new URLSearchParams(props.location.search).get(\"token\");\r\nconst dispatch = useDispatch();\r\nconst getDecryptUserDetailsResponse = useSelector((state) => state.auth.decryptUserDetails);\r\nconst checkAuthOtpResponse = useSelector((state) => state.auth.getOtpResponse);\r\n\r\nuseEffect(() => {\r\n    if(isAuthorisedByUrl){\r\n        const param = {\r\n            encrypt_user_id:isAuthorisedByUrl\r\n        }\r\n        dispatch(getDecryptUserId(param));\r\n    }\r\n    else{\r\n        window.location = \"/\";\r\n    }\r\n},[isAuthorisedByUrl]);\r\n\r\n\r\nuseEffect(() => {\r\n    if(getDecryptUserDetailsResponse){\r\n        console.log(getDecryptUserDetailsResponse);\r\n        var login = `grant_type=password&username=${getDecryptUserDetailsResponse.user_name}&password=${getDecryptUserDetailsResponse.password}`;\r\n        dispatch(checkAuthOTP(login));\r\n    }\r\n},[getDecryptUserDetailsResponse]);\r\n\r\nuseEffect(() => {\r\n    if(!(Object.keys(checkAuthOtpResponse).length === 0 && checkAuthOtpResponse.constructor === Object)){\r\n        if(checkAuthOtpResponse.valid){\r\n            localStorage.setItem(\"token\",checkAuthOtpResponse.access_token);\r\n            localStorage.setItem(\"login\",checkAuthOtpResponse.valid);\r\n            localStorage.setItem(\"userName\",checkAuthOtpResponse.userName);\r\n            localStorage.setItem(\"userId\",checkAuthOtpResponse.userId);\r\n            localStorage.setItem(\"code\",checkAuthOtpResponse.code);\r\n            localStorage.setItem(\"encrypt_userId\",checkAuthOtpResponse.encrypt_userId);\r\n            window.location = \"/\";\r\n        }\r\n    }\r\n},[checkAuthOtpResponse])\r\n\r\n\r\n    return  <div className=\"switch_loader\">\r\n            <div>\r\n                <CircularProgress />\r\n                <h4>Please wait....</h4>\r\n            </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default SwitchApp;","import Dashboard from \"./layouts/Dashboard\";\r\nimport Logistics from \"./layouts/Logistics\";\r\nimport Masters from \"./layouts/Masters\";\r\nimport ProfileLayout from \"./layouts/Profile\";\r\nimport Sales from \"./layouts/Sales\";\r\nimport Stock from \"./layouts/Stock\";\r\nimport Support from \"./layouts/Support\";\r\nimport SwitchApp from \"./pages/index\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    component: Dashboard,\r\n  },\r\n  {\r\n    path: \"/switch\",\r\n    component: SwitchApp,\r\n  },\r\n  {\r\n    path: \"/masters\",\r\n    component: Masters, \r\n  },\r\n  {\r\n    path: \"/logistics\",\r\n    component: Logistics,\r\n  },\r\n  {\r\n    path: \"/sales\",\r\n    component: Sales,\r\n  },\r\n  {\r\n    path: \"/support\",\r\n    component: Support,\r\n  },\r\n  {\r\n    path: \"/configuration\",\r\n    component: Masters,\r\n  },\r\n  {\r\n    path: \"/stock\",\r\n    component: Stock,\r\n  },\r\n  {\r\n    path: \"/profile\",\r\n    component: ProfileLayout,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\n\nimport SupportTicketIndex from \"../pages/support/ticket\";\nimport SupportTicketApprovalIndex from \"../pages/support/ticketApproval\";\nimport SupportTicketCommercialIndex from \"../pages/support/ticketCommercial\";\n\nconst Support = () => {\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n        <Route exact path=\"/support/ticket\" component={SupportTicketIndex} />\n        <Route\n          exact\n          path=\"/support/ticket-approval\"\n          component={SupportTicketApprovalIndex}\n        />\n        <Route\n          exact\n          path=\"/support/ticket-commercial\"\n          component={SupportTicketCommercialIndex}\n        />\n\n        <Redirect from=\"/support\" to=\"/support/ticket\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Support;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Switch } from \"react-router-dom\";\r\nimport CustomBreadcrumb from \"../components/breadcrumbs\";\r\nimport Header from \"../components/header\";\r\nimport RouteWithSubRoutes from \"../components/RouteWithSubRoutes\";\r\nimport Sidebar from \"../components/sidebar\";\r\nimport routes from \"../routes\";\r\nimport {\r\n  getUserFilterList,\r\n  getUserRightList,\r\n} from \"../_redux/actions/common.action\";\r\n\r\nconst MainLayout = () => {\r\n  const dispatch = useDispatch();\r\n  const [showSideBar, setShowSidebar] = useState(false);\r\n  const [pinSidebar, setPinSidebar] = useState(false);\r\n  const [userRightListArr, setUserRightList] = useState([]);\r\n  const getuserRightListResponse = useSelector(\r\n    (state) => state.common.userRightList\r\n  );\r\n\r\n  const [subMenuList, setSubMenuList] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState({\r\n    main: null,\r\n    subMenu: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserRightList());\r\n    // dispatch(getUserFilterList());\r\n  }, []);\r\n\r\n  const groupBy = (array, key) => {\r\n    // Return the end result\r\n    return array.reduce((result, currentValue) => {\r\n      // If an array already present for key, push it to the array. Else create an array and push the object\r\n      (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n        currentValue\r\n      );\r\n      // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\r\n      return result;\r\n    }, {}); // empty object is the initial value for result object\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getuserRightListResponse?.length > 0) {\r\n      const groupedMenu = groupBy(getuserRightListResponse, \"group_name\");\r\n\r\n      setUserRightList(getuserRightListResponse);\r\n    }\r\n  }, [getuserRightListResponse]);\r\n\r\n  const handleMenuChange = (id) => {\r\n    var tempMenuIndex = userRightListArr.findIndex((x) => x.menu_id === id);\r\n    if (tempMenuIndex > -1) {\r\n      setSubMenuList(userRightListArr[tempMenuIndex].transaction_lst);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-frame\">\r\n      <Header onHeaderClick={() => setShowSidebar(!showSideBar)} />\r\n      <div className=\"mt-5\">\r\n        <CustomBreadcrumb />\r\n        <Switch>\r\n          {routes.map((route, i) => (\r\n            <RouteWithSubRoutes key={i} {...route} />\r\n          ))}\r\n          <Redirect from=\"/\" to=\"/dashboard\" />\r\n        </Switch>\r\n      </div>\r\n      {/* <div className=\"container-fluid p-0\">\r\n        <div className=\"row\">\r\n          <div className={pinSidebar ? \"col-md-2\" : \"sidebar-fixed\"}>\r\n            <Sidebar menuList={userRightListArr} show={showSideBar} />\r\n          </div>\r\n          <div className={pinSidebar ? \"col-md-10\" : \"col-md-12\"}>\r\n            <Header onHeaderClick={() => setShowSidebar(!showSideBar)} />\r\n            <CustomBreadcrumb />\r\n            <Switch>\r\n              {routes.map((route, i) => (\r\n                <RouteWithSubRoutes key={i} {...route} />\r\n              ))}\r\n              <Redirect from=\"/\" to=\"/dashboard\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\nexport default MainLayout;\r\n\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./pages/Auth/Login\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MainLayout from \"./layouts/layout\";\nimport SwitchApp from \"./pages\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#d3d3d3\",\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#0066ff\",\n      main: \"#fff\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#ffcc00\",\n    },\n    custom: {\n      main: \"#ffffff\",\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n  typography: {\n    fontFamily: [\"Poppins\", \"sans-serif\"].join(\",\"),\n  },\n});\n\nfunction App() {\n  const isAuthorised = localStorage.getItem(\"login\");\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Switch>\n            {isAuthorised ? (\n              <MainLayout />\n            ) : (\n              <React.Fragment>\n                <Route path=\"/switch\" component={SwitchApp} />\n                <Route path=\"/login\" component={Login} />\n                <Redirect from=\"/\" to=\"/login\" />\n              </React.Fragment>\n            )}\n          </Switch>\n        </BrowserRouter>\n      </ThemeProvider>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../actions/auth.action\";\r\nconst initialState = {\r\n    isAuthenticated:false,\r\n    token:null,\r\n    loadingStatus:false,\r\n    responseMessage:'',\r\n    isValidCred:false,\r\n    getOtpResponse:{},\r\n    decryptUserDetails:null\r\n}\r\nexport const authReducer = createReducer(initialState, {\r\n    [actions.requestStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.loadingStatus = action.payload;\r\n    }),\r\n    [actions.checkAuthCredResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isValidCred = action.payload.valid;\r\n            draft.responseMessage = action.payload.valid ? \"\" : \"Username or Password is not correct\"\r\n    }),\r\n    [actions.checkAuthOTPResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            console.log(action.payload)\r\n             if(action.payload.access_token){\r\n                 draft.getOtpResponse.valid = true;\r\n                 draft.getOtpResponse.access_token = action.payload.access_token;\r\n                 draft.getOtpResponse.expires_in = action.payload.expires_in;\r\n                 draft.getOtpResponse['.issued'] = action.payload['.issued'];\r\n                 draft.getOtpResponse['.expires'] = action.payload['.expires'];\r\n                 draft.getOtpResponse.userId = action.payload.userId;\r\n                 draft.getOtpResponse.userName = action.payload.userName;\r\n                 draft.getOtpResponse.code = action.payload.code;\r\n                 draft.getOtpResponse.encrypt_userId = action.payload.encrypt_userId;\r\n             }\r\n             else{\r\n                draft.getOtpResponse.valid = false;\r\n                draft.getOtpResponse.message = \"OTP is incorrect\";\r\n             }\r\n    }),\r\n    [actions.getDecryptUserId.toString()]: (state, action) =>\r\n    produce (state, (draft) => {}),\r\n    [actions.getDecryptUserIdResponse.toString()]: (state, action) =>\r\n    produce (state, (draft) => {\r\n        draft.decryptUserDetails = action.payload;\r\n    }),\r\n});","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../actions/common.action\";\r\nconst initialState = {\r\n  updateFilterData:{},\r\n  getFilterData:{},\r\n  userRightListSecond: [],\r\n  userRightListThird: [],\r\n  userRightList: [],\r\n  menuId: null,\r\n  subMenuId: null,\r\n  filterList: null,\r\n};\r\nexport const commonReducer = createReducer(initialState, {\r\n[actions.getFilterDataResponse.toString()]:(state,action)=>\r\nproduce(state,draft=>{\r\n  draft.getFilterData=action.payload\r\n})\r\n,\r\n[actions.updateFilterDataResponse.toString()]:(state,action)=>\r\nproduce(state,draft=>{\r\n  draft.updateFilterData=action.payload\r\n})\r\n,\r\n\r\n  [actions.getUserRightListSecondResponse.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.userRightListSecond = action.payload;\r\n    }),\r\n  [actions.getUserRightListThirdResponse.toString()]: (state, action) =>\r\n  produce(state,(draft)=>{\r\n    draft.userRightListThird=action.payload;\r\n  })\r\n  ,\r\n  [actions.getUserRightListResponse.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.userRightList = action.payload;\r\n    }),\r\n  [actions.selectedMenuResponse.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.menuId = action.payload;\r\n    }),\r\n  [actions.selectedSubMenuResponse.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.subMenuId = action.payload;\r\n    }),\r\n  [actions.getUserFilterList.toString()]: (state, action) =>\r\n    produce(state, (draft) => {}),\r\n  [actions.getUserFilterListSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.filterList = action.payload;\r\n    }),\r\n});\r\n","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport * as actions from \"../../actions/masters/account.action\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  searchAccountMasterData:[],\r\n  accountFilterList:[],\r\n  selectedAccountDetails: null,\r\n};\r\nexport const AccountMasterReducer = createReducer(initialState, {\r\n  [actions.searchAccountMasterData.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.searchAccountMasterDataSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.searchAccountMasterData = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.getAccountMasterFiltersList.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.getAccountMasterFiltersListSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.accountFilterList = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.previewSelectedAccount.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.previewSelectedAccountSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedAccountDetails = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.clearSelectedAccount.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedAccountDetails = null;\r\n    }),\r\n  [actions.setAccountHide.toString()]: (state, action) =>\r\n    produce(state, (draft) => {}),\r\n  [actions.setAccountVerified.toString()]: (state, action) =>\r\n    produce(state, (draft) => {}),\r\n});\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAccountGroupBrowse = createAction(\r\n    \"GET_ACCOUNT_GROUP_BROWSE\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const getAccountGroupBrowseSuccess = createAction(\r\n    \"GET_ACCOUNT_GROUP_BROWSE_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const insertAccountMaster = createAction(\r\n    \"INSERT_ACCOUNT_MASTER\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\n\r\nexport const selectedConfigGroup = createAction(\r\n    \"SET_CONFIG_GROUP_INFO\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const clearSelectedConfigGroup = createAction(\r\n    \"CLEAR_CONFIG_GROUP_INFO\"\r\n);\r\n\r\nexport const updateAccountGroupInfo = createAction(\r\n    \"UPDATE_ACCOUNT_GROUP_INFO\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const updateAccountGroupInfoSuccess = createAction(\r\n    \"UPDATE_ACCOUNT_GROUP_INFO_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const clearAccountGroupInfoResponse = createAction(\r\n    \"CLEAR_ACCOUNT_INFO_RESPONSE\"\r\n);\r\n\r\nexport const getPincodeBrowseList = createAction(\r\n    \"GET_PINCODE_BROWSE_LIST\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const getPincodeBrowseListSuccess = createAction(\r\n    \"GET_PINCODE_BROWSE_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const selectedPincodeInfo = createAction(\r\n    \"SET_SELECTED_PINCODE\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const clearSelectedPincode = createAction(\r\n    \"CLEAR_PINCODE_INFO\"\r\n);\r\n\r\nexport const updatePincodeInfo = createAction(\r\n    \"UPDATE_PINCODE_INFO\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const updatePincodeInfoSuccess = createAction(\r\n    \"UPDATE_PINCODE_INFO_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\nexport const clearPincodeInfoResponse = createAction(\r\n    \"CLEAR_PINCODE_INFO_RESPONSE\"\r\n);\r\n\r\nexport const deleteSelectedPincode = createAction(\r\n    \"DELETE_CONFIG_PINCODE\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const deleteSelectedPincodeSuccess = createAction(\r\n    \"DELETE_CONFIG_PINCODE_SUCCESS\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\n\r\nexport const getConfigRegionList = createAction(\r\n    \"FETCH_CONFIG_REGION_LIST\",\r\n    (params) => ({\r\n        payload: {params},\r\n    }),\r\n);\r\n\r\nexport const getConfigRegionListSuccess = createAction(\r\n    \"FETCH_CONFIG_REGION_LIST_SUCCESS\",\r\n    (data) => ({\r\n        payload: data,\r\n    }),\r\n);\r\n\r\n\r\n","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../../actions/masters/configuration.action\";\r\n\r\nconst initialState = {\r\n    isLoading:false,\r\n    groupList:null,\r\n    groupInfo:null,\r\n    groupResponse:null,\r\n    pincodeList:null,\r\n    pincodeInfo:null,\r\n    pincodeResponse:null\r\n   \r\n}\r\n\r\n\r\nexport const ConfigurationMasterReducer = createReducer(initialState, {\r\n    [actions.getAccountGroupBrowse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getAccountGroupBrowseSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.selectedConfigGroup.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupInfo = action.payload;\r\n    }),\r\n    [actions.clearSelectedConfigGroup.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupInfo = null;\r\n    }),\r\n    [actions.updateAccountGroupInfo.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.updateAccountGroupInfoSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupResponse = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.clearAccountGroupInfoResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupResponse = null;\r\n    }),\r\n    [actions.getPincodeBrowseList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getPincodeBrowseListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.clearSelectedConfigGroup.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.groupInfo = null;\r\n    }),\r\n    [actions.selectedPincodeInfo.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeInfo = action.payload;\r\n    }),\r\n    [actions.updatePincodeInfo.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.updateAccountGroupInfoSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeResponse = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.clearSelectedPincode.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeInfo = null;\r\n    }),\r\n    [actions.clearPincodeInfoResponse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeResponse = null;\r\n    }),\r\n    [actions.deleteSelectedPincode.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.deleteSelectedPincodeSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.pincodeResponse = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    \r\n}); ","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../../actions/masters/product.action\";\r\n\r\nconst initialState = {\r\n    isLoading:false,\r\n    productList:null,\r\n    categoryList:null,\r\n    lpRefList:null,\r\n    ggNameList:null\r\n}\r\n\r\n\r\nexport const ProductMasterReducer = createReducer(initialState, {\r\n    [actions.getProductListBrowse.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getProductListBrowseSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.productList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getCategoryList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getCategoryListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.categoryList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.getLPRefList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getLPRefListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.lpRefList = action.payload;\r\n    }),\r\n    [actions.getGGNameList.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.getGGNameListSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = false;\r\n            draft.ggNameList = action.payload;\r\n    }),\r\n    [actions.updateProductVerifiedStatus.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductVerifiedStatusSuccess.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            draft.ggNameList = action.payload;\r\n            draft.isLoading = false;\r\n    }),\r\n    [actions.updateProductListPrice.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductLPRef.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    }),\r\n    [actions.updateProductMovingNonMoving.toString()]: (state, action) =>\r\n        produce (state, (draft) => {\r\n            // draft.isLoading = true;\r\n    })\r\n}); ","import produce from \"immer\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../../actions/masters/materialcode.action\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  browseListData: null,\r\n  partyNameList: [],\r\n  selectedMaterialId: null,\r\n};\r\n\r\nexport const MaterialCodeMasterReducer = createReducer(initialState, {\r\n  [actions.searchMaterialCodeData.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.isLoading = true;\r\n    }),\r\n  [actions.searchMaterialCodeDataSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.browseListData = action.payload;\r\n      draft.isLoading = false;\r\n    }),\r\n  [actions.searchPartyNameSuccess.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.partyNameList = action.payload;\r\n    }),\r\n  [actions.materialCodeEditId.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedMaterialId = action.payload;\r\n    }),\r\n  [actions.clearMaterialCodeEditId.toString()]: (state, action) =>\r\n    produce(state, (draft) => {\r\n      draft.selectedMaterialId = null;\r\n    }),\r\n});\r\n","import produce from \"immer\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"../../actions/masters/all.action\";\n\nconst initialState = {\n  comboMLFBId: null,\n  godownId: null,\n  itemGroupId: null,\n  employeeId: null,\n  productId: null,\n  accountId: null,\n};\n\nexport const AllReducers = createReducer(initialState, {\n  [actions.selectedComboMLFBId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.comboMLFBId = action.payload;\n    }),\n  [actions.clearSelectedComboId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.comboMLFBId = null;\n    }),\n  [actions.selectedGodownId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.godownId = action.payload;\n    }),\n  [actions.clearSelectedGodownId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.godownId = null;\n    }),\n  [actions.selectedItemGroupId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.itemGroupId = action.payload;\n    }),\n  [actions.clearSelectedItemGroupId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.itemGroupId = null;\n    }),\n  [actions.selectedEmployeeId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.employeeId = action.payload;\n    }),\n  [actions.clearSelectedEmployeeId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.employeeId = null;\n    }),\n  [actions.selectedProductId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.productId = action.payload;\n    }),\n  [actions.clearSelectedProductId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.productId = null;\n    }),\n  [actions.selectedAccountId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.accountId = action.payload;\n    }),\n  [actions.clearSelectedAccountId.toString()]: (state, action) =>\n    produce(state, (draft) => {\n      draft.accountId = null;\n    }),\n});\n","import { authReducer } from \"./auth.reducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { commonReducer } from \"./common.reducer\";\r\nimport { AccountMasterReducer } from \"../reducers/Masters/account.reducer\";\r\nimport { ConfigurationMasterReducer } from \"./Masters/configuration.reducer\";\r\nimport { ProductMasterReducer } from \"./Masters/product.reducer\";\r\nimport { MaterialCodeMasterReducer } from \"./Masters/materialcode.reducer\";\r\nimport { AllReducers } from \"./Masters/all.reducer\";\r\nconst createRootReducer = () =>\r\n  combineReducers({\r\n    auth: authReducer,\r\n    common: commonReducer,\r\n    AccountMaster: AccountMasterReducer,\r\n    ConfigurationMaster: ConfigurationMasterReducer,\r\n    ProductMaster: ProductMasterReducer,\r\n    MaterialCodeMaster: MaterialCodeMasterReducer,\r\n    AllReducersMaster: AllReducers,\r\n  });\r\n\r\nexport default createRootReducer;\r\n","import { userService } from \"../../services\";\r\n\r\nexport const AuthController = {\r\n    checkUserCred,\r\n    checkAuthOTP,\r\n    getDecryptUserDetails\r\n}\r\n\r\n\r\nasync function checkUserCred(payload) {\r\n    try {\r\n        let apiEndpoint = `Login/CheckLoging`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function checkAuthOTP(payload) {\r\n    try {\r\n        let apiEndpoint = `Auth/token`;\r\n\r\n        let response = await userService.login(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getDecryptUserDetails(payload) {\r\n    try {\r\n        let apiEndpoint = `Login/UserLoginByEncryptUserId`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n ","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { checkAuthCred , requestStatus , checkAuthCredResponse, checkAuthOTP , checkAuthOTPResponse, getDecryptUserIdResponse, getDecryptUserId } from '../actions/auth.action';\r\nimport { AuthController } from \"../controller/auth.controller\";\r\n\r\n\r\nfunction* CheckUserCredSaga (action) {\r\n    try {   \r\n        yield put(requestStatus(true));\r\n        const _checkUserCred = yield AuthController.checkUserCred(action.payload);\r\n        yield put(checkAuthCredResponse(_checkUserCred));\r\n        yield put(requestStatus(false));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(checkAuthCredResponse(error));\r\n    }\r\n}\r\n\r\nfunction* CheckUserCredOTP (action) {\r\n    try {\r\n        const _checkUserOtp = yield AuthController.checkAuthOTP(action.payload);\r\n        yield put(checkAuthOTPResponse(_checkUserOtp));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(checkAuthOTPResponse(error));\r\n    }\r\n}\r\n\r\nfunction* getDecryptUserIdSaga (action) {\r\n    try {\r\n        const decryptUserDetails = yield AuthController.getDecryptUserDetails(action.payload);\r\n        yield put(getDecryptUserIdResponse(decryptUserDetails));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getDecryptUserIdResponse(error));\r\n    }\r\n}\r\n\r\n\r\nexport default function* AuthSaga () {\r\n    try {\r\n        yield takeLatest(checkAuthCred, CheckUserCredSaga);\r\n        yield takeLatest(checkAuthOTP, CheckUserCredOTP);\r\n        yield takeLatest(getDecryptUserId, getDecryptUserIdSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserRightList , getUserRightListResponse, setSelectedMenu, \r\n    selectedMenuResponse, setSelectedSubMenu, selectedSubMenuResponse, getUserFilterListSuccess,\r\n     getUserFilterList, getUserRightListSecond, getUserRightListThird, getUserRightListSecondResponse,\r\n      getUserRightListThirdResponse, \r\n      getFilterData,\r\n      getFilterDataResponse,\r\n      updateFilterData,\r\n      updateFilterDataResponse} from '../actions/common.action';\r\nimport { CommonController } from \"../controller/common.controller\";\r\n\r\nfunction* updateFilterDataSaga(action){\r\n    try {   \r\n      const updateFilterData=  yield CommonController.updateFilterData(action.payload);\r\n        yield put(updateFilterDataResponse(updateFilterData));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(updateFilterDataResponse(error));\r\n    }\r\n}\r\nfunction* getfilterDataSaga(action){\r\n    try {   \r\n      const filterData=  yield CommonController.getFilterData(action.payload);\r\n        yield put(getFilterDataResponse(filterData));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getFilterDataResponse(error));\r\n    }\r\n}\r\nfunction* fetchUserRightListSecond(action){\r\n    try {   \r\n      const second=  yield CommonController.getUserRightsListSecond(action.payload);\r\n        yield put(getUserRightListSecondResponse(second));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getUserRightListSecondResponse(error));\r\n    }\r\n}\r\n\r\nfunction* fetchUserRightListThird(action){\r\n    try {   \r\n     const third=yield CommonController.getUserRightsListThird(action.payload);\r\n     yield put(getUserRightListThirdResponse(third));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getUserRightListThirdResponse(error));\r\n    }\r\n}\r\nfunction* fetchUserRightListSaga () {\r\n\r\n    try {   \r\n        const _checkUserCred = yield CommonController.getUserRightsList();\r\n        yield put(getUserRightListResponse(_checkUserCred));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getUserRightListResponse(error));\r\n    }\r\n}\r\n\r\nfunction* setSelectedMenuSaga (action) {\r\n    try {\r\n        yield put(selectedMenuResponse(action.payload));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(selectedMenuResponse(error));\r\n    }\r\n}\r\n\r\nfunction* setSelectedSubMenuSaga (action) {\r\n    try {\r\n        yield put(selectedSubMenuResponse(action.payload));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(selectedSubMenuResponse(error));\r\n    }\r\n}\r\n\r\nfunction* getCurrentUserFiltersSaga (action) {\r\n    try {\r\n        const response = yield CommonController.getUserFilterList();\r\n        yield put(getUserFilterListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getUserFilterListSuccess(error));\r\n    }\r\n}\r\nexport default function* CommonSaga () {\r\n    try {\r\n        yield takeLatest(updateFilterData, updateFilterDataSaga);\r\n        yield takeLatest(getFilterData, getfilterDataSaga);\r\n        yield takeLatest(getUserRightList, fetchUserRightListSaga);\r\n        yield takeLatest(getUserRightListSecond, fetchUserRightListSecond);\r\n        yield takeLatest(getUserRightListThird, fetchUserRightListThird);\r\n        yield takeLatest(setSelectedMenu, setSelectedMenuSaga);\r\n        yield takeLatest(setSelectedSubMenu, setSelectedSubMenuSaga);\r\n        yield takeLatest(getUserFilterList, getCurrentUserFiltersSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","import { userService } from \"../../../services\";\r\nexport const AccountMasterController = {\r\n    browseAccountData,\r\n    getAccountMasterFilters,\r\n    getSelectedAccountDetails,\r\n    accountHideUpdate,\r\n    updateAccountVerified\r\n}\r\nasync function browseAccountData(filters,params) {\r\n    try {\r\n        let apiEndpoint = `master/browse_account_master?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint,filters,\"node\");\r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\nasync function getAccountMasterFilters() {\r\n    try {\r\n        let apiEndpoint = `master/listGroupFilterMarketingEngg`;\r\n        let response = await userService.post(apiEndpoint,{},\"node\");\r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\nasync function getSelectedAccountDetails(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/AccountMasterPreview`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\nasync function accountHideUpdate(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountHide`;\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\nasync function updateAccountVerified(payload) {\r\n    try {\r\n        let apiEndpoint = `Account/UpdateAccountEdit`;\r\n\r\n        let response = await userService.post(apiEndpoint,payload);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n ","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { AccountMasterController } from \"../../controller/Masters/account.controller\";\r\nimport { getAccountMasterFiltersList, getAccountMasterFiltersListSuccess, previewSelectedAccount, previewSelectedAccountSuccess, searchAccountMasterData, searchAccountMasterDataSuccess, setAccountHide, setAccountVerified } from '../../actions/masters/account.action';\r\nfunction* searchAccountMasterSaga (action) {\r\n    try {   \r\n        const browseAccountMaster = yield AccountMasterController.browseAccountData(action.payload.filters, action.payload.params);\r\n        yield put(searchAccountMasterDataSuccess(browseAccountMaster));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(searchAccountMasterDataSuccess(error));\r\n    }\r\n}\r\nfunction* getAccountFilterSaga (action) {\r\n    try {   \r\n        const filterList = yield AccountMasterController.getAccountMasterFilters();\r\n        yield put(getAccountMasterFiltersListSuccess(filterList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getAccountMasterFiltersListSuccess(error));\r\n    }\r\n}\r\nfunction* previewSelectedAccountSaga (action) {\r\n    try {   \r\n        const accountDetails = yield AccountMasterController.getSelectedAccountDetails(action.payload);\r\n        yield put(previewSelectedAccountSuccess(accountDetails));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nfunction* setAccountHideSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.accountHideUpdate(action.payload);\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nfunction* setAccountVerifiedSaga (action) {\r\n    try {   \r\n        const accountEdit = yield AccountMasterController.updateAccountVerified(action.payload);\r\n        if(!accountEdit.valid){\r\n            alert(\"something went wrong\");\r\n        }\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(previewSelectedAccountSuccess(error));\r\n    }\r\n}\r\nexport default function* AccountMasterSaga () {\r\n    try {\r\n        yield takeLatest(searchAccountMasterData, searchAccountMasterSaga);\r\n        yield takeLatest(getAccountMasterFiltersList, getAccountFilterSaga);\r\n        yield takeLatest(previewSelectedAccount, previewSelectedAccountSaga);\r\n        yield takeLatest(setAccountHide, setAccountHideSaga);\r\n        yield takeLatest(setAccountVerified, setAccountVerifiedSaga);\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","import { userService } from \"../../../services\";\r\n\r\nexport const ConfigurationMasterController = {\r\n    searchAccountGroupBrowse,\r\n    updateAccountGroupInfo,\r\n    searchPincodeBrowse,\r\n    updatePincodeInfo,\r\n    deleteSelectedPincode\r\n}\r\n\r\n\r\nasync function searchAccountGroupBrowse(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateAccountGroupInfo(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationGroupInsert`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function searchPincodeBrowse(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n \r\n\r\nasync function updatePincodeInfo(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeInsert`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function deleteSelectedPincode(params) {\r\n    try {\r\n        let apiEndpoint = `Configuration/ConfigurationPincodeDelete`;\r\n        let response = await userService.post(apiEndpoint,params);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {  deleteSelectedPincode, deleteSelectedPincodeSuccess, getAccountGroupBrowse, getAccountGroupBrowseSuccess, getCategoryList, getCategoryListSuccess, getPincodeBrowseList, getPincodeBrowseListSuccess, updateAccountGroupInfo, updateAccountGroupInfoSuccess, updatePincodeInfo } from \"../../actions/masters/configuration.action\";\r\n\r\nimport { ConfigurationMasterController } from \"../../controller/Masters/configuration.controller\";\r\n\r\nfunction* getAccountGroupBrowseSaga (action) {\r\n    try {   \r\n        const accountGroupList = yield ConfigurationMasterController.searchAccountGroupBrowse(action.payload.params);\r\n        yield put(getAccountGroupBrowseSuccess(accountGroupList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getAccountGroupBrowseSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateAccountGroupInfoSaga (action) {\r\n    try {   \r\n        const updateAccountInfo = yield ConfigurationMasterController.updateAccountGroupInfo(action.payload.params);\r\n        yield put(updateAccountGroupInfoSuccess(updateAccountInfo));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(updateAccountGroupInfoSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getPincodeBrowseSaga (action) {\r\n    try {   \r\n        const pincodeList = yield ConfigurationMasterController.searchPincodeBrowse(action.payload.params);\r\n        yield put(getPincodeBrowseListSuccess(pincodeList));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getPincodeBrowseListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updatePincodeInfoSaga (action) {\r\n    try {   \r\n        const updateAccountInfo = yield ConfigurationMasterController.updatePincodeInfo(action.payload.params);\r\n        yield put(updateAccountGroupInfoSuccess(updateAccountInfo));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(updateAccountGroupInfoSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* deletePincodeInfoSaga (action) {\r\n    try {   \r\n        const response = yield ConfigurationMasterController.deleteSelectedPincode(action.payload.params);\r\n        yield put(deleteSelectedPincodeSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(deleteSelectedPincodeSuccess(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default function* ConfigurationMasterSaga () {\r\n    try {\r\n        yield takeLatest(getAccountGroupBrowse, getAccountGroupBrowseSaga);\r\n        yield takeLatest(updateAccountGroupInfo, updateAccountGroupInfoSaga);   \r\n        yield takeLatest(getPincodeBrowseList, getPincodeBrowseSaga);   \r\n        yield takeLatest(updatePincodeInfo, updatePincodeInfoSaga);   \r\n        yield takeLatest(deleteSelectedPincode, deletePincodeInfoSaga);   \r\n\r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","import { userService } from \"../../../services\";\r\n\r\nexport const ProductMasterController = {\r\n     getProductBrowse,\r\n     getCategoryList,\r\n     getLPRefList,\r\n     getGGNameList,\r\n     updateProductVerifyStatus,\r\n     updateProductListPrice,\r\n     updateProductLpRef,\r\n     updateProductMovingNonMoving\r\n}\r\n\r\n\r\nasync function getProductBrowse(params , filters) {\r\n    try {\r\n        let apiEndpoint = `Product/ProductMasterBrowse?filter_value=${params.filter_value}&page_number=${params.pageNo}&page_size=${params.pageSize}&sort_column=${params.sort_column}&sort_order=${params.sort_order}`;\r\n        let response = await userService.post(apiEndpoint , filters);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getCategoryList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetCategoryList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function getLPRefList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetLpRefList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function getGGNameList() {\r\n    try {   \r\n        let apiEndpoint = `Dropdown/GetGGList`;\r\n        let response = await userService.post(apiEndpoint);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nasync function updateProductVerifyStatus(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductEdit`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function updateProductListPrice(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductListPrice`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nasync function updateProductLpRef(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductLPRef`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function updateProductMovingNonMoving(param) {\r\n    try {   \r\n        let apiEndpoint = `Product/UpdateProductMovingNonMoving`;\r\n        let response = await userService.post(apiEndpoint,param);\r\n        \r\n        if (response) {\r\n            return (response.data);\r\n        }\r\n        else {\r\n            if (response.data.status !== 500) {\r\n                alert(response.data);\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.log(\"error\", error);\r\n        return null;\r\n    }\r\n}\r\n","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport { getCategoryList, getCategoryListSuccess, getGGNameList, getGGNameListSuccess, getLPRefList, getLPRefListSuccess, getProductListBrowse, getProductListBrowseSuccess, updateProductListPrice, updateProductListPriceSuccess, updateProductLPRef, updateProductMovingNonMoving, updateProductVerifiedStatus } from \"../../actions/masters/product.action\";\r\nimport { ProductMasterController } from \"../../controller/Masters/product.controller\";\r\n\r\nfunction* getProductBrowseSaga (action) {\r\n    try {   \r\n        const listValue = yield ProductMasterController.getProductBrowse(action.payload.params, action.payload.filters);\r\n        yield put(getProductListBrowseSuccess(listValue));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getProductListBrowseSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getCategoryListSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.getCategoryList();\r\n        yield put(getCategoryListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getCategoryListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getLPRefListSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.getLPRefList();\r\n        yield put(getLPRefListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getLPRefListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* getGGNameListSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.getGGNameList();\r\n        yield put(getGGNameListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getGGNameListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductVerifiedStatusSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductVerifyStatus(action.payload.param);\r\n        yield put(getGGNameListSuccess(response));\r\n    } catch (error) {\r\n        yield null;\r\n        yield put(getGGNameListSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductListPriceSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductListPrice(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* updateProductLPRefSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductLpRef(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\nfunction* updateProductMovingSaga (action) {\r\n    try {   \r\n        const response = yield ProductMasterController.updateProductMovingNonMoving(action.payload.param);\r\n        yield null;\r\n    } catch (error) {\r\n        yield null;\r\n        // yield put(updateProductListPriceSuccess(error));\r\n    }\r\n}\r\n\r\n\r\nexport default function* ProductMasterSaga () {\r\n    try {\r\n        yield takeLatest(getProductListBrowse, getProductBrowseSaga);\r\n        yield takeLatest(getCategoryList, getCategoryListSaga);   \r\n        yield takeLatest(getLPRefList, getLPRefListSaga);   \r\n        yield takeLatest(getGGNameList, getGGNameListSaga);   \r\n        yield takeLatest(updateProductVerifiedStatus, updateProductVerifiedStatusSaga);   \r\n        yield takeLatest(updateProductListPrice, updateProductListPriceSaga);   \r\n        yield takeLatest(updateProductLPRef, updateProductLPRefSaga);   \r\n        yield takeLatest(updateProductMovingNonMoving, updateProductMovingSaga);   \r\n    }\r\n    catch(e){\r\n        yield null;\r\n    }\r\n}","import { put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  searchMaterialCodeData,\r\n  searchMaterialCodeDataSuccess,\r\n  searchPartyName,\r\n  searchPartyNameSuccess,\r\n} from \"../../actions/masters/materialcode.action\";\r\nimport { MaterialCodeMasterController } from \"../../controller/Masters/materialcode.controller\";\r\n\r\nfunction* getMaterialCodeBrowseSaga(action) {\r\n  try {\r\n    const listValue = yield MaterialCodeMasterController.getMaterialCodeBrowse(\r\n      action.payload.filters,\r\n      action.payload.params\r\n    );\r\n    yield put(searchMaterialCodeDataSuccess(listValue));\r\n  } catch (error) {\r\n    yield null;\r\n    yield put(searchMaterialCodeDataSuccess(error));\r\n  }\r\n}\r\n\r\nfunction* getPartyNameListSaga(action) {\r\n  try {\r\n    const listValue = yield MaterialCodeMasterController.getPartyNameList();\r\n    yield put(searchPartyNameSuccess(listValue));\r\n  } catch (error) {\r\n    yield null;\r\n    yield put(searchPartyNameSuccess(error));\r\n  }\r\n}\r\n\r\nexport default function* MaterialCodeMasterSaga() {\r\n  try {\r\n    yield takeLatest(searchMaterialCodeData, getMaterialCodeBrowseSaga);\r\n    yield takeLatest(searchPartyName, getPartyNameListSaga);\r\n  } catch (e) {\r\n    yield null;\r\n  }\r\n}\r\n","import AuthSaga from \"../middleware/auth.saga\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { all } from \"redux-saga/effects\";\r\nimport CommonSaga from \"./common.saga\";\r\nimport AccountMasterSaga from \"./Masters/account.saga\";\r\nimport ConfigurationMasterSaga from \"./Masters/configuration.saga\";\r\nimport ProductMasterSaga from \"./Masters/product.saga\";\r\nimport MaterialCodeMasterSaga from \"./Masters/materialcode.saga\";\r\nexport const sagaMiddleware = createSagaMiddleware();\r\nexport function* rootSaga () {\r\n    yield all([\r\n        AuthSaga(),\r\n        CommonSaga(),\r\n        AccountMasterSaga(),\r\n        ConfigurationMasterSaga(),\r\n        ProductMasterSaga(),\r\n        MaterialCodeMasterSaga()\r\n    ]);\r\n}\r\n    ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/css/style.bundle.min.css';\nimport './assets/css/style.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport createRootReducer from './_redux/reducers';\nimport { rootSaga, sagaMiddleware } from './_redux/middleware';\nimport { Provider } from 'react-redux';\n\nconst reducer = createRootReducer();\n\nconst store = createStore(reducer,applyMiddleware(sagaMiddleware))\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\r\n  baseUrl: \"https://diagapi.quickgst.in/\",\r\n  apiUrl: \"https://diagapi.quickgst.in/api/\",\r\n  nodeUrl: \"https://diagnodeapi.quickgst.in/\",\r\n  // nodeUrl: \"http://localhost:4000/\",\r\n  jsonUrl: \"http://localhost:9000/\",\r\n  // baseUrl:'http://admin.mistletoe.co.in/',\r\n  // apiUrl:'http://admin.mistletoe.co.in/api/'\r\n};\r\n"],"sourceRoot":""}